!function(){"use strict";void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t}),void 0===Math.sign&&(Math.sign=function(t){return t<0?-1:t>0?1:+t}),"name"in Function.prototype==!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(t){if(null==t)throw new TypeError("Cannot convert undefined or null to object");const e=Object(t);for(let t=1;t<arguments.length;t++){const n=arguments[t];if(null!=n)for(const t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e});const t=0,e=1,n=2,i=0,s=1,o=2,r=3;function a(){}Object.assign(a.prototype,{addEventListener:function(t,e){void 0===this.t&&(this.t={});const n=this.t;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this.t)return!1;const n=this.t;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this.t)return;const n=this.t[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}},dispatchEvent:function(t){if(void 0===this.t)return;const e=this.t[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t)}}});const c=[];for(let t=0;t<256;t++)c[t]=(t<16?"0":"")+t.toString(16);const h={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(c[255&t]+c[t>>8&255]+c[t>>16&255]+c[t>>24&255]+"-"+c[255&e]+c[e>>8&255]+"-"+c[e>>16&15|64]+c[e>>24&255]+"-"+c[63&n|128]+c[n>>8&255]+"-"+c[n>>16&255]+c[n>>24&255]+c[255&i]+c[i>>8&255]+c[i>>16&255]+c[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,s){return i+(t-e)*(s-i)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*h.DEG2RAD},radToDeg:function(t){return t*h.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,s){const o=Math.cos,r=Math.sin,a=o(n/2),c=r(n/2),h=o((e+i)/2),u=r((e+i)/2),l=o((e-i)/2),f=r((e-i)/2),d=o((i-e)/2),m=r((i-e)/2);switch(s){case"XYX":t.set(a*u,c*l,c*f,a*h);break;case"YZY":t.set(c*f,a*u,c*l,a*h);break;case"ZXZ":t.set(c*l,c*f,a*u,a*h);break;case"XZX":t.set(a*u,c*m,c*d,a*h);break;case"YXY":t.set(c*d,a*u,c*m,a*h);break;case"ZYZ":t.set(c*m,c*d,a*u,a*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}};function u(t=0,e=0){this.x=t,this.y=e}function l(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}let f;Object.defineProperties(u.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(u.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this},clampLength:function(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},cross:function(t){return this.x*t.y-this.y*t.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){return Math.atan2(-this.y,-this.x)+Math.PI},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){const n=Math.cos(e),i=Math.sin(e),s=this.x-t.x,o=this.y-t.y;return this.x=s*n-o*i+t.x,this.y=s*i+o*n+t.y,this},random:function(){return this.x=Math.random(),this.y=Math.random(),this}}),Object.assign(l.prototype,{isMatrix3:!0,set:function(t,e,n,i,s,o,r,a,c){const h=this.elements;return h[0]=t,h[1]=i,h[2]=r,h[3]=e,h[4]=s,h[5]=a,h[6]=n,h[7]=o,h[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this},extractBasis:function(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this},setFromMatrix4:function(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],r=n[3],a=n[6],c=n[1],h=n[4],u=n[7],l=n[2],f=n[5],d=n[8],m=i[0],p=i[3],v=i[6],g=i[1],_=i[4],w=i[7],E=i[2],b=i[5],M=i[8];return s[0]=o*m+r*g+a*E,s[3]=o*p+r*_+a*b,s[6]=o*v+r*w+a*M,s[1]=c*m+h*g+u*E,s[4]=c*p+h*_+u*b,s[7]=c*v+h*w+u*M,s[2]=l*m+f*g+d*E,s[5]=l*p+f*_+d*b,s[8]=l*v+f*w+d*M,this},multiplyScalar:function(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],r=t[5],a=t[6],c=t[7],h=t[8];return e*o*h-e*r*c-n*s*h+n*r*a+i*s*c-i*o*a},getInverse:function(t,e){void 0!==e&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");const n=t.elements,i=this.elements,s=n[0],o=n[1],r=n[2],a=n[3],c=n[4],h=n[5],u=n[6],l=n[7],f=n[8],d=f*c-h*l,m=h*u-f*a,p=l*a-c*u,v=s*d+o*m+r*p;if(0===v)return this.set(0,0,0,0,0,0,0,0,0);const g=1/v;return i[0]=d*g,i[1]=(r*l-f*o)*g,i[2]=(h*o-r*c)*g,i[3]=m*g,i[4]=(f*s-r*u)*g,i[5]=(r*a-h*s)*g,i[6]=p*g,i[7]=(o*u-l*s)*g,i[8]=(c*s-o*a)*g,this},transpose:function(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,n,i,s,o,r){const a=Math.cos(s),c=Math.sin(s);this.set(n*a,n*c,-n*(a*o+c*r)+o+t,-i*c,i*a,-i*(-c*o+a*r)+r+e,0,0,1)},scale:function(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this},rotate:function(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,s=i[0],o=i[3],r=i[6],a=i[1],c=i[4],h=i[7];return i[0]=e*s+n*a,i[3]=e*o+n*c,i[6]=e*r+n*h,i[1]=-n*s+e*a,i[4]=-n*o+e*c,i[7]=-n*r+e*h,this},translate:function(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this},equals:function(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}});const d={getDataURL:function(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===f&&(f=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),f.width=t.width,f.height=t.height;const n=f.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=f}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let m=0;function p(t,e,n,i,s,o,r,a,c,f){Object.defineProperty(this,"id",{value:m++}),this.uuid=h.generateUUID(),this.name="",this.image=void 0!==t?t:p.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:p.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:1001,this.wrapT=void 0!==i?i:1001,this.magFilter=void 0!==s?s:1006,this.minFilter=void 0!==o?o:1008,this.anisotropy=void 0!==c?c:1,this.format=void 0!==r?r:1023,this.internalFormat=null,this.type=void 0!==a?a:1009,this.offset=new u(0,0),this.repeat=new u(1,1),this.center=new u(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new l,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==f?f:3e3,this.version=0,this.onUpdate=null}function v(t=0,e=0,n=0,i=1){this.x=t,this.y=e,this.z=n,this.w=i}function g(t,e,n){this.width=t,this.height=e,this.scissor=new v(0,0,t,e),this.scissorTest=!1,this.viewport=new v(0,0,t,e),n=n||{},this.texture=new p(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:1006,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0===n.stencilBuffer||n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}function _(t,e,n){g.call(this,t,e,n),this.samples=4}function w(t=0,e=0,n=0,i=1){this.u=t,this.m=e,this.v=n,this._=i}p.DEFAULT_IMAGE=void 0,p.DEFAULT_MAPPING=300,p.prototype=Object.assign(Object.create(a.prototype),{constructor:p,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=h.generateUUID()),!e&&void 0===t.images[i.uuid]){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)e.push(d.getDataURL(i[t]))}else e=d.getDataURL(i);t.images[i.uuid]={uuid:i.uuid,url:e}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(p.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.defineProperties(v.prototype,{width:{get:function(){return this.z},set:function(t){this.z=t}},height:{get:function(){return this.w},set:function(t){this.w=t}}}),Object.assign(v.prototype,{isVector4:!0,set:function(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){const e=this.x,n=this.y,i=this.z,s=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*s,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){let e,n,i,s;const o=t.elements,r=o[0],a=o[4],c=o[8],h=o[1],u=o[5],l=o[9],f=o[2],d=o[6],m=o[10];if(Math.abs(a-h)<.01&&Math.abs(c-f)<.01&&Math.abs(l-d)<.01){if(Math.abs(a+h)<.1&&Math.abs(c+f)<.1&&Math.abs(l+d)<.1&&Math.abs(r+u+m-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const t=(r+1)/2,o=(u+1)/2,p=(m+1)/2,v=(a+h)/4,g=(c+f)/4,_=(l+d)/4;return t>o&&t>p?t<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(t),i=v/n,s=g/n):o>p?o<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(o),n=v/i,s=_/i):p<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(p),n=g/s,i=_/s),this.set(n,i,s,3.141592653589793),this}let p=Math.sqrt((d-l)*(d-l)+(c-f)*(c-f)+(h-a)*(h-a));return Math.abs(p)<.001&&(p=1),this.x=(d-l)/p,this.y=(c-f)/p,this.z=(h-a)/p,this.w=Math.acos((r+u+m-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this},clampLength:function(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}),g.prototype=Object.assign(Object.create(a.prototype),{constructor:g,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),_.prototype=Object.assign(Object.create(g.prototype),{constructor:_,isWebGLMultisampleRenderTarget:!0,copy:function(t){return g.prototype.copy.call(this,t),this.samples=t.samples,this}}),Object.assign(w,{slerp:function(t,e,n,i){return n.copy(t).slerp(e,i)},slerpFlat:function(t,e,n,i,s,o,r){let a=n[i+0],c=n[i+1],h=n[i+2],u=n[i+3];const l=s[o+0],f=s[o+1],d=s[o+2],m=s[o+3];if(u!==m||a!==l||c!==f||h!==d){let t=1-r,e=a*l+c*f+h*d+u*m,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const s=Math.sqrt(i),o=Math.atan2(s,e*n);t=Math.sin(t*o)/s,r=Math.sin(r*o)/s}const s=r*n;if(a=a*t+l*s,c=c*t+f*s,h=h*t+d*s,u=u*t+m*s,t===1-r){const t=1/Math.sqrt(a*a+c*c+h*h+u*u);a*=t,c*=t,h*=t,u*=t}}t[e]=a,t[e+1]=c,t[e+2]=h,t[e+3]=u},multiplyQuaternionsFlat:function(t,e,n,i,s,o){const r=n[i],a=n[i+1],c=n[i+2],h=n[i+3],u=s[o],l=s[o+1],f=s[o+2],d=s[o+3];return t[e]=r*d+h*u+a*f-c*l,t[e+1]=a*d+h*l+c*u-r*f,t[e+2]=c*d+h*f+r*l-a*u,t[e+3]=h*d-r*u-a*l-c*f,t}}),Object.defineProperties(w.prototype,{x:{get:function(){return this.u},set:function(t){this.u=t,this.M()}},y:{get:function(){return this.m},set:function(t){this.m=t,this.M()}},z:{get:function(){return this.v},set:function(t){this.v=t,this.M()}},w:{get:function(){return this._},set:function(t){this._=t,this.M()}}}),Object.assign(w.prototype,{isQuaternion:!0,set:function(t,e,n,i){return this.u=t,this.m=e,this.v=n,this._=i,this.M(),this},clone:function(){return new this.constructor(this.u,this.m,this.v,this._)},copy:function(t){return this.u=t.x,this.m=t.y,this.v=t.z,this._=t.w,this.M(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t.u,i=t.m,s=t.v,o=t.order,r=Math.cos,a=Math.sin,c=r(n/2),h=r(i/2),u=r(s/2),l=a(n/2),f=a(i/2),d=a(s/2);switch(o){case"XYZ":this.u=l*h*u+c*f*d,this.m=c*f*u-l*h*d,this.v=c*h*d+l*f*u,this._=c*h*u-l*f*d;break;case"YXZ":this.u=l*h*u+c*f*d,this.m=c*f*u-l*h*d,this.v=c*h*d-l*f*u,this._=c*h*u+l*f*d;break;case"ZXY":this.u=l*h*u-c*f*d,this.m=c*f*u+l*h*d,this.v=c*h*d+l*f*u,this._=c*h*u-l*f*d;break;case"ZYX":this.u=l*h*u-c*f*d,this.m=c*f*u+l*h*d,this.v=c*h*d-l*f*u,this._=c*h*u+l*f*d;break;case"YZX":this.u=l*h*u+c*f*d,this.m=c*f*u+l*h*d,this.v=c*h*d-l*f*u,this._=c*h*u-l*f*d;break;case"XZY":this.u=l*h*u-c*f*d,this.m=c*f*u-l*h*d,this.v=c*h*d+l*f*u,this._=c*h*u+l*f*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return!1!==e&&this.M(),this},setFromAxisAngle:function(t,e){const n=e/2,i=Math.sin(n);return this.u=t.x*i,this.m=t.y*i,this.v=t.z*i,this._=Math.cos(n),this.M(),this},setFromRotationMatrix:function(t){const e=t.elements,n=e[0],i=e[4],s=e[8],o=e[1],r=e[5],a=e[9],c=e[2],h=e[6],u=e[10],l=n+r+u;if(l>0){const t=.5/Math.sqrt(l+1);this._=.25/t,this.u=(h-a)*t,this.m=(s-c)*t,this.v=(o-i)*t}else if(n>r&&n>u){const t=2*Math.sqrt(1+n-r-u);this._=(h-a)/t,this.u=.25*t,this.m=(i+o)/t,this.v=(s+c)/t}else if(r>u){const t=2*Math.sqrt(1+r-n-u);this._=(s-c)/t,this.u=(i+o)/t,this.m=.25*t,this.v=(a+h)/t}else{const t=2*Math.sqrt(1+u-n-r);this._=(o-i)/t,this.u=(s+c)/t,this.m=(a+h)/t,this.v=.25*t}return this.M(),this},setFromUnitVectors:function(t,e){let n=t.dot(e)+1;return n<1e-6?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this.u=-t.y,this.m=t.x,this.v=0,this._=n):(this.u=0,this.m=-t.z,this.v=t.y,this._=n)):(this.u=t.y*e.z-t.z*e.y,this.m=t.z*e.x-t.x*e.z,this.v=t.x*e.y-t.y*e.x,this._=n),this.normalize()},angleTo:function(t){return 2*Math.acos(Math.abs(h.clamp(this.dot(t),-1,1)))},rotateTowards:function(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this},inverse:function(){return this.conjugate()},conjugate:function(){return this.u*=-1,this.m*=-1,this.v*=-1,this.M(),this},dot:function(t){return this.u*t.u+this.m*t.m+this.v*t.v+this._*t._},lengthSq:function(){return this.u*this.u+this.m*this.m+this.v*this.v+this._*this._},length:function(){return Math.sqrt(this.u*this.u+this.m*this.m+this.v*this.v+this._*this._)},normalize:function(){let t=this.length();return 0===t?(this.u=0,this.m=0,this.v=0,this._=1):(t=1/t,this.u=this.u*t,this.m=this.m*t,this.v=this.v*t,this._=this._*t),this.M(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){const n=t.u,i=t.m,s=t.v,o=t._,r=e.u,a=e.m,c=e.v,h=e._;return this.u=n*h+o*r+i*c-s*a,this.m=i*h+o*a+s*r-n*c,this.v=s*h+o*c+n*a-i*r,this._=o*h-n*r-i*a-s*c,this.M(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this.u,i=this.m,s=this.v,o=this._;let r=o*t._+n*t.u+i*t.m+s*t.v;if(r<0?(this._=-t._,this.u=-t.u,this.m=-t.m,this.v=-t.v,r=-r):this.copy(t),r>=1)return this._=o,this.u=n,this.m=i,this.v=s,this;const a=1-r*r;if(a<=Number.EPSILON){const t=1-e;return this._=t*o+e*this._,this.u=t*n+e*this.u,this.m=t*i+e*this.m,this.v=t*s+e*this.v,this.normalize(),this.M(),this}const c=Math.sqrt(a),h=Math.atan2(c,r),u=Math.sin((1-e)*h)/c,l=Math.sin(e*h)/c;return this._=o*u+this._*l,this.u=n*u+this.u*l,this.m=i*u+this.m*l,this.v=s*u+this.v*l,this.M(),this},equals:function(t){return t.u===this.u&&t.m===this.m&&t.v===this.v&&t._===this._},fromArray:function(t,e){return void 0===e&&(e=0),this.u=t[e],this.m=t[e+1],this.v=t[e+2],this._=t[e+3],this.M(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.u,t[e+1]=this.m,t[e+2]=this.v,t[e+3]=this._,t},fromBufferAttribute:function(t,e){return this.u=t.getX(e),this.m=t.getY(e),this.v=t.getZ(e),this._=t.getW(e),this},T:function(t){return this.M=t,this},M:function(){}});const E=new M,b=new w;function M(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}Object.assign(M.prototype,{isVector3:!0,set:function(t,e,n){return this.x=t,this.y=e,this.z=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(b.setFromEuler(t))},applyAxisAngle:function(t,e){return this.applyQuaternion(b.setFromAxisAngle(t,e))},applyMatrix3:function(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6]*i,this.y=s[1]*e+s[4]*n+s[7]*i,this.z=s[2]*e+s[5]*n+s[8]*i,this},applyNormalMatrix:function(t){return this.applyMatrix3(t).normalize()},applyMatrix4:function(t){const e=this.x,n=this.y,i=this.z,s=t.elements,o=1/(s[3]*e+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*e+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*e+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*e+s[6]*n+s[10]*i+s[14])*o,this},applyQuaternion:function(t){const e=this.x,n=this.y,i=this.z,s=t.x,o=t.y,r=t.z,a=t.w,c=a*e+o*i-r*n,h=a*n+r*e-s*i,u=a*i+s*n-o*e,l=-s*e-o*n-r*i;return this.x=c*a+l*-s+h*-r-u*-o,this.y=h*a+l*-o+u*-s-c*-r,this.z=u*a+l*-r+c*-o-h*-s,this},project:function(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)},unproject:function(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)},transformDirection:function(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i,this.y=s[1]*e+s[5]*n+s[9]*i,this.z=s[2]*e+s[6]*n+s[10]*i,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this},clampLength:function(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this},cross:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)},crossVectors:function(t,e){const n=t.x,i=t.y,s=t.z,o=e.x,r=e.y,a=e.z;return this.x=i*a-s*r,this.y=s*o-n*a,this.z=n*r-i*o,this},projectOnVector:function(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)},projectOnPlane:function(t){return E.copy(this).projectOnVector(t),this.sub(E)},reflect:function(t){return this.sub(E.copy(t).multiplyScalar(2*this.dot(t)))},angleTo:function(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(h.clamp(n,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)},setFromSphericalCoords:function(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this},setFromCylindrical:function(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)},setFromCylindricalCoords:function(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this},setFromMatrixPosition:function(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},setFromMatrix3Column:function(t,e){return this.fromArray(t.elements,3*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}});const T=new M,x=new O,y=new M(0,0,0),S=new M(1,1,1),L=new M,R=new M,A=new M;function O(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(O.prototype,{isMatrix4:!0,set:function(t,e,n,i,s,o,r,a,c,h,u,l,f,d,m,p){const v=this.elements;return v[0]=t,v[4]=e,v[8]=n,v[12]=i,v[1]=s,v[5]=o,v[9]=r,v[13]=a,v[2]=c,v[6]=h,v[10]=u,v[14]=l,v[3]=f,v[7]=d,v[11]=m,v[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new O).fromArray(this.elements)},copy:function(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this},copyPosition:function(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this},extractBasis:function(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this},extractRotation:function(t){const e=this.elements,n=t.elements,i=1/T.setFromMatrixColumn(t,0).length(),s=1/T.setFromMatrixColumn(t,1).length(),o=1/T.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*s,e[5]=n[5]*s,e[6]=n[6]*s,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,i=t.y,s=t.z,o=Math.cos(n),r=Math.sin(n),a=Math.cos(i),c=Math.sin(i),h=Math.cos(s),u=Math.sin(s);if("XYZ"===t.order){const t=o*h,n=o*u,i=r*h,s=r*u;e[0]=a*h,e[4]=-a*u,e[8]=c,e[1]=n+i*c,e[5]=t-s*c,e[9]=-r*a,e[2]=s-t*c,e[6]=i+n*c,e[10]=o*a}else if("YXZ"===t.order){const t=a*h,n=a*u,i=c*h,s=c*u;e[0]=t+s*r,e[4]=i*r-n,e[8]=o*c,e[1]=o*u,e[5]=o*h,e[9]=-r,e[2]=n*r-i,e[6]=s+t*r,e[10]=o*a}else if("ZXY"===t.order){const t=a*h,n=a*u,i=c*h,s=c*u;e[0]=t-s*r,e[4]=-o*u,e[8]=i+n*r,e[1]=n+i*r,e[5]=o*h,e[9]=s-t*r,e[2]=-o*c,e[6]=r,e[10]=o*a}else if("ZYX"===t.order){const t=o*h,n=o*u,i=r*h,s=r*u;e[0]=a*h,e[4]=i*c-n,e[8]=t*c+s,e[1]=a*u,e[5]=s*c+t,e[9]=n*c-i,e[2]=-c,e[6]=r*a,e[10]=o*a}else if("YZX"===t.order){const t=o*a,n=o*c,i=r*a,s=r*c;e[0]=a*h,e[4]=s-t*u,e[8]=i*u+n,e[1]=u,e[5]=o*h,e[9]=-r*h,e[2]=-c*h,e[6]=n*u+i,e[10]=t-s*u}else if("XZY"===t.order){const t=o*a,n=o*c,i=r*a,s=r*c;e[0]=a*h,e[4]=-u,e[8]=c*h,e[1]=t*u+s,e[5]=o*h,e[9]=n*u-i,e[2]=i*u-n,e[6]=r*h,e[10]=s*u+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){return this.compose(y,t,S)},lookAt:function(t,e,n){const i=this.elements;return A.subVectors(t,e),0===A.lengthSq()&&(A.z=1),A.normalize(),L.crossVectors(n,A),0===L.lengthSq()&&(1===Math.abs(n.z)?A.x+=1e-4:A.z+=1e-4,A.normalize(),L.crossVectors(n,A)),L.normalize(),R.crossVectors(A,L),i[0]=L.x,i[4]=R.x,i[8]=A.x,i[1]=L.y,i[5]=R.y,i[9]=A.y,i[2]=L.z,i[6]=R.z,i[10]=A.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],r=n[4],a=n[8],c=n[12],h=n[1],u=n[5],l=n[9],f=n[13],d=n[2],m=n[6],p=n[10],v=n[14],g=n[3],_=n[7],w=n[11],E=n[15],b=i[0],M=i[4],T=i[8],x=i[12],y=i[1],S=i[5],L=i[9],R=i[13],A=i[2],O=i[6],C=i[10],P=i[14],D=i[3],H=i[7],N=i[11],I=i[15];return s[0]=o*b+r*y+a*A+c*D,s[4]=o*M+r*S+a*O+c*H,s[8]=o*T+r*L+a*C+c*N,s[12]=o*x+r*R+a*P+c*I,s[1]=h*b+u*y+l*A+f*D,s[5]=h*M+u*S+l*O+f*H,s[9]=h*T+u*L+l*C+f*N,s[13]=h*x+u*R+l*P+f*I,s[2]=d*b+m*y+p*A+v*D,s[6]=d*M+m*S+p*O+v*H,s[10]=d*T+m*L+p*C+v*N,s[14]=d*x+m*R+p*P+v*I,s[3]=g*b+_*y+w*A+E*D,s[7]=g*M+_*S+w*O+E*H,s[11]=g*T+_*L+w*C+E*N,s[15]=g*x+_*R+w*P+E*I,this},multiplyScalar:function(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},determinant:function(){const t=this.elements,e=t[0],n=t[4],i=t[8],s=t[12],o=t[1],r=t[5],a=t[9],c=t[13],h=t[2],u=t[6],l=t[10],f=t[14];return t[3]*(+s*a*u-i*c*u-s*r*l+n*c*l+i*r*f-n*a*f)+t[7]*(+e*a*f-e*c*l+s*o*l-i*o*f+i*c*h-s*a*h)+t[11]*(+e*c*u-e*r*f-s*o*u+n*o*f+s*r*h-n*c*h)+t[15]*(-i*r*h-e*a*u+e*r*l+i*o*u-n*o*l+n*a*h)},transpose:function(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},setPosition:function(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this},getInverse:function(t,e){void 0!==e&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");const n=this.elements,i=t.elements,s=i[0],o=i[1],r=i[2],a=i[3],c=i[4],h=i[5],u=i[6],l=i[7],f=i[8],d=i[9],m=i[10],p=i[11],v=i[12],g=i[13],_=i[14],w=i[15],E=d*_*l-g*m*l+g*u*p-h*_*p-d*u*w+h*m*w,b=v*m*l-f*_*l-v*u*p+c*_*p+f*u*w-c*m*w,M=f*g*l-v*d*l+v*h*p-c*g*p-f*h*w+c*d*w,T=v*d*u-f*g*u-v*h*m+c*g*m+f*h*_-c*d*_,x=s*E+o*b+r*M+a*T;if(0===x)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const y=1/x;return n[0]=E*y,n[1]=(g*m*a-d*_*a-g*r*p+o*_*p+d*r*w-o*m*w)*y,n[2]=(h*_*a-g*u*a+g*r*l-o*_*l-h*r*w+o*u*w)*y,n[3]=(d*u*a-h*m*a-d*r*l+o*m*l+h*r*p-o*u*p)*y,n[4]=b*y,n[5]=(f*_*a-v*m*a+v*r*p-s*_*p-f*r*w+s*m*w)*y,n[6]=(v*u*a-c*_*a-v*r*l+s*_*l+c*r*w-s*u*w)*y,n[7]=(c*m*a-f*u*a+f*r*l-s*m*l-c*r*p+s*u*p)*y,n[8]=M*y,n[9]=(v*d*a-f*g*a-v*o*p+s*g*p+f*o*w-s*d*w)*y,n[10]=(c*g*a-v*h*a+v*o*l-s*g*l-c*o*w+s*h*w)*y,n[11]=(f*h*a-c*d*a-f*o*l+s*d*l+c*o*p-s*h*p)*y,n[12]=T*y,n[13]=(f*g*r-v*d*r+v*o*m-s*g*m-f*o*_+s*d*_)*y,n[14]=(v*h*r-c*g*r-v*o*u+s*g*u+c*o*_-s*h*_)*y,n[15]=(c*d*r-f*h*r+f*o*u-s*d*u-c*o*m+s*h*m)*y,this},scale:function(t){const e=this.elements,n=t.x,i=t.y,s=t.z;return e[0]*=n,e[4]*=i,e[8]*=s,e[1]*=n,e[5]*=i,e[9]*=s,e[2]*=n,e[6]*=i,e[10]*=s,e[3]*=n,e[7]*=i,e[11]*=s,this},getMaxScaleOnAxis:function(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))},makeTranslation:function(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this},makeRotationX:function(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this},makeRotationY:function(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this},makeRotationZ:function(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){const n=Math.cos(e),i=Math.sin(e),s=1-n,o=t.x,r=t.y,a=t.z,c=s*o,h=s*r;return this.set(c*o+n,c*r-i*a,c*a+i*r,0,c*r+i*a,h*r+n,h*a-i*o,0,c*a-i*r,h*a+i*o,s*a*a+n,0,0,0,0,1),this},makeScale:function(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,n){const i=this.elements,s=e.u,o=e.m,r=e.v,a=e._,c=s+s,h=o+o,u=r+r,l=s*c,f=s*h,d=s*u,m=o*h,p=o*u,v=r*u,g=a*c,_=a*h,w=a*u,E=n.x,b=n.y,M=n.z;return i[0]=(1-(m+v))*E,i[1]=(f+w)*E,i[2]=(d-_)*E,i[3]=0,i[4]=(f-w)*b,i[5]=(1-(l+v))*b,i[6]=(p+g)*b,i[7]=0,i[8]=(d+_)*M,i[9]=(p-g)*M,i[10]=(1-(l+m))*M,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this},decompose:function(t,e,n){const i=this.elements;let s=T.set(i[0],i[1],i[2]).length(),o=T.set(i[4],i[5],i[6]).length(),r=T.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),t.x=i[12],t.y=i[13],t.z=i[14],x.copy(this);const a=1/s,c=1/o,h=1/r;return x.elements[0]*=a,x.elements[1]*=a,x.elements[2]*=a,x.elements[4]*=c,x.elements[5]*=c,x.elements[6]*=c,x.elements[8]*=h,x.elements[9]*=h,x.elements[10]*=h,e.setFromRotationMatrix(x),n.x=s,n.y=o,n.z=r,this},makePerspective:function(t,e,n,i,s,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const r=this.elements,a=2*s/(e-t),c=2*s/(n-i),h=(e+t)/(e-t),u=(n+i)/(n-i),l=-(o+s)/(o-s),f=-2*o*s/(o-s);return r[0]=a,r[4]=0,r[8]=h,r[12]=0,r[1]=0,r[5]=c,r[9]=u,r[13]=0,r[2]=0,r[6]=0,r[10]=l,r[14]=f,r[3]=0,r[7]=0,r[11]=-1,r[15]=0,this},makeOrthographic:function(t,e,n,i,s,o){const r=this.elements,a=1/(e-t),c=1/(n-i),h=1/(o-s),u=(e+t)*a,l=(n+i)*c,f=(o+s)*h;return r[0]=2*a,r[4]=0,r[8]=0,r[12]=-u,r[1]=0,r[5]=2*c,r[9]=0,r[13]=-l,r[2]=0,r[6]=0,r[10]=-2*h,r[14]=-f,r[3]=0,r[7]=0,r[11]=0,r[15]=1,this},equals:function(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}});const C=new O,P=new w;function D(t=0,e=0,n=0,i=D.DefaultOrder){this.u=t,this.m=e,this.v=n,this.S=i}function H(){this.mask=1}D.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],D.DefaultOrder="XYZ",Object.defineProperties(D.prototype,{x:{get:function(){return this.u},set:function(t){this.u=t,this.M()}},y:{get:function(){return this.m},set:function(t){this.m=t,this.M()}},z:{get:function(){return this.v},set:function(t){this.v=t,this.M()}},order:{get:function(){return this.S},set:function(t){this.S=t,this.M()}}}),Object.assign(D.prototype,{isEuler:!0,set:function(t,e,n,i){return this.u=t,this.m=e,this.v=n,this.S=i||this.S,this.M(),this},clone:function(){return new this.constructor(this.u,this.m,this.v,this.S)},copy:function(t){return this.u=t.u,this.m=t.m,this.v=t.v,this.S=t.S,this.M(),this},setFromRotationMatrix:function(t,e,n){const i=h.clamp,s=t.elements,o=s[0],r=s[4],a=s[8],c=s[1],u=s[5],l=s[9],f=s[2],d=s[6],m=s[10];switch(e=e||this.S){case"XYZ":this.m=Math.asin(i(a,-1,1)),Math.abs(a)<.9999999?(this.u=Math.atan2(-l,m),this.v=Math.atan2(-r,o)):(this.u=Math.atan2(d,u),this.v=0);break;case"YXZ":this.u=Math.asin(-i(l,-1,1)),Math.abs(l)<.9999999?(this.m=Math.atan2(a,m),this.v=Math.atan2(c,u)):(this.m=Math.atan2(-f,o),this.v=0);break;case"ZXY":this.u=Math.asin(i(d,-1,1)),Math.abs(d)<.9999999?(this.m=Math.atan2(-f,m),this.v=Math.atan2(-r,u)):(this.m=0,this.v=Math.atan2(c,o));break;case"ZYX":this.m=Math.asin(-i(f,-1,1)),Math.abs(f)<.9999999?(this.u=Math.atan2(d,m),this.v=Math.atan2(c,o)):(this.u=0,this.v=Math.atan2(-r,u));break;case"YZX":this.v=Math.asin(i(c,-1,1)),Math.abs(c)<.9999999?(this.u=Math.atan2(-l,u),this.m=Math.atan2(-f,o)):(this.u=0,this.m=Math.atan2(a,m));break;case"XZY":this.v=Math.asin(-i(r,-1,1)),Math.abs(r)<.9999999?(this.u=Math.atan2(d,u),this.m=Math.atan2(a,o)):(this.u=Math.atan2(-l,m),this.m=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this.S=e,!1!==n&&this.M(),this},setFromQuaternion:function(t,e,n){return C.makeRotationFromQuaternion(t),this.setFromRotationMatrix(C,e,n)},setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this.S)},reorder:function(t){return P.setFromEuler(this),this.setFromQuaternion(P,t)},equals:function(t){return t.u===this.u&&t.m===this.m&&t.v===this.v&&t.S===this.S},fromArray:function(t){return this.u=t[0],this.m=t[1],this.v=t[2],void 0!==t[3]&&(this.S=t[3]),this.M(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.u,t[e+1]=this.m,t[e+2]=this.v,t[e+3]=this.S,t},toVector3:function(t){return t?t.set(this.u,this.m,this.v):new M(this.u,this.m,this.v)},T:function(t){return this.M=t,this},M:function(){}}),Object.assign(H.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},enableAll:function(){this.mask=-1},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},disableAll:function(){this.mask=0},test:function(t){return 0!=(this.mask&t.mask)}});let N=0;const I=new M,G=new w,U=new O,F=new M,B=new M,j=new M,k=new w,V=new M(1,0,0),W=new M(0,1,0),z=new M(0,0,1),X={type:"added"},Y={type:"removed"};function q(){Object.defineProperty(this,"id",{value:N++}),this.uuid=h.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=q.DefaultUp.clone();const t=new M,e=new D,n=new w,i=new M(1,1,1);e.T((function(){n.setFromEuler(e,!1)})),n.T((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new O},normalMatrix:{value:new l}}),this.matrix=new O,this.matrixWorld=new O,this.matrixAutoUpdate=q.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new H,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function Z(){q.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}q.DefaultUp=new M(0,1,0),q.DefaultMatrixAutoUpdate=!0,q.prototype=Object.assign(Object.create(a.prototype),{constructor:q,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return G.setFromAxisAngle(t,e),this.quaternion.multiply(G),this},rotateOnWorldAxis:function(t,e){return G.setFromAxisAngle(t,e),this.quaternion.premultiply(G),this},rotateX:function(t){return this.rotateOnAxis(V,t)},rotateY:function(t){return this.rotateOnAxis(W,t)},rotateZ:function(t){return this.rotateOnAxis(z,t)},translateOnAxis:function(t,e){return I.copy(t).applyQuaternion(this.quaternion),this.position.add(I.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(V,t)},translateY:function(t){return this.translateOnAxis(W,t)},translateZ:function(t){return this.translateOnAxis(z,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(U.getInverse(this.matrixWorld))},lookAt:function(t,e,n){t.isVector3?F.copy(t):F.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),B.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?U.lookAt(B,F,this.up):U.lookAt(F,B,this.up),this.quaternion.setFromRotationMatrix(U),i&&(U.extractRotation(i.matrixWorld),G.setFromRotationMatrix(U),this.quaternion.premultiply(G.inverse()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(X)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Y)),this},attach:function(t){return this.updateWorldMatrix(!0,!1),U.getInverse(this.matrixWorld),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),U.multiply(t.parent.matrixWorld)),t.applyMatrix4(U),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new M),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new w),this.updateMatrixWorld(!0),this.matrixWorld.decompose(B,t,j),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new M),this.updateMatrixWorld(!0),this.matrixWorld.decompose(B,k,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new M),this.updateMatrixWorld(!0);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function s(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){i.geometry=s(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];s(t.shapes,i)}else s(t.shapes,n)}}if(void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(s(t.materials,this.material[n]));i.material=e}else i.material=s(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(e){const e=o(t.geometries),i=o(t.materials),s=o(t.textures),r=o(t.images),a=o(t.shapes);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),s.length>0&&(n.textures=s),r.length>0&&(n.images=r),a.length>0&&(n.shapes=a)}return n.object=i,n;function o(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}),Z.prototype=Object.assign(Object.create(q.prototype),{constructor:Z,isScene:!0,copy:function(t,e){return q.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){const e=q.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e},dispose:function(){this.dispatchEvent({type:"dispose"})}});const J=[new M,new M,new M,new M,new M,new M,new M,new M],Q=new M,K=new ht,$=new M,tt=new M,et=new M,nt=new M,it=new M,st=new M,ot=new M,rt=new M,at=new M,ct=new M;function ht(t,e){this.min=void 0!==t?t:new M(1/0,1/0,1/0),this.max=void 0!==e?e:new M(-1/0,-1/0,-1/0)}function ut(t,e,n,i,s){for(let o=0,r=t.length-3;o<=r;o+=3){ct.fromArray(t,o);const r=s.x*Math.abs(ct.x)+s.y*Math.abs(ct.y)+s.z*Math.abs(ct.z),a=e.dot(ct),c=n.dot(ct),h=i.dot(ct);if(Math.max(-Math.max(a,c,h),Math.min(a,c,h))>r)return!1}return!0}Object.assign(ht.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){let e=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,r=-1/0;for(let a=0,c=t.length;a<c;a+=3){const c=t[a],h=t[a+1],u=t[a+2];c<e&&(e=c),h<n&&(n=h),u<i&&(i=u),c>s&&(s=c),h>o&&(o=h),u>r&&(r=u)}return this.min.set(e,n,i),this.max.set(s,o,r),this},setFromBufferAttribute:function(t){let e=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,r=-1/0;for(let a=0,c=t.count;a<c;a++){const c=t.getX(a),h=t.getY(a),u=t.getZ(a);c<e&&(e=c),h<n&&(n=h),u<i&&(i=u),c>s&&(s=c),h>o&&(o=h),u>r&&(r=u)}return this.min.set(e,n,i),this.max.set(s,o,r),this},setFromPoints:function(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(t,e){const n=Q.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this},setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new M),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new M),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),K.copy(e.boundingBox),K.applyMatrix4(t.matrixWorld),this.union(K));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new M),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(t){return this.clampPoint(t.center,Q),Q.distanceToSquared(t.center)<=t.radius*t.radius},intersectsPlane:function(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant},intersectsTriangle:function(t){if(this.isEmpty())return!1;this.getCenter(ot),rt.subVectors(this.max,ot),$.subVectors(t.a,ot),tt.subVectors(t.b,ot),et.subVectors(t.c,ot),nt.subVectors(tt,$),it.subVectors(et,tt),st.subVectors($,et);let e=[0,-nt.z,nt.y,0,-it.z,it.y,0,-st.z,st.y,nt.z,0,-nt.x,it.z,0,-it.x,st.z,0,-st.x,-nt.y,nt.x,0,-it.y,it.x,0,-st.y,st.x,0];return!!ut(e,$,tt,et,rt)&&(e=[1,0,0,0,1,0,0,0,1],!!ut(e,$,tt,et,rt)&&(at.crossVectors(nt,it),e=[at.x,at.y,at.z],ut(e,$,tt,et,rt)))},clampPoint:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new M),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){return Q.copy(t).clamp(this.min,this.max).sub(t).length()},getBoundingSphere:function(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(Q).length(),t},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(t){return this.isEmpty()||(J[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),J[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),J[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),J[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),J[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),J[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),J[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),J[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(J)),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});const lt=new ht;function ft(t,e){this.center=void 0!==t?t:new M,this.radius=void 0!==e?e:-1}Object.assign(ft.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(t,e){const n=this.center;void 0!==e?n.copy(e):lt.setFromPoints(t).getCenter(n);let i=0;for(let e=0,s=t.length;e<s;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},isEmpty:function(){return this.radius<0},makeEmpty:function(){return this.center.set(0,0,0),this.radius=-1,this},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new M),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new ht),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}});const dt=new M,mt=new M,pt=new M,vt=new M,gt=new M,_t=new M,wt=new M;function Et(t,e){this.origin=void 0!==t?t:new M,this.direction=void 0!==e?e:new M(0,0,-1)}Object.assign(Et.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new M),e.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(t){return this.origin.copy(this.at(t,dt)),this},closestPointToPoint:function(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new M),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(t){const e=dt.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(dt.copy(this.direction).multiplyScalar(e).add(this.origin),dt.distanceToSquared(t))},distanceSqToSegment:function(t,e,n,i){mt.copy(t).add(e).multiplyScalar(.5),pt.copy(e).sub(t).normalize(),vt.copy(this.origin).sub(mt);const s=.5*t.distanceTo(e),o=-this.direction.dot(pt),r=vt.dot(this.direction),a=-vt.dot(pt),c=vt.lengthSq(),h=Math.abs(1-o*o);let u,l,f,d;if(h>0)if(u=o*a-r,l=o*r-a,d=s*h,u>=0)if(l>=-d)if(l<=d){const t=1/h;u*=t,l*=t,f=u*(u+o*l+2*r)+l*(o*u+l+2*a)+c}else l=s,u=Math.max(0,-(o*l+r)),f=-u*u+l*(l+2*a)+c;else l=-s,u=Math.max(0,-(o*l+r)),f=-u*u+l*(l+2*a)+c;else l<=-d?(u=Math.max(0,-(-o*s+r)),l=u>0?-s:Math.min(Math.max(-s,-a),s),f=-u*u+l*(l+2*a)+c):l<=d?(u=0,l=Math.min(Math.max(-s,-a),s),f=l*(l+2*a)+c):(u=Math.max(0,-(o*s+r)),l=u>0?s:Math.min(Math.max(-s,-a),s),f=-u*u+l*(l+2*a)+c);else l=o>0?-s:s,u=Math.max(0,-(o*l+r)),f=-u*u+l*(l+2*a)+c;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),i&&i.copy(pt).multiplyScalar(l).add(mt),f},intersectSphere:function(t,e){dt.subVectors(t.center,this.origin);const n=dt.dot(this.direction),i=dt.dot(dt)-n*n,s=t.radius*t.radius;if(i>s)return null;const o=Math.sqrt(s-i),r=n-o,a=n+o;return r<0&&a<0?null:r<0?this.at(a,e):this.at(r,e)},intersectsSphere:function(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius},distanceToPlane:function(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null},intersectPlane:function(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)},intersectsPlane:function(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0},intersectBox:function(t,e){let n,i,s,o,r,a;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,l=this.origin;return c>=0?(n=(t.min.x-l.x)*c,i=(t.max.x-l.x)*c):(n=(t.max.x-l.x)*c,i=(t.min.x-l.x)*c),h>=0?(s=(t.min.y-l.y)*h,o=(t.max.y-l.y)*h):(s=(t.max.y-l.y)*h,o=(t.min.y-l.y)*h),n>o||s>i?null:((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),u>=0?(r=(t.min.z-l.z)*u,a=(t.max.z-l.z)*u):(r=(t.max.z-l.z)*u,a=(t.min.z-l.z)*u),n>a||r>i?null:((r>n||n!=n)&&(n=r),(a<i||i!=i)&&(i=a),i<0?null:this.at(n>=0?n:i,e)))},intersectsBox:function(t){return null!==this.intersectBox(t,dt)},intersectTriangle:function(t,e,n,i,s){gt.subVectors(e,t),_t.subVectors(n,t),wt.crossVectors(gt,_t);let o,r=this.direction.dot(wt);if(r>0){if(i)return null;o=1}else{if(!(r<0))return null;o=-1,r=-r}vt.subVectors(this.origin,t);const a=o*this.direction.dot(_t.crossVectors(vt,_t));if(a<0)return null;const c=o*this.direction.dot(gt.cross(vt));if(c<0)return null;if(a+c>r)return null;const h=-o*vt.dot(wt);return h<0?null:this.at(h/r,s)},applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}});const bt=new M,Mt=new M,Tt=new l;function xt(t,e){this.normal=void 0!==t?t:new M(1,0,0),this.constant=void 0!==e?e:0}Object.assign(xt.prototype,{isPlane:!0,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(t,e,n){const i=bt.subVectors(n,e).cross(Mt.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new M),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new M);const n=t.delta(bt),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):void 0;const s=-(t.start.dot(this.normal)+this.constant)/i;return s<0||s>1?void 0:e.copy(n).multiplyScalar(s).add(t.start)},intersectsLine:function(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new M),t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(t,e){const n=e||Tt.getNormalMatrix(t),i=this.coplanarPoint(bt).applyMatrix4(t),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this},translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}});const yt=new M,St=new M,Lt=new M,Rt=new M,At=new M,Ot=new M,Ct=new M,Pt=new M,Dt=new M,Ht=new M;function Nt(t,e,n){this.a=void 0!==t?t:new M,this.b=void 0!==e?e:new M,this.c=void 0!==n?n:new M}Object.assign(Nt,{getNormal:function(t,e,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new M),i.subVectors(n,e),yt.subVectors(t,e),i.cross(yt);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)},getBarycoord:function(t,e,n,i,s){yt.subVectors(i,e),St.subVectors(n,e),Lt.subVectors(t,e);const o=yt.dot(yt),r=yt.dot(St),a=yt.dot(Lt),c=St.dot(St),h=St.dot(Lt),u=o*c-r*r;if(void 0===s&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),s=new M),0===u)return s.set(-2,-1,-1);const l=1/u,f=(c*a-r*h)*l,d=(o*h-r*a)*l;return s.set(1-f-d,d,f)},containsPoint:function(t,e,n,i){return Nt.getBarycoord(t,e,n,i,Rt),Rt.x>=0&&Rt.y>=0&&Rt.x+Rt.y<=1},getUV:function(t,e,n,i,s,o,r,a){return this.getBarycoord(t,e,n,i,Rt),a.set(0,0),a.addScaledVector(s,Rt.x),a.addScaledVector(o,Rt.y),a.addScaledVector(r,Rt.z),a},isFrontFacing:function(t,e,n,i){return yt.subVectors(n,e),St.subVectors(t,e),yt.cross(St).dot(i)<0}}),Object.assign(Nt.prototype,{set:function(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this},setFromPointsAndIndices:function(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},getArea:function(){return yt.subVectors(this.c,this.b),St.subVectors(this.a,this.b),.5*yt.cross(St).length()},getMidpoint:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new M),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(t){return Nt.getNormal(this.a,this.b,this.c,t)},getPlane:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new xt),t.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(t,e){return Nt.getBarycoord(t,this.a,this.b,this.c,e)},getUV:function(t,e,n,i,s){return Nt.getUV(t,this.a,this.b,this.c,e,n,i,s)},containsPoint:function(t){return Nt.containsPoint(t,this.a,this.b,this.c)},isFrontFacing:function(t){return Nt.isFrontFacing(this.a,this.b,this.c,t)},intersectsBox:function(t){return t.intersectsTriangle(this)},closestPointToPoint:function(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new M);const n=this.a,i=this.b,s=this.c;let o,r;At.subVectors(i,n),Ot.subVectors(s,n),Pt.subVectors(t,n);const a=At.dot(Pt),c=Ot.dot(Pt);if(a<=0&&c<=0)return e.copy(n);Dt.subVectors(t,i);const h=At.dot(Dt),u=Ot.dot(Dt);if(h>=0&&u<=h)return e.copy(i);const l=a*u-h*c;if(l<=0&&a>=0&&h<=0)return o=a/(a-h),e.copy(n).addScaledVector(At,o);Ht.subVectors(t,s);const f=At.dot(Ht),d=Ot.dot(Ht);if(d>=0&&f<=d)return e.copy(s);const m=f*c-a*d;if(m<=0&&c>=0&&d<=0)return r=c/(c-d),e.copy(n).addScaledVector(Ot,r);const p=h*d-f*u;if(p<=0&&u-h>=0&&f-d>=0)return Ct.subVectors(s,i),r=(u-h)/(u-h+(f-d)),e.copy(i).addScaledVector(Ct,r);const v=1/(p+m+l);return o=m*v,r=l*v,e.copy(n).addScaledVector(At,o).addScaledVector(Ot,r)},equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}});const It={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Gt={h:0,s:0,l:0},Ut={h:0,s:0,l:0};function Ft(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}function Bt(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function jt(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function kt(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}function Vt(t,e,n,i,s,o){this.a=t,this.b=e,this.c=n,this.normal=i&&i.isVector3?i:new M,this.vertexNormals=Array.isArray(i)?i:[],this.color=s&&s.isColor?s:new Ft,this.vertexColors=Array.isArray(s)?s:[],this.materialIndex=void 0!==o?o:0}Object.assign(Ft.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,n){return this.r=t,this.g=e,this.b=n,this},setHSL:function(t,e,n){if(t=h.euclideanModulo(t,1),e=h.clamp(e,0,1),n=h.clamp(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,s=2*n-i;this.r=Bt(s,i,t+1/3),this.g=Bt(s,i,t),this.b=Bt(s,i,t-1/3)}return this},setStyle:function(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){let t;const i=n[1],s=n[2];switch(i){case"rgb":case"rgba":if(t=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[5]),this;if(t=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[5]),this;break;case"hsl":case"hsla":if(t=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s)){const n=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,s=parseInt(t[3],10)/100;return e(t[5]),this.setHSL(n,i,s)}}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this},setColorName:function(t){const e=It[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this},convertGammaToLinear:function(t){return this.copyGammaToLinear(this,t),this},convertLinearToGamma:function(t){return this.copyLinearToGamma(this,t),this},copySRGBToLinear:function(t){return this.r=jt(t.r),this.g=jt(t.g),this.b=jt(t.b),this},copyLinearToSRGB:function(t){return this.r=kt(t.r),this.g=kt(t.g),this.b=kt(t.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,i=this.b,s=Math.max(e,n,i),o=Math.min(e,n,i);let r,a;const c=(o+s)/2;if(o===s)r=0,a=0;else{const t=s-o;switch(a=c<=.5?t/(s+o):t/(2-s-o),s){case e:r=(n-i)/t+(n<i?6:0);break;case n:r=(i-e)/t+2;break;case i:r=(e-n)/t+4}r/=6}return t.h=r,t.s=a,t.l=c,t},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,n){return this.getHSL(Gt),Gt.h+=t,Gt.s+=e,Gt.l+=n,this.setHSL(Gt.h,Gt.s,Gt.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},lerpHSL:function(t,e){this.getHSL(Gt),t.getHSL(Ut);const n=h.lerp(Gt.h,Ut.h,e),i=h.lerp(Gt.s,Ut.s,e),s=h.lerp(Gt.l,Ut.l,e);return this.setHSL(n,i,s),this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},fromBufferAttribute:function(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this},toJSON:function(){return this.getHex()}}),Ft.NAMES=It,Object.assign(Vt.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(let e=0,n=t.vertexNormals.length;e<n;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(let e=0,n=t.vertexColors.length;e<n;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});let Wt=0;function zt(){Object.defineProperty(this,"id",{value:Wt++}),this.uuid=h.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function Xt(t){zt.call(this),this.type="MeshBasicMaterial",this.color=new Ft(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}zt.prototype=Object.assign(Object.create(a.prototype),{constructor:zt,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=i(t.textures),s=i(t.images);e.length>0&&(n.textures=e),s.length>0&&(n.images=s)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(zt.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Xt.prototype=Object.create(zt.prototype),Xt.prototype.constructor=Xt,Xt.prototype.isMeshBasicMaterial=!0,Xt.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};const Yt=new M,qt=new u;function Zt(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}function Jt(t,e,n){Zt.call(this,new Int8Array(t),e,n)}function Qt(t,e,n){Zt.call(this,new Uint8Array(t),e,n)}function Kt(t,e,n){Zt.call(this,new Uint8ClampedArray(t),e,n)}function $t(t,e,n){Zt.call(this,new Int16Array(t),e,n)}function te(t,e,n){Zt.call(this,new Uint16Array(t),e,n)}function ee(t,e,n){Zt.call(this,new Int32Array(t),e,n)}function ne(t,e,n){Zt.call(this,new Uint32Array(t),e,n)}function ie(t,e,n){Zt.call(this,new Float32Array(t),e,n)}function se(t,e,n){Zt.call(this,new Float64Array(t),e,n)}function oe(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function re(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}Object.defineProperty(Zt.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Zt.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,s=t.length;i<s;i++){let s=t[i];void 0===s&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),s=new Ft),e[n++]=s.r,e[n++]=s.g,e[n++]=s.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,s=t.length;i<s;i++){let s=t[i];void 0===s&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),s=new u),e[n++]=s.x,e[n++]=s.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,s=t.length;i<s;i++){let s=t[i];void 0===s&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),s=new M),e[n++]=s.x,e[n++]=s.y,e[n++]=s.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,s=t.length;i<s;i++){let s=t[i];void 0===s&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),s=new v),e[n++]=s.x,e[n++]=s.y,e[n++]=s.z,e[n++]=s.w}return this},applyMatrix3:function(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)qt.fromBufferAttribute(this,e),qt.applyMatrix3(t),this.setXY(e,qt.x,qt.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Yt.fromBufferAttribute(this,e),Yt.applyMatrix3(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)Yt.x=this.getX(e),Yt.y=this.getY(e),Yt.z=this.getZ(e),Yt.applyMatrix4(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)Yt.x=this.getX(e),Yt.y=this.getY(e),Yt.z=this.getZ(e),Yt.applyNormalMatrix(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)Yt.x=this.getX(e),Yt.y=this.getY(e),Yt.z=this.getZ(e),Yt.transformDirection(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,s){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=s,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),Jt.prototype=Object.create(Zt.prototype),Jt.prototype.constructor=Jt,Qt.prototype=Object.create(Zt.prototype),Qt.prototype.constructor=Qt,Kt.prototype=Object.create(Zt.prototype),Kt.prototype.constructor=Kt,$t.prototype=Object.create(Zt.prototype),$t.prototype.constructor=$t,te.prototype=Object.create(Zt.prototype),te.prototype.constructor=te,ee.prototype=Object.create(Zt.prototype),ee.prototype.constructor=ee,ne.prototype=Object.create(Zt.prototype),ne.prototype.constructor=ne,ie.prototype=Object.create(Zt.prototype),ie.prototype.constructor=ie,se.prototype=Object.create(Zt.prototype),se.prototype.constructor=se,Object.assign(oe.prototype,{computeGroups:function(t){const e=[];let n,i,s=void 0;const o=t.faces;for(i=0;i<o.length;i++){const t=o[i];t.materialIndex!==s&&(s=t.materialIndex,void 0!==n&&(n.count=3*i-n.start,e.push(n)),n={start:3*i,materialIndex:s})}void 0!==n&&(n.count=3*i-n.start,e.push(n)),this.groups=e},fromGeometry:function(t){const e=t.faces,n=t.vertices,i=t.faceVertexUvs,s=i[0]&&i[0].length>0,o=i[1]&&i[1].length>0,r=t.morphTargets,a=r.length;let c;if(a>0){c=[];for(let t=0;t<a;t++)c[t]={name:r[t].name,data:[]};this.morphTargets.position=c}const h=t.morphNormals,l=h.length;let f;if(l>0){f=[];for(let t=0;t<l;t++)f[t]={name:h[t].name,data:[]};this.morphTargets.normal=f}const d=t.skinIndices,m=t.skinWeights,p=d.length===n.length,v=m.length===n.length;n.length>0&&0===e.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let t=0;t<e.length;t++){const g=e[t];this.vertices.push(n[g.a],n[g.b],n[g.c]);const _=g.vertexNormals;if(3===_.length)this.normals.push(_[0],_[1],_[2]);else{const t=g.normal;this.normals.push(t,t,t)}const w=g.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{const t=g.color;this.colors.push(t,t,t)}if(!0===s){const e=i[0][t];void 0!==e?this.uvs.push(e[0],e[1],e[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",t),this.uvs.push(new u,new u,new u))}if(!0===o){const e=i[1][t];void 0!==e?this.uvs2.push(e[0],e[1],e[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",t),this.uvs2.push(new u,new u,new u))}for(let t=0;t<a;t++){const e=r[t].vertices;c[t].data.push(e[g.a],e[g.b],e[g.c])}for(let e=0;e<l;e++){const n=h[e].vertexNormals[t];f[e].data.push(n.a,n.b,n.c)}p&&this.skinIndices.push(d[g.a],d[g.b],d[g.c]),v&&this.skinWeights.push(m[g.a],m[g.b],m[g.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this}});let ae=1;const ce=new O,he=new q,ue=new M,le=new ht,fe=new ht,de=new M;function me(){Object.defineProperty(this,"id",{value:ae+=2}),this.uuid=h.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}me.prototype=Object.assign(Object.create(a.prototype),{constructor:me,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){this.index=Array.isArray(t)?new(re(t)>65535?ne:te)(t,1):t},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,n){this.groups.push({start:t,count:e,materialIndex:void 0!==n?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new l).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return ce.makeRotationX(t),this.applyMatrix4(ce),this},rotateY:function(t){return ce.makeRotationY(t),this.applyMatrix4(ce),this},rotateZ:function(t){return ce.makeRotationZ(t),this.applyMatrix4(ce),this},translate:function(t,e,n){return ce.makeTranslation(t,e,n),this.applyMatrix4(ce),this},scale:function(t,e,n){return ce.makeScale(t,e,n),this.applyMatrix4(ce),this},lookAt:function(t){return he.lookAt(t),he.updateMatrix(),this.applyMatrix4(he.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(ue).negate(),this.translate(ue.x,ue.y,ue.z),this},setFromObject:function(t){const e=t.geometry;if(t.isPoints||t.isLine){const t=new ie(3*e.vertices.length,3),n=new ie(3*e.colors.length,3);if(this.setAttribute("position",t.copyVector3sArray(e.vertices)),this.setAttribute("color",n.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){const t=new ie(e.lineDistances.length,1);this.setAttribute("lineDistance",t.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new ie(e,3)),this},updateFromObject:function(t){let e=t.geometry;if(t.isMesh){let t=e.L;if(!0===e.elementsNeedUpdate&&(t=void 0,e.elementsNeedUpdate=!1),void 0===t)return this.fromGeometry(e);t.verticesNeedUpdate=e.verticesNeedUpdate,t.normalsNeedUpdate=e.normalsNeedUpdate,t.colorsNeedUpdate=e.colorsNeedUpdate,t.uvsNeedUpdate=e.uvsNeedUpdate,t.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=t}if(!0===e.verticesNeedUpdate){const t=this.attributes.position;void 0!==t&&(t.copyVector3sArray(e.vertices),t.needsUpdate=!0),e.verticesNeedUpdate=!1}if(!0===e.normalsNeedUpdate){const t=this.attributes.normal;void 0!==t&&(t.copyVector3sArray(e.normals),t.needsUpdate=!0),e.normalsNeedUpdate=!1}if(!0===e.colorsNeedUpdate){const t=this.attributes.color;void 0!==t&&(t.copyColorsArray(e.colors),t.needsUpdate=!0),e.colorsNeedUpdate=!1}if(e.uvsNeedUpdate){const t=this.attributes.uv;void 0!==t&&(t.copyVector2sArray(e.uvs),t.needsUpdate=!0),e.uvsNeedUpdate=!1}if(e.lineDistancesNeedUpdate){const t=this.attributes.lineDistance;void 0!==t&&(t.copyArray(e.lineDistances),t.needsUpdate=!0),e.lineDistancesNeedUpdate=!1}return e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.L=(new oe).fromGeometry(t),this.fromDirectGeometry(t.L)},fromDirectGeometry:function(t){const e=new Float32Array(3*t.vertices.length);if(this.setAttribute("position",new Zt(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){const e=new Float32Array(3*t.normals.length);this.setAttribute("normal",new Zt(e,3).copyVector3sArray(t.normals))}if(t.colors.length>0){const e=new Float32Array(3*t.colors.length);this.setAttribute("color",new Zt(e,3).copyColorsArray(t.colors))}if(t.uvs.length>0){const e=new Float32Array(2*t.uvs.length);this.setAttribute("uv",new Zt(e,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){const e=new Float32Array(2*t.uvs2.length);this.setAttribute("uv2",new Zt(e,2).copyVector2sArray(t.uvs2))}this.groups=t.groups;for(const e in t.morphTargets){const n=[],i=t.morphTargets[e];for(let t=0,e=i.length;t<e;t++){const e=i[t],s=new ie(3*e.data.length,3);s.name=e.name,n.push(s.copyVector3sArray(e.data))}this.morphAttributes[e]=n}if(t.skinIndices.length>0){const e=new ie(4*t.skinIndices.length,4);this.setAttribute("skinIndex",e.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){const e=new ie(4*t.skinWeights.length,4);this.setAttribute("skinWeight",e.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new ht);const t=this.attributes.position,e=this.morphAttributes.position;if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];le.setFromBufferAttribute(n),this.morphTargetsRelative?(de.addVectors(this.boundingBox.min,le.min),this.boundingBox.expandByPoint(de),de.addVectors(this.boundingBox.max,le.max),this.boundingBox.expandByPoint(de)):(this.boundingBox.expandByPoint(le.min),this.boundingBox.expandByPoint(le.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new ft);const t=this.attributes.position,e=this.morphAttributes.position;if(t){const n=this.boundingSphere.center;if(le.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];fe.setFromBufferAttribute(n),this.morphTargetsRelative?(de.addVectors(le.min,fe.min),le.expandByPoint(de),de.addVectors(le.max,fe.max),le.expandByPoint(de)):(le.expandByPoint(fe.min),le.expandByPoint(fe.max))}le.getCenter(n);let i=0;for(let e=0,s=t.count;e<s;e++)de.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(de));if(e)for(let s=0,o=e.length;s<o;s++){const o=e[s],r=this.morphTargetsRelative;for(let e=0,s=o.count;e<s;e++)de.fromBufferAttribute(o,e),r&&(ue.fromBufferAttribute(t,e),de.add(ue)),i=Math.max(i,n.distanceToSquared(de))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Zt(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new M,s=new M,o=new M,r=new M,a=new M,c=new M,h=new M,u=new M;if(t)for(let l=0,f=t.count;l<f;l+=3){const f=t.getX(l+0),d=t.getX(l+1),m=t.getX(l+2);i.fromBufferAttribute(e,f),s.fromBufferAttribute(e,d),o.fromBufferAttribute(e,m),h.subVectors(o,s),u.subVectors(i,s),h.cross(u),r.fromBufferAttribute(n,f),a.fromBufferAttribute(n,d),c.fromBufferAttribute(n,m),r.add(h),a.add(h),c.add(h),n.setXYZ(f,r.x,r.y,r.z),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let t=0,r=e.count;t<r;t+=3)i.fromBufferAttribute(e,t+0),s.fromBufferAttribute(e,t+1),o.fromBufferAttribute(e,t+2),h.subVectors(o,s),u.subVectors(i,s),h.cross(u),n.setXYZ(t+0,h.x,h.y,h.z),n.setXYZ(t+1,h.x,h.y,h.z),n.setXYZ(t+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===t.attributes[i])continue;const s=n[i].array,o=t.attributes[i],r=o.array,a=o.itemSize*e,c=Math.min(r.length,s.length-a);for(let t=0,e=a;t<c;t++,e++)s[e]=r[t]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)de.fromBufferAttribute(t,e),de.normalize(),t.setXYZ(e,de.x,de.y,de.z)},toNonIndexed:function(){function t(t,e){const n=t.array,i=t.itemSize,s=t.normalized,o=new n.constructor(e.length*i);let r=0,a=0;for(let t=0,s=e.length;t<s;t++){r=e[t]*i;for(let t=0;t<i;t++)o[a++]=n[r++]}return new Zt(o,i,s)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const e=new me,n=this.index.array,i=this.attributes;for(const s in i){const o=t(i[s],n);e.setAttribute(s,o)}const s=this.morphAttributes;for(const i in s){const o=[],r=s[i];for(let e=0,i=r.length;e<i;e++){const i=t(r[e],n);o.push(i)}e.morphAttributes[i]=o}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let t=0,n=o.length;t<n;t++){const n=o[t];e.addGroup(n.start,n.count,n.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e],s=i.toJSON(t.data);""!==i.name&&(s.name=i.name),t.data.attributes[e]=s}const i={};let s=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],o=[];for(let e=0,i=n.length;e<i;e++){const i=n[e],s=i.toJSON(t.data);""!==i.name&&(s.name=i.name),o.push(s)}o.length>0&&(i[e]=o,s=!0)}s&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const r=this.boundingSphere;return null!==r&&(t.data.boundingSphere={center:r.center.toArray(),radius:r.radius}),t},clone:function(){return(new me).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const s=t.morphAttributes;for(const t in s){const n=[],i=s[t];for(let t=0,s=i.length;t<s;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let t=0,e=o.length;t<e;t++){const e=o[t];this.addGroup(e.start,e.count,e.materialIndex)}const r=t.boundingBox;null!==r&&(this.boundingBox=r.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const pe=new O,ve=new Et,ge=new ft,_e=new M,we=new M,Ee=new M,be=new M,Me=new M,Te=new M,xe=new M,ye=new M,Se=new M,Le=new u,Re=new u,Ae=new u,Oe=new M,Ce=new M;function Pe(t,e){q.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new me,this.material=void 0!==e?e:new Xt,this.updateMorphTargets()}function De(t,e,n,i,s,o,r,a){let c;if(c=1===e.side?i.intersectTriangle(r,o,s,!0,a):i.intersectTriangle(s,o,r,2!==e.side,a),null===c)return null;Ce.copy(a),Ce.applyMatrix4(t.matrixWorld);const h=n.ray.origin.distanceTo(Ce);return h<n.near||h>n.far?null:{distance:h,point:Ce.clone(),object:t}}function He(t,e,n,i,s,o,r,a,c,h,l,f){_e.fromBufferAttribute(s,h),we.fromBufferAttribute(s,l),Ee.fromBufferAttribute(s,f);const d=t.morphTargetInfluences;if(e.morphTargets&&o&&d){xe.set(0,0,0),ye.set(0,0,0),Se.set(0,0,0);for(let t=0,e=o.length;t<e;t++){const e=d[t],n=o[t];0!==e&&(be.fromBufferAttribute(n,h),Me.fromBufferAttribute(n,l),Te.fromBufferAttribute(n,f),r?(xe.addScaledVector(be,e),ye.addScaledVector(Me,e),Se.addScaledVector(Te,e)):(xe.addScaledVector(be.sub(_e),e),ye.addScaledVector(Me.sub(we),e),Se.addScaledVector(Te.sub(Ee),e)))}_e.add(xe),we.add(ye),Ee.add(Se)}t.isSkinnedMesh&&(t.boneTransform(h,_e),t.boneTransform(l,we),t.boneTransform(f,Ee));const m=De(t,e,n,i,_e,we,Ee,Oe);if(m){a&&(Le.fromBufferAttribute(a,h),Re.fromBufferAttribute(a,l),Ae.fromBufferAttribute(a,f),m.uv=Nt.getUV(Oe,_e,we,Ee,Le,Re,Ae,new u)),c&&(Le.fromBufferAttribute(c,h),Re.fromBufferAttribute(c,l),Ae.fromBufferAttribute(c,f),m.uv2=Nt.getUV(Oe,_e,we,Ee,Le,Re,Ae,new u));const t=new Vt(h,l,f);Nt.getNormal(_e,we,Ee,t.normal),m.face=t}return m}Pe.prototype=Object.assign(Object.create(q.prototype),{constructor:Pe,isMesh:!0,copy:function(t){return q.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||e+"";this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,i=this.material,s=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),ge.copy(n.boundingSphere),ge.applyMatrix4(s),!1===t.ray.intersectsSphere(ge))return;if(pe.getInverse(s),ve.copy(t.ray).applyMatrix4(pe),null!==n.boundingBox&&!1===ve.intersectsBox(n.boundingBox))return;let o;if(n.isBufferGeometry){const s=n.index,r=n.attributes.position,a=n.morphAttributes.position,c=n.morphTargetsRelative,h=n.attributes.uv,u=n.attributes.uv2,l=n.groups,f=n.drawRange;if(null!==s)if(Array.isArray(i))for(let n=0,d=l.length;n<d;n++){const d=l[n],m=i[d.materialIndex];for(let n=Math.max(d.start,f.start),i=Math.min(d.start+d.count,f.start+f.count);n<i;n+=3){const i=s.getX(n),l=s.getX(n+1),f=s.getX(n+2);o=He(this,m,t,ve,r,a,c,h,u,i,l,f),o&&(o.faceIndex=Math.floor(n/3),o.face.materialIndex=d.materialIndex,e.push(o))}}else{for(let n=Math.max(0,f.start),l=Math.min(s.count,f.start+f.count);n<l;n+=3){const l=s.getX(n),f=s.getX(n+1),d=s.getX(n+2);o=He(this,i,t,ve,r,a,c,h,u,l,f,d),o&&(o.faceIndex=Math.floor(n/3),e.push(o))}}else if(void 0!==r)if(Array.isArray(i))for(let n=0,s=l.length;n<s;n++){const s=l[n],d=i[s.materialIndex];for(let n=Math.max(s.start,f.start),i=Math.min(s.start+s.count,f.start+f.count);n<i;n+=3){o=He(this,d,t,ve,r,a,c,h,u,n,n+1,n+2),o&&(o.faceIndex=Math.floor(n/3),o.face.materialIndex=s.materialIndex,e.push(o))}}else{for(let n=Math.max(0,f.start),s=Math.min(r.count,f.start+f.count);n<s;n+=3){o=He(this,i,t,ve,r,a,c,h,u,n,n+1,n+2),o&&(o.faceIndex=Math.floor(n/3),e.push(o))}}}else if(n.isGeometry){const s=Array.isArray(i),r=n.vertices,a=n.faces;let c;const h=n.faceVertexUvs[0];h.length>0&&(c=h);for(let n=0,h=a.length;n<h;n++){const h=a[n],l=s?i[h.materialIndex]:i;if(void 0===l)continue;const f=r[h.a],d=r[h.b],m=r[h.c];if(o=De(this,l,t,ve,f,d,m,Oe),o){if(c&&c[n]){const t=c[n];Le.copy(t[0]),Re.copy(t[1]),Ae.copy(t[2]),o.uv=Nt.getUV(Oe,f,d,m,Le,Re,Ae,new u)}o.face=h,o.faceIndex=n,e.push(o)}}}}});let Ne=0;const Ie=new O,Ge=new q,Ue=new M;function Fe(){Object.defineProperty(this,"id",{value:Ne+=2}),this.uuid=h.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Fe.prototype=Object.assign(Object.create(a.prototype),{constructor:Fe,isGeometry:!0,applyMatrix4:function(t){const e=(new l).getNormalMatrix(t);for(let e=0,n=this.vertices.length;e<n;e++){this.vertices[e].applyMatrix4(t)}for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t];n.normal.applyMatrix3(e).normalize();for(let t=0,i=n.vertexNormals.length;t<i;t++)n.vertexNormals[t].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return Ie.makeRotationX(t),this.applyMatrix4(Ie),this},rotateY:function(t){return Ie.makeRotationY(t),this.applyMatrix4(Ie),this},rotateZ:function(t){return Ie.makeRotationZ(t),this.applyMatrix4(Ie),this},translate:function(t,e,n){return Ie.makeTranslation(t,e,n),this.applyMatrix4(Ie),this},scale:function(t,e,n){return Ie.makeScale(t,e,n),this.applyMatrix4(Ie),this},lookAt:function(t){return Ge.lookAt(t),Ge.updateMatrix(),this.applyMatrix4(Ge.matrix),this},fromBufferGeometry:function(t){const e=this,n=null!==t.index?t.index:void 0,i=t.attributes;if(void 0===i.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const s=i.position,o=i.normal,r=i.color,a=i.uv,c=i.uv2;void 0!==c&&(this.faceVertexUvs[1]=[]);for(let t=0;t<s.count;t++)e.vertices.push((new M).fromBufferAttribute(s,t)),void 0!==r&&e.colors.push((new Ft).fromBufferAttribute(r,t));function h(t,n,i,s){const h=void 0===r?[]:[e.colors[t].clone(),e.colors[n].clone(),e.colors[i].clone()],l=new Vt(t,n,i,void 0===o?[]:[(new M).fromBufferAttribute(o,t),(new M).fromBufferAttribute(o,n),(new M).fromBufferAttribute(o,i)],h,s);e.faces.push(l),void 0!==a&&e.faceVertexUvs[0].push([(new u).fromBufferAttribute(a,t),(new u).fromBufferAttribute(a,n),(new u).fromBufferAttribute(a,i)]),void 0!==c&&e.faceVertexUvs[1].push([(new u).fromBufferAttribute(c,t),(new u).fromBufferAttribute(c,n),(new u).fromBufferAttribute(c,i)])}const l=t.groups;if(l.length>0)for(let t=0;t<l.length;t++){const e=l[t],i=e.start;for(let t=i,s=i+e.count;t<s;t+=3)void 0!==n?h(n.getX(t),n.getX(t+1),n.getX(t+2),e.materialIndex):h(t,t+1,t+2,e.materialIndex)}else if(void 0!==n)for(let t=0;t<n.count;t+=3)h(n.getX(t),n.getX(t+1),n.getX(t+2));else for(let t=0;t<s.count;t+=3)h(t,t+1,t+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ue).negate(),this.translate(Ue.x,Ue.y,Ue.z),this},normalize:function(){this.computeBoundingSphere();const t=this.boundingSphere.center,e=this.boundingSphere.radius,n=0===e?1:1/e,i=new O;return i.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix4(i),this},computeFaceNormals:function(){const t=new M,e=new M;for(let n=0,i=this.faces.length;n<i;n++){const i=this.faces[n],s=this.vertices[i.a],o=this.vertices[i.b],r=this.vertices[i.c];t.subVectors(r,o),e.subVectors(s,o),t.cross(e),t.normalize(),i.normal.copy(t)}},computeVertexNormals:function(t){void 0===t&&(t=!0);const e=Array(this.vertices.length);for(let t=0,n=this.vertices.length;t<n;t++)e[t]=new M;if(t){const t=new M,n=new M;for(let i=0,s=this.faces.length;i<s;i++){const s=this.faces[i],o=this.vertices[s.a],r=this.vertices[s.b],a=this.vertices[s.c];t.subVectors(a,r),n.subVectors(o,r),t.cross(n),e[s.a].add(t),e[s.b].add(t),e[s.c].add(t)}}else{this.computeFaceNormals();for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t];e[n.a].add(n.normal),e[n.b].add(n.normal),e[n.c].add(n.normal)}}for(let t=0,n=this.vertices.length;t<n;t++)e[t].normalize();for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t],i=n.vertexNormals;3===i.length?(i[0].copy(e[n.a]),i[1].copy(e[n.b]),i[2].copy(e[n.c])):(i[0]=e[n.a].clone(),i[1]=e[n.b].clone(),i[2]=e[n.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t],n=e.vertexNormals;3===n.length?(n[0].copy(e.normal),n[1].copy(e.normal),n[2].copy(e.normal)):(n[0]=e.normal.clone(),n[1]=e.normal.clone(),n[2]=e.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.R?e.R.copy(e.normal):e.R=e.normal.clone(),e.A||(e.A=[]);for(let t=0,n=e.vertexNormals.length;t<n;t++)e.A[t]?e.A[t].copy(e.vertexNormals[t]):e.A[t]=e.vertexNormals[t].clone()}const t=new Fe;t.faces=this.faces;for(let e=0,n=this.morphTargets.length;e<n;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];const t=this.morphNormals[e].faceNormals,n=this.morphNormals[e].vertexNormals;for(let e=0,i=this.faces.length;e<i;e++){const e=new M,i={a:new M,b:new M,c:new M};t.push(e),n.push(i)}}const n=this.morphNormals[e];t.vertices=this.morphTargets[e].vertices,t.computeFaceNormals(),t.computeVertexNormals();for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t],i=n.faceNormals[t],s=n.vertexNormals[t];i.copy(e.normal),s.a.copy(e.vertexNormals[0]),s.b.copy(e.vertexNormals[1]),s.c.copy(e.vertexNormals[2])}}for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.normal=e.R,e.vertexNormals=e.A}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new ht),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new ft),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n){if(!t||!t.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);let i,s=this.vertices.length,o=this.vertices,r=t.vertices,a=this.faces,c=t.faces,h=this.colors,u=t.colors;void 0===n&&(n=0),void 0!==e&&(i=(new l).getNormalMatrix(e));for(let t=0,n=r.length;t<n;t++){const n=r[t].clone();void 0!==e&&n.applyMatrix4(e),o.push(n)}for(let t=0,e=u.length;t<e;t++)h.push(u[t].clone());for(let t=0,e=c.length;t<e;t++){let e,o,r,h=c[t],u=h.vertexNormals,l=h.vertexColors;e=new Vt(h.a+s,h.b+s,h.c+s),e.normal.copy(h.normal),void 0!==i&&e.normal.applyMatrix3(i).normalize();for(let t=0,n=u.length;t<n;t++)o=u[t].clone(),void 0!==i&&o.applyMatrix3(i).normalize(),e.vertexNormals.push(o);e.color.copy(h.color);for(let t=0,n=l.length;t<n;t++)r=l[t],e.vertexColors.push(r.clone());e.materialIndex=h.materialIndex+n,a.push(e)}for(let e=0,n=t.faceVertexUvs.length;e<n;e++){const n=t.faceVertexUvs[e];void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]);for(let t=0,i=n.length;t<i;t++){const i=n[t],s=[];for(let t=0,e=i.length;t<e;t++)s.push(i[t].clone());this.faceVertexUvs[e].push(s)}}},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(){const t={},e=[],n=[];for(let i=0,s=this.vertices.length;i<s;i++){const s=this.vertices[i],o=Math.round(1e4*s.x)+"_"+Math.round(1e4*s.y)+"_"+Math.round(1e4*s.z);void 0===t[o]?(t[o]=i,e.push(this.vertices[i]),n[i]=e.length-1):n[i]=n[t[o]]}const i=[];for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.a=n[e.a],e.b=n[e.b],e.c=n[e.c];const s=[e.a,e.b,e.c];for(let e=0;e<3;e++)if(s[e]===s[(e+1)%3]){i.push(t);break}}for(let t=i.length-1;t>=0;t--){const e=i[t];this.faces.splice(e,1);for(let t=0,n=this.faceVertexUvs.length;t<n;t++)this.faceVertexUvs[t].splice(e,1)}const s=this.vertices.length-e.length;return this.vertices=e,s},setFromPoints:function(t){this.vertices=[];for(let e=0,n=t.length;e<n;e++){const n=t[e];this.vertices.push(new M(n.x,n.y,n.z||0))}return this},sortFacesByMaterialIndex:function(){const t=this.faces,e=t.length;for(let n=0;n<e;n++)t[n].O=n;t.sort((function(t,e){return t.materialIndex-e.materialIndex}));const n=this.faceVertexUvs[0],i=this.faceVertexUvs[1];let s,o;n&&n.length===e&&(s=[]),i&&i.length===e&&(o=[]);for(let r=0;r<e;r++){const e=t[r].O;s&&s.push(n[e]),o&&o.push(i[e])}s&&(this.faceVertexUvs[0]=s),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){const t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}const e=[];for(let t=0;t<this.vertices.length;t++){const n=this.vertices[t];e.push(n.x,n.y,n.z)}const n=[],i=[],s={},o=[],r={},a=[],c={};for(let t=0;t<this.faces.length;t++){const e=this.faces[t],i=!0,s=!1,o=void 0!==this.faceVertexUvs[0][t],r=e.normal.length()>0,a=e.vertexNormals.length>0,c=1!==e.color.r||1!==e.color.g||1!==e.color.b,d=e.vertexColors.length>0;let m=0;if(m=h(m,0,0),m=h(m,1,i),m=h(m,2,s),m=h(m,3,o),m=h(m,4,r),m=h(m,5,a),m=h(m,6,c),m=h(m,7,d),n.push(m),n.push(e.a,e.b,e.c),n.push(e.materialIndex),o){const e=this.faceVertexUvs[0][t];n.push(f(e[0]),f(e[1]),f(e[2]))}if(r&&n.push(u(e.normal)),a){const t=e.vertexNormals;n.push(u(t[0]),u(t[1]),u(t[2]))}if(c&&n.push(l(e.color)),d){const t=e.vertexColors;n.push(l(t[0]),l(t[1]),l(t[2]))}}function h(t,e,n){return n?t|1<<e:t&~(1<<e)}function u(t){const e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==s[e]||(s[e]=i.length/3,i.push(t.x,t.y,t.z)),s[e]}function l(t){const e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==r[e]||(r[e]=o.length,o.push(t.getHex())),r[e]}function f(t){const e=t.x.toString()+t.y.toString();return void 0!==c[e]||(c[e]=a.length/2,a.push(t.x,t.y)),c[e]}return t.data={},t.data.vertices=e,t.data.normals=i,o.length>0&&(t.data.colors=o),a.length>0&&(t.data.uvs=[a]),t.data.faces=n,t},clone:function(){return(new Fe).copy(this)},copy:function(t){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;const e=t.vertices;for(let t=0,n=e.length;t<n;t++)this.vertices.push(e[t].clone());const n=t.colors;for(let t=0,e=n.length;t<e;t++)this.colors.push(n[t].clone());const i=t.faces;for(let t=0,e=i.length;t<e;t++)this.faces.push(i[t].clone());for(let e=0,n=t.faceVertexUvs.length;e<n;e++){const n=t.faceVertexUvs[e];void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]);for(let t=0,i=n.length;t<i;t++){const i=n[t],s=[];for(let t=0,e=i.length;t<e;t++){const e=i[t];s.push(e.clone())}this.faceVertexUvs[e].push(s)}}const s=t.morphTargets;for(let t=0,e=s.length;t<e;t++){const e={};if(e.name=s[t].name,void 0!==s[t].vertices){e.vertices=[];for(let n=0,i=s[t].vertices.length;n<i;n++)e.vertices.push(s[t].vertices[n].clone())}if(void 0!==s[t].normals){e.normals=[];for(let n=0,i=s[t].normals.length;n<i;n++)e.normals.push(s[t].normals[n].clone())}this.morphTargets.push(e)}const o=t.morphNormals;for(let t=0,e=o.length;t<e;t++){const e={};if(void 0!==o[t].vertexNormals){e.vertexNormals=[];for(let n=0,i=o[t].vertexNormals.length;n<i;n++){const i=o[t].vertexNormals[n],s={};s.a=i.a.clone(),s.b=i.b.clone(),s.c=i.c.clone(),e.vertexNormals.push(s)}}if(void 0!==o[t].faceNormals){e.faceNormals=[];for(let n=0,i=o[t].faceNormals.length;n<i;n++)e.faceNormals.push(o[t].faceNormals[n].clone())}this.morphNormals.push(e)}const r=t.skinWeights;for(let t=0,e=r.length;t<e;t++)this.skinWeights.push(r[t].clone());const a=t.skinIndices;for(let t=0,e=a.length;t<e;t++)this.skinIndices.push(a[t].clone());const c=t.lineDistances;for(let t=0,e=c.length;t<e;t++)this.lineDistances.push(c[t]);const h=t.boundingBox;null!==h&&(this.boundingBox=h.clone());const u=t.boundingSphere;return null!==u&&(this.boundingSphere=u.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class Be extends me{constructor(t,e,n,i,s,o){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const r=this;t=t||1,e=e||1,n=n||1,i=Math.floor(i)||1,s=Math.floor(s)||1;const a=[],c=[],h=[],u=[];let l=0,f=0;function d(t,e,n,i,s,o,d,m,p,v,g){const _=o/p,w=d/v,E=o/2,b=d/2,T=m/2,x=p+1,y=v+1;let S=0,L=0;const R=new M;for(let o=0;o<y;o++){const r=o*w-b;for(let a=0;a<x;a++){const l=a*_-E;R[t]=l*i,R[e]=r*s,R[n]=T,c.push(R.x,R.y,R.z),R[t]=0,R[e]=0,R[n]=m>0?1:-1,h.push(R.x,R.y,R.z),u.push(a/p),u.push(1-o/v),S+=1}}for(let t=0;t<v;t++)for(let e=0;e<p;e++){const n=l+e+x*t,i=l+e+x*(t+1),s=l+(e+1)+x*(t+1),o=l+(e+1)+x*t;a.push(n,i,o),a.push(i,s,o),L+=6}r.addGroup(f,L,g),f+=L,l+=S}d("z","y","x",-1,-1,n,e,t,o=Math.floor(o)||1,s,0),d("z","y","x",1,-1,n,e,-t,o,s,1),d("x","z","y",1,1,t,n,e,i,o,2),d("x","z","y",1,-1,t,n,-e,i,o,3),d("x","y","z",1,-1,t,e,n,i,s,4),d("x","y","z",-1,-1,t,e,-n,i,s,5),this.setIndex(a),this.setAttribute("position",new ie(c,3)),this.setAttribute("normal",new ie(h,3)),this.setAttribute("uv",new ie(u,2))}}function je(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const s=t[n][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture)?e[n][i]=s.clone():e[n][i]=Array.isArray(s)?s.slice():s}}return e}function ke(t){const e={};for(let n=0;n<t.length;n++){const i=je(t[n]);for(const t in i)e[t]=i[t]}return e}const Ve={clone:je,merge:ke};function We(t){zt.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function ze(){q.call(this),this.type="Camera",this.matrixWorldInverse=new O,this.projectionMatrix=new O,this.projectionMatrixInverse=new O}function Xe(t,e,n,i){ze.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==n?n:.1,this.far=void 0!==i?i:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}We.prototype=Object.create(zt.prototype),We.prototype.constructor=We,We.prototype.isShaderMaterial=!0,We.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=je(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this},We.prototype.toJSON=function(t){const e=zt.prototype.toJSON.call(this,t);e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e},ze.prototype=Object.assign(Object.create(q.prototype),{constructor:ze,isCamera:!0,copy:function(t,e){return q.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new M),this.updateMatrixWorld(!0);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){q.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(t,e){q.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),Xe.prototype=Object.assign(Object.create(ze.prototype),{constructor:Xe,isPerspectiveCamera:!0,copy:function(t,e){return ze.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=2*h.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(.5*h.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*h.RAD2DEG*Math.atan(Math.tan(.5*h.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,s,o){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){let t=this.near,e=t*Math.tan(.5*h.DEG2RAD*this.fov)/this.zoom,n=2*e,i=this.aspect*n,s=-.5*i,o=this.view;if(null!==this.view&&this.view.enabled){const t=o.fullWidth,r=o.fullHeight;s+=o.offsetX*i/t,e-=o.offsetY*n/r,i*=o.width/t,n*=o.height/r}const r=this.filmOffset;0!==r&&(s+=t*r/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,e,e-n,t,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){const e=q.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});function Ye(t,e,n){if(q.call(this),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new Xe(90,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new M(1,0,0)),this.add(i);const s=new Xe(90,1,t,e);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new M(-1,0,0)),this.add(s);const o=new Xe(90,1,t,e);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new M(0,1,0)),this.add(o);const r=new Xe(90,1,t,e);r.layers=this.layers,r.up.set(0,0,-1),r.lookAt(new M(0,-1,0)),this.add(r);const a=new Xe(90,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new M(0,0,1)),this.add(a);const c=new Xe(90,1,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new M(0,0,-1)),this.add(c),this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();const h=t.xr.enabled,u=t.getRenderTarget();t.xr.enabled=!1;const l=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,s),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,r),t.setRenderTarget(n,4),t.render(e,a),n.texture.generateMipmaps=l,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(u),t.xr.enabled=h},this.clear=function(t,e,i,s){const o=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(n,o),t.clear(e,i,s);t.setRenderTarget(o)}}function qe(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),g.call(this,t,t,e)}function Ze(t,e,n,i,s,o,r,a,c,h,u,l){p.call(this,null,o,r,a,c,h,i,s,u,l),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==c?c:1003,this.minFilter=void 0!==h?h:1003,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Ye.prototype=Object.create(q.prototype),Ye.prototype.constructor=Ye,qe.prototype=Object.create(g.prototype),qe.prototype.constructor=qe,qe.prototype.isWebGLCubeRenderTarget=!0,qe.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=e.format,this.texture.encoding=e.encoding;const n=new Z,i={uniforms:{tEquirect:{value:null}},vertexShader:"varying vec3 vWorldDirection;\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",fragmentShader:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}"},s=new We({name:"CubemapFromEquirect",uniforms:je(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});s.uniforms.tEquirect.value=e;const o=new Pe(new Be(5,5,5),s);n.add(o);return new Ye(1,10,this).update(t,n),o.geometry.dispose(),o.material.dispose(),this},Ze.prototype=Object.create(p.prototype),Ze.prototype.constructor=Ze,Ze.prototype.isDataTexture=!0;const Je=new ft,Qe=new M;function Ke(t,e,n,i,s,o){this.planes=[void 0!==t?t:new xt,void 0!==e?e:new xt,void 0!==n?n:new xt,void 0!==i?i:new xt,void 0!==s?s:new xt,void 0!==o?o:new xt]}Object.assign(Ke.prototype,{set:function(t,e,n,i,s,o){const r=this.planes;return r[0].copy(t),r[1].copy(e),r[2].copy(n),r[3].copy(i),r[4].copy(s),r[5].copy(o),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this},setFromProjectionMatrix:function(t){const e=this.planes,n=t.elements,i=n[0],s=n[1],o=n[2],r=n[3],a=n[4],c=n[5],h=n[6],u=n[7],l=n[8],f=n[9],d=n[10],m=n[11],p=n[12],v=n[13],g=n[14],_=n[15];return e[0].setComponents(r-i,u-a,m-l,_-p).normalize(),e[1].setComponents(r+i,u+a,m+l,_+p).normalize(),e[2].setComponents(r+s,u+c,m+f,_+v).normalize(),e[3].setComponents(r-s,u-c,m-f,_-v).normalize(),e[4].setComponents(r-o,u-h,m-d,_-g).normalize(),e[5].setComponents(r+o,u+h,m+d,_+g).normalize(),this},intersectsObject:function(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Je.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Je)},intersectsSprite:function(t){return Je.center.set(0,0,0),Je.radius=.7071067811865476,Je.applyMatrix4(t.matrixWorld),this.intersectsSphere(Je)},intersectsSphere:function(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(n)<i)return!1}return!0},intersectsBox:function(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(Qe.x=i.normal.x>0?t.max.x:t.min.x,Qe.y=i.normal.y>0?t.max.y:t.min.y,Qe.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(Qe)<0)return!1}return!0},containsPoint:function(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}});const $e={common:{diffuse:{value:new Ft(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new l},uv2Transform:{value:new l},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new u(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ft(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Ft(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new l}},sprite:{diffuse:{value:new Ft(15658734)},opacity:{value:1},center:{value:new u(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new l}}};function tn(){let t=null,e=!1,n=null,i=null;function s(e,o){n(e,o),i=t.requestAnimationFrame(s)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(s),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function en(t,e){const n=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(e,s){e.isInterleavedBufferAttribute&&(e=e.data);const o=i.get(e);void 0===o?i.set(e,function(e,n){const i=e.array,s=e.usage,o=t.createBuffer();t.bindBuffer(n,o),t.bufferData(n,i,s),e.onUploadCallback();let r=5126;return i instanceof Float32Array?r=5126:i instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?r=5123:i instanceof Int16Array?r=5122:i instanceof Uint32Array?r=5125:i instanceof Int32Array?r=5124:i instanceof Int8Array?r=5120:i instanceof Uint8Array&&(r=5121),{buffer:o,type:r,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version}}(e,s)):o.version<e.version&&(!function(e,i,s){const o=i.array,r=i.updateRange;t.bindBuffer(s,e),-1===r.count?t.bufferSubData(s,0,o):(n?t.bufferSubData(s,r.offset*o.BYTES_PER_ELEMENT,o,r.offset,r.count):t.bufferSubData(s,r.offset*o.BYTES_PER_ELEMENT,o.subarray(r.offset,r.offset+r.count)),r.count=-1)}(o.buffer,e,s),o.version=e.version)}}}function nn(t,e,n,i){Fe.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i},this.fromBufferGeometry(new sn(t,e,n,i)),this.mergeVertices()}function sn(t,e,n,i){me.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const s=(t=t||1)/2,o=(e=e||1)/2,r=Math.floor(n)||1,a=Math.floor(i)||1,c=r+1,h=a+1,u=t/r,l=e/a,f=[],d=[],m=[],p=[];for(let t=0;t<h;t++){const e=t*l-o;for(let n=0;n<c;n++){const i=n*u-s;d.push(i,-e,0),m.push(0,0,1),p.push(n/r),p.push(1-t/a)}}for(let t=0;t<a;t++)for(let e=0;e<r;e++){const n=e+c*t,i=e+c*(t+1),s=e+1+c*(t+1),o=e+1+c*t;f.push(n,i,o),f.push(i,s,o)}this.setIndex(f),this.setAttribute("position",new ie(d,3)),this.setAttribute("normal",new ie(m,3)),this.setAttribute("uv",new ie(p,2))}nn.prototype=Object.create(Fe.prototype),nn.prototype.constructor=nn,sn.prototype=Object.create(me.prototype),sn.prototype.constructor=sn;const on={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);    } else if (face == 1.0) {\n      uv = vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face == 2.0) {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face == 3.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face == 4.0) {\n      uv = vec2(-direction.x, direction.z) / abs(direction.y);    } else {\n      uv = vec2(direction.x, direction.y) / abs(direction.z);    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},rn={basic:{uniforms:ke([$e.common,$e.specularmap,$e.envmap,$e.aomap,$e.lightmap,$e.fog]),vertexShader:on.meshbasic_vert,fragmentShader:on.meshbasic_frag},lambert:{uniforms:ke([$e.common,$e.specularmap,$e.envmap,$e.aomap,$e.lightmap,$e.emissivemap,$e.fog,$e.lights,{emissive:{value:new Ft(0)}}]),vertexShader:on.meshlambert_vert,fragmentShader:on.meshlambert_frag},phong:{uniforms:ke([$e.common,$e.specularmap,$e.envmap,$e.aomap,$e.lightmap,$e.emissivemap,$e.bumpmap,$e.normalmap,$e.displacementmap,$e.fog,$e.lights,{emissive:{value:new Ft(0)},specular:{value:new Ft(1118481)},shininess:{value:30}}]),vertexShader:on.meshphong_vert,fragmentShader:on.meshphong_frag},standard:{uniforms:ke([$e.common,$e.envmap,$e.aomap,$e.lightmap,$e.emissivemap,$e.bumpmap,$e.normalmap,$e.displacementmap,$e.roughnessmap,$e.metalnessmap,$e.fog,$e.lights,{emissive:{value:new Ft(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:on.meshphysical_vert,fragmentShader:on.meshphysical_frag},toon:{uniforms:ke([$e.common,$e.aomap,$e.lightmap,$e.emissivemap,$e.bumpmap,$e.normalmap,$e.displacementmap,$e.gradientmap,$e.fog,$e.lights,{emissive:{value:new Ft(0)}}]),vertexShader:on.meshtoon_vert,fragmentShader:on.meshtoon_frag},matcap:{uniforms:ke([$e.common,$e.bumpmap,$e.normalmap,$e.displacementmap,$e.fog,{matcap:{value:null}}]),vertexShader:on.meshmatcap_vert,fragmentShader:on.meshmatcap_frag},points:{uniforms:ke([$e.points,$e.fog]),vertexShader:on.points_vert,fragmentShader:on.points_frag},dashed:{uniforms:ke([$e.common,$e.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:on.linedashed_vert,fragmentShader:on.linedashed_frag},depth:{uniforms:ke([$e.common,$e.displacementmap]),vertexShader:on.depth_vert,fragmentShader:on.depth_frag},normal:{uniforms:ke([$e.common,$e.bumpmap,$e.normalmap,$e.displacementmap,{opacity:{value:1}}]),vertexShader:on.normal_vert,fragmentShader:on.normal_frag},sprite:{uniforms:ke([$e.sprite,$e.fog]),vertexShader:on.sprite_vert,fragmentShader:on.sprite_frag},background:{uniforms:{uvTransform:{value:new l},t2D:{value:null}},vertexShader:on.background_vert,fragmentShader:on.background_frag},cube:{uniforms:ke([$e.envmap,{opacity:{value:1}}]),vertexShader:on.cube_vert,fragmentShader:on.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:on.equirect_vert,fragmentShader:on.equirect_frag},distanceRGBA:{uniforms:ke([$e.common,$e.displacementmap,{referencePosition:{value:new M},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:on.distanceRGBA_vert,fragmentShader:on.distanceRGBA_frag},shadow:{uniforms:ke([$e.lights,$e.fog,{color:{value:new Ft(0)},opacity:{value:1}}]),vertexShader:on.shadow_vert,fragmentShader:on.shadow_frag}};function an(t,e,n,i){const s=new Ft(0);let o,r,a=0,c=null,h=0,u=null;function l(t,n){e.buffers.color.setClear(t.r,t.g,t.b,n,i)}return{getClearColor:function(){return s},setClearColor:function(t,e){s.set(t),a=void 0!==e?e:1,l(s,a)},getClearAlpha:function(){return a},setClearAlpha:function(t){a=t,l(s,a)},render:function(e,i,f,d){let m=!0===i.isScene?i.background:null;const p=t.xr,v=p.getSession&&p.getSession();if(v&&"additive"===v.environmentBlendMode&&(m=null),null===m?l(s,a):m&&m.isColor&&(l(m,1),d=!0),(t.autoClear||d)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||306===m.mapping)){void 0===r&&(r=new Pe(new Be(1,1,1),new We({name:"BackgroundCubeMaterial",uniforms:je(rn.cube.uniforms),vertexShader:rn.cube.vertexShader,fragmentShader:rn.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),r.geometry.deleteAttribute("normal"),r.geometry.deleteAttribute("uv"),r.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(r.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(r));const i=m.isWebGLCubeRenderTarget?m.texture:m;r.material.uniforms.envMap.value=i,r.material.uniforms.flipEnvMap.value=i.isCubeTexture?-1:1,c===m&&h===i.version&&u===t.toneMapping||(r.material.needsUpdate=!0,c=m,h=i.version,u=t.toneMapping),e.unshift(r,r.geometry,r.material,0,0,null)}else m&&m.isTexture&&(void 0===o&&(o=new Pe(new sn(2,2),new We({name:"BackgroundMaterial",uniforms:je(rn.background.uniforms),vertexShader:rn.background.vertexShader,fragmentShader:rn.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(o)),o.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),o.material.uniforms.uvTransform.value.copy(m.matrix),c===m&&h===m.version&&u===t.toneMapping||(o.material.needsUpdate=!0,c=m,h=m.version,u=t.toneMapping),e.unshift(o,o.geometry,o.material,0,0,null))}}}function cn(t,e,n,i){const s=t.getParameter(34921),o=i.isWebGL2?null:e.get("OES_vertex_array_object"),r=i.isWebGL2||null!==o,a={},c=f(null);let h=c;function u(e){return i.isWebGL2?t.bindVertexArray(e):o.bindVertexArrayOES(e)}function l(e){return i.isWebGL2?t.deleteVertexArray(e):o.deleteVertexArrayOES(e)}function f(t){const e=[],n=[],i=[];for(let t=0;t<s;t++)e[t]=0,n[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{}}}function d(){const t=h.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function m(t){p(t,0)}function p(n,s){const o=h.newAttributes,r=h.enabledAttributes,a=h.attributeDivisors;if(o[n]=1,0===r[n]&&(t.enableVertexAttribArray(n),r[n]=1),a[n]!==s){(i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,s),a[n]=s}}function v(){const e=h.newAttributes,n=h.enabledAttributes;for(let i=0,s=n.length;i<s;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function g(e,n,s,o,r,a){!0!==i.isWebGL2||5124!==s&&5125!==s?t.vertexAttribPointer(e,n,s,o,r,a):t.vertexAttribIPointer(e,n,s,o,r,a)}function _(){w(),h!==c&&(h=c,u(h.object))}function w(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:function(s,c,l,_,w){let E=!1;if(r){const e=function(e,n,s){const r=!0===s.wireframe;let c=a[e.id];void 0===c&&(c={},a[e.id]=c);let h=c[n.id];void 0===h&&(h={},c[n.id]=h);let u=h[r];void 0===u&&(u=f(i.isWebGL2?t.createVertexArray():o.createVertexArrayOES()),h[r]=u);return u}(_,l,c);h!==e&&(h=e,u(h.object)),E=function(t){const e=h.attributes,n=t.attributes;if(Object.keys(e).length!==Object.keys(n).length)return!0;for(const t in n){const i=e[t],s=n[t];if(i.attribute!==s)return!0;if(i.data!==s.data)return!0}return!1}(_),E&&function(t){const e={},n=t.attributes;for(const t in n){const i=n[t],s={};s.attribute=i,i.data&&(s.data=i.data),e[t]=s}h.attributes=e}(_)}else{const t=!0===c.wireframe;h.geometry===_.id&&h.program===l.id&&h.wireframe===t||(h.geometry=_.id,h.program=l.id,h.wireframe=t,E=!0)}!0===s.isInstancedMesh&&(E=!0),null!==w&&n.update(w,34963),E&&(!function(s,o,r,a){if(!1===i.isWebGL2&&(s.isInstancedMesh||a.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;d();const c=a.attributes,h=r.getAttributes(),u=o.defaultAttributeValues;for(const e in h){const i=h[e];if(i>=0){const o=c[e];if(void 0!==o){const e=o.normalized,s=o.itemSize,r=n.get(o);if(void 0===r)continue;const c=r.buffer,h=r.type,u=r.bytesPerElement;if(o.isInterleavedBufferAttribute){const n=o.data,r=n.stride,l=o.offset;n&&n.isInstancedInterleavedBuffer?(p(i,n.meshPerAttribute),void 0===a.C&&(a.C=n.meshPerAttribute*n.count)):m(i),t.bindBuffer(34962,c),g(i,s,h,e,r*u,l*u)}else o.isInstancedBufferAttribute?(p(i,o.meshPerAttribute),void 0===a.C&&(a.C=o.meshPerAttribute*o.count)):m(i),t.bindBuffer(34962,c),g(i,s,h,e,0,0)}else if("instanceMatrix"===e){const e=n.get(s.instanceMatrix);if(void 0===e)continue;const o=e.buffer,r=e.type;p(i+0,1),p(i+1,1),p(i+2,1),p(i+3,1),t.bindBuffer(34962,o),t.vertexAttribPointer(i+0,4,r,!1,64,0),t.vertexAttribPointer(i+1,4,r,!1,64,16),t.vertexAttribPointer(i+2,4,r,!1,64,32),t.vertexAttribPointer(i+3,4,r,!1,64,48)}else if(void 0!==u){const n=u[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(i,n);break;case 3:t.vertexAttrib3fv(i,n);break;case 4:t.vertexAttrib4fv(i,n);break;default:t.vertexAttrib1fv(i,n)}}}}v()}(s,c,l,_),null!==w&&t.bindBuffer(34963,n.get(w).buffer))},reset:_,resetDefaultState:w,dispose:function(){_();for(const t in a){const e=a[t];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete a[t]}},releaseStatesOfGeometry:function(t){if(void 0===a[t.id])return;const e=a[t.id];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete a[t.id]},releaseStatesOfProgram:function(t){for(const e in a){const n=a[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)l(i[t].object),delete i[t];delete n[t.id]}},initAttributes:d,enableAttribute:m,disableUnusedAttributes:v}}function hn(t,e,n,i){const s=i.isWebGL2;let o;this.setMode=function(t){o=t},this.render=function(e,i){t.drawArrays(o,e,i),n.update(i,o)},this.renderInstances=function(i,r,a,c){if(0===c)return;let h,u;if(s)h=t,u="drawArraysInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===h)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](o,r,a,c),n.update(a,o,c)}}function un(t,e,n){let i;function s(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let r=void 0!==n.precision?n.precision:"highp";const a=s(r);a!==r&&(console.warn("THREE.WebGLRenderer:",r,"not supported, using",a,"instead."),r=a);const c=!0===n.logarithmicDepthBuffer,h=t.getParameter(34930),u=t.getParameter(35660),l=t.getParameter(3379),f=t.getParameter(34076),d=t.getParameter(34921),m=t.getParameter(36347),p=t.getParameter(36348),v=t.getParameter(36349),g=u>0,_=o||!!e.get("OES_texture_float");return{isWebGL2:o,getMaxAnisotropy:function(){if(void 0!==i)return i;const n=e.get("EXT_texture_filter_anisotropic");return i=null!==n?t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,i},getMaxPrecision:s,precision:r,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:u,maxTextureSize:l,maxCubemapSize:f,maxAttributes:d,maxVertexUniforms:m,maxVaryings:p,maxFragmentUniforms:v,vertexTextures:g,floatFragmentTextures:_,floatVertexTextures:g&&_,maxSamples:o?t.getParameter(36183):0}}function ln(){const t=this;let e=null,n=0,i=!1,s=!1;const o=new xt,r=new l,a={value:null,needsUpdate:!1};function c(){a.value!==e&&(a.value=e,a.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function h(e,n,i,s){let c=null!==e?e.length:0,h=null;if(0!==c){if(h=a.value,!0!==s||null===h){const t=i+4*c,s=n.matrixWorldInverse;r.getNormalMatrix(s),(null===h||h.length<t)&&(h=new Float32Array(t));for(let t=0,n=i;t!==c;++t,n+=4)o.copy(e[t]).applyMatrix4(s,r),o.normal.toArray(h,n),h[n+3]=o.constant}a.value=h,a.needsUpdate=!0}return t.numPlanes=c,t.numIntersection=0,h}this.uniform=a,this.numPlanes=0,this.numIntersection=0,this.init=function(t,s,o){const r=0!==t.length||s||0!==n||i;return i=s,e=h(t,o,0),n=t.length,r},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,c()},this.setState=function(t,o,r,u,l,f){if(!i||null===t||0===t.length||s&&!r)s?h(null):c();else{const i=s?0:n,r=4*i;let c=l.clippingState||null;a.value=c,c=h(t,u,r,f);for(let t=0;t!==r;++t)c[t]=e[t];l.clippingState=c,this.numIntersection=o?this.numPlanes:0,this.numPlanes+=i}}}function fn(t){const e={};return{get:function(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return null===i&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),e[n]=i,i}}}function dn(t,e,n,i){const s=new WeakMap,o=new WeakMap;function r(t){const a=t.target,c=s.get(a);null!==c.index&&e.remove(c.index);for(const t in c.attributes)e.remove(c.attributes[t]);a.removeEventListener("dispose",r),s.delete(a);const h=o.get(c);h&&(e.remove(h),o.delete(c)),i.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a.C,n.memory.geometries--}function a(t){const n=[],i=t.index,s=t.attributes.position;let r=0;if(null!==i){const t=i.array;r=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],s=t[e+1],o=t[e+2];n.push(i,s,s,o,o,i)}}else{const t=s.array;r=s.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,s=e+2;n.push(t,i,i,s,s,t)}}const a=new(re(n)>65535?ne:te)(n,1);a.version=r;const c=o.get(t);c&&e.remove(c),o.set(t,a)}return{get:function(t,e){let i=s.get(e);return i||(e.addEventListener("dispose",r),e.isBufferGeometry?i=e:e.isGeometry&&(void 0===e.P&&(e.P=(new me).setFromObject(t)),i=e.P),s.set(e,i),n.memory.geometries++,i)},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const i=t.morphAttributes;for(const t in i){const n=i[t];for(let t=0,i=n.length;t<i;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){const e=o.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&a(t)}else a(t);return o.get(t)}}}function mn(t,e,n,i){const s=i.isWebGL2;let o,r,a;this.setMode=function(t){o=t},this.setIndex=function(t){r=t.type,a=t.bytesPerElement},this.render=function(e,i){t.drawElements(o,i,r,e*a),n.update(i,o)},this.renderInstances=function(i,c,h,u){if(0===u)return;let l,f;if(s)l=t,f="drawElementsInstanced";else if(l=e.get("ANGLE_instanced_arrays"),f="drawElementsInstancedANGLE",null===l)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[f](o,h,r,c*a,u),n.update(h,o,u)}}function pn(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,i){switch(i=i||1,e.calls++,n){case 4:e.triangles+=i*(t/3);break;case 1:e.lines+=i*(t/2);break;case 3:e.lines+=i*(t-1);break;case 2:e.lines+=i*t;break;case 0:e.points+=i*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function vn(t,e){return t[0]-e[0]}function gn(t,e){return Math.abs(e[1])-Math.abs(t[1])}function _n(t){const e={},n=new Float32Array(8),i=[];for(let t=0;t<8;t++)i[t]=[t,0];return{update:function(s,o,r,a){const c=s.morphTargetInfluences,h=void 0===c?0:c.length;let u=e[o.id];if(void 0===u){u=[];for(let t=0;t<h;t++)u[t]=[t,0];e[o.id]=u}for(let t=0;t<h;t++){const e=u[t];e[0]=t,e[1]=c[t]}u.sort(gn);for(let t=0;t<8;t++)t<h&&u[t][1]?(i[t][0]=u[t][0],i[t][1]=u[t][1]):(i[t][0]=Number.MAX_SAFE_INTEGER,i[t][1]=0);i.sort(vn);const l=r.morphTargets&&o.morphAttributes.position,f=r.morphNormals&&o.morphAttributes.normal;let d=0;for(let t=0;t<8;t++){const e=i[t],s=e[0],r=e[1];s!==Number.MAX_SAFE_INTEGER&&r?(l&&o.getAttribute("morphTarget"+t)!==l[s]&&o.setAttribute("morphTarget"+t,l[s]),f&&o.getAttribute("morphNormal"+t)!==f[s]&&o.setAttribute("morphNormal"+t,f[s]),n[t]=r,d+=r):(l&&void 0!==o.getAttribute("morphTarget"+t)&&o.deleteAttribute("morphTarget"+t),f&&void 0!==o.getAttribute("morphNormal"+t)&&o.deleteAttribute("morphNormal"+t),n[t]=0)}const m=o.morphTargetsRelative?1:1-d;a.getUniforms().setValue(t,"morphTargetBaseInfluence",m),a.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function wn(t,e,n,i){let s=new WeakMap;return{update:function(t){const o=i.render.frame,r=t.geometry,a=e.get(t,r);return s.get(a)!==o&&(r.isGeometry&&a.updateFromObject(t),e.update(a),s.set(a,o)),t.isInstancedMesh&&n.update(t.instanceMatrix,34962),a},dispose:function(){s=new WeakMap}}}function En(t,e,n,i,s,o,r,a,c,h){t=void 0!==t?t:[],e=void 0!==e?e:301,r=void 0!==r?r:1022,p.call(this,t,e,n,i,s,o,r,a,c,h),this.flipY=!1}function bn(t,e,n,i){p.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:i||1},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function Mn(t,e,n,i){p.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:i||1},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}rn.physical={uniforms:ke([rn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new u(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Ft(0)},transparency:{value:0}}]),vertexShader:on.meshphysical_vert,fragmentShader:on.meshphysical_frag},En.prototype=Object.create(p.prototype),En.prototype.constructor=En,En.prototype.isCubeTexture=!0,Object.defineProperty(En.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}}),bn.prototype=Object.create(p.prototype),bn.prototype.constructor=bn,bn.prototype.isDataTexture2DArray=!0,Mn.prototype=Object.create(p.prototype),Mn.prototype.constructor=Mn,Mn.prototype.isDataTexture3D=!0;const Tn=new p,xn=new bn,yn=new Mn,Sn=new En,Ln=[],Rn=[],An=new Float32Array(16),On=new Float32Array(9),Cn=new Float32Array(4);function Pn(t,e,n){const i=t[0];if(i<=0||i>0)return t;let s=e*n,o=Ln[s];if(void 0===o&&(o=new Float32Array(s),Ln[s]=o),0!==e){i.toArray(o,0);for(let i=1,s=0;i!==e;++i)s+=n,t[i].toArray(o,s)}return o}function Dn(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Hn(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function Nn(t,e){let n=Rn[e];void 0===n&&(n=new Int32Array(e),Rn[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function In(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function Gn(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Dn(n,e))return;t.uniform2fv(this.addr,e),Hn(n,e)}}function Un(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Dn(n,e))return;t.uniform3fv(this.addr,e),Hn(n,e)}}function Fn(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Dn(n,e))return;t.uniform4fv(this.addr,e),Hn(n,e)}}function Bn(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Dn(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Hn(n,e)}else{if(Dn(n,i))return;Cn.set(i),t.uniformMatrix2fv(this.addr,!1,Cn),Hn(n,i)}}function jn(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Dn(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Hn(n,e)}else{if(Dn(n,i))return;On.set(i),t.uniformMatrix3fv(this.addr,!1,On),Hn(n,i)}}function kn(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Dn(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Hn(n,e)}else{if(Dn(n,i))return;An.set(i),t.uniformMatrix4fv(this.addr,!1,An),Hn(n,i)}}function Vn(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.safeSetTexture2D(e||Tn,s)}function Wn(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTexture2DArray(e||xn,s)}function zn(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTexture3D(e||yn,s)}function Xn(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.safeSetTextureCube(e||Sn,s)}function Yn(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function qn(t,e){const n=this.cache;Dn(n,e)||(t.uniform2iv(this.addr,e),Hn(n,e))}function Zn(t,e){const n=this.cache;Dn(n,e)||(t.uniform3iv(this.addr,e),Hn(n,e))}function Jn(t,e){const n=this.cache;Dn(n,e)||(t.uniform4iv(this.addr,e),Hn(n,e))}function Qn(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Kn(t,e){t.uniform1fv(this.addr,e)}function $n(t,e){t.uniform1iv(this.addr,e)}function ti(t,e){t.uniform2iv(this.addr,e)}function ei(t,e){t.uniform3iv(this.addr,e)}function ni(t,e){t.uniform4iv(this.addr,e)}function ii(t,e){const n=Pn(e,this.size,2);t.uniform2fv(this.addr,n)}function si(t,e){const n=Pn(e,this.size,3);t.uniform3fv(this.addr,n)}function oi(t,e){const n=Pn(e,this.size,4);t.uniform4fv(this.addr,n)}function ri(t,e){const n=Pn(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function ai(t,e){const n=Pn(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function ci(t,e){const n=Pn(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function hi(t,e,n){const i=e.length,s=Nn(n,i);t.uniform1iv(this.addr,s);for(let t=0;t!==i;++t)n.safeSetTexture2D(e[t]||Tn,s[t])}function ui(t,e,n){const i=e.length,s=Nn(n,i);t.uniform1iv(this.addr,s);for(let t=0;t!==i;++t)n.safeSetTextureCube(e[t]||Sn,s[t])}function li(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return In;case 35664:return Gn;case 35665:return Un;case 35666:return Fn;case 35674:return Bn;case 35675:return jn;case 35676:return kn;case 5124:case 35670:return Yn;case 35667:case 35671:return qn;case 35668:case 35672:return Zn;case 35669:case 35673:return Jn;case 5125:return Qn;case 35678:case 36198:case 36298:case 36306:case 35682:return Vn;case 35679:case 36299:case 36307:return zn;case 35680:case 36300:case 36308:case 36293:return Xn;case 36289:case 36303:case 36311:case 36292:return Wn}}(e.type)}function fi(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Kn;case 35664:return ii;case 35665:return si;case 35666:return oi;case 35674:return ri;case 35675:return ai;case 35676:return ci;case 5124:case 35670:return $n;case 35667:case 35671:return ti;case 35668:case 35672:return ei;case 35669:case 35673:return ni;case 35678:case 36198:case 36298:case 36306:case 35682:return hi;case 35680:case 36300:case 36308:case 36293:return ui}}(e.type)}function di(t){this.id=t,this.seq=[],this.map={}}fi.prototype.updateCache=function(t){let e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Hn(e,t)},di.prototype.setValue=function(t,e,n){const i=this.seq;for(let s=0,o=i.length;s!==o;++s){const o=i[s];o.setValue(t,e[o.id],n)}};const mi=/([\w\d_]+)(\])?(\[|\.)?/g;function pi(t,e){t.seq.push(e),t.map[e.id]=e}function vi(t,e,n){const i=t.name,s=i.length;for(mi.lastIndex=0;;){const o=mi.exec(i),r=mi.lastIndex;let a=o[1],c="]"===o[2],h=o[3];if(c&&(a|=0),void 0===h||"["===h&&r+2===s){pi(n,void 0===h?new li(a,t,e):new fi(a,t,e));break}{let t=n.map[a];void 0===t&&(t=new di(a),pi(n,t)),n=t}}}function gi(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);vi(n,t.getUniformLocation(e,n.name),this)}}function _i(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}gi.prototype.setValue=function(t,e,n,i){const s=this.map[e];void 0!==s&&s.setValue(t,n,i)},gi.prototype.setOptional=function(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)},gi.upload=function(t,e,n,i){for(let s=0,o=e.length;s!==o;++s){const o=e[s],r=n[o.id];!1!==r.needsUpdate&&o.setValue(t,r.value,i)}},gi.seqWithValue=function(t,e){const n=[];for(let i=0,s=t.length;i!==s;++i){const s=t[i];s.id in e&&n.push(s)}return n};let wi=0;function Ei(t){switch(t){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function bi(t,e,n){const i=t.getShaderParameter(e,35713),s=t.getShaderInfoLog(e).trim();if(i&&""===s)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+s+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function Mi(t,e){const n=Ei(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Ti(t,e){const n=Ei(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function xi(t,e){let n;switch(e){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function yi(t){return""!==t}function Si(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Li(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Ri=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ai(t){return t.replace(Ri,Oi)}function Oi(t,e){const n=on[e];if(void 0===n)throw Error("Can not resolve #include <"+e+">");return Ai(n)}const Ci=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Pi=/#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;function Di(t){return t.replace(Pi,Ni).replace(Ci,Hi)}function Hi(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Ni(t,e,n,i)}function Ni(t,e,n,i){let s="";for(let t=parseInt(e);t<parseInt(n);t++)s+=i.replace(/\[ i \]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return s}function Ii(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Gi(t,e,n,i){const s=t.getContext(),o=n.defines;let r=n.vertexShader,a=n.fragmentShader;const c=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(n),h=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case 301:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:case 307:e="ENVMAP_TYPE_CUBE_UV";break;case 303:case 304:e="ENVMAP_TYPE_EQUIREC"}return e}(n),u=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case 302:case 304:e="ENVMAP_MODE_REFRACTION"}return e}(n),l=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(n),f=t.gammaFactor>0?t.gammaFactor:1,d=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(yi).join("\n")}(n),m=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(o),p=s.createProgram();let v,g;if(n.isRawShaderMaterial?(v=[m].filter(yi).join("\n"),v.length>0&&(v+="\n"),g=[d,m].filter(yi).join("\n"),g.length>0&&(g+="\n")):(v=[Ii(n),"#define SHADER_NAME "+n.shaderName,m,n.instancing?"#define USE_INSTANCING":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(yi).join("\n"),g=[d,Ii(n),"#define SHADER_NAME "+n.shaderName,m,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.envMap?"#define "+l:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?on.tonemapping_pars_fragment:"",0!==n.toneMapping?xi("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",on.encodings_pars_fragment,n.map?Mi("mapTexelToLinear",n.mapEncoding):"",n.matcap?Mi("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Mi("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Mi("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Mi("lightMapTexelToLinear",n.lightMapEncoding):"",Ti("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(yi).join("\n")),r=Ai(r),r=Si(r,n),r=Li(r,n),a=Ai(a),a=Si(a,n),a=Li(a,n),r=Di(r),a=Di(a),n.isWebGL2&&!n.isRawShaderMaterial){let t=!1;const e=/^\s*#version\s+300\s+es\s*\n/;n.isShaderMaterial&&null!==r.match(e)&&null!==a.match(e)&&(t=!0,r=r.replace(e,""),a=a.replace(e,"")),v="#version 300 es\n\n#define attribute in\n#define varying out\n#define texture2D texture\n"+v,g=["#version 300 es\n\n#define varying in",t?"":"out highp vec4 pc_fragColor;",t?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth\n#define texture2D texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLodEXT textureLod\n#define texture2DProjLodEXT textureProjLod\n#define textureCubeLodEXT textureLod\n#define texture2DGradEXT textureGrad\n#define texture2DProjGradEXT textureProjGrad\n#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+g}const _=g+a,w=_i(s,35633,v+r),E=_i(s,35632,_);if(s.attachShader(p,w),s.attachShader(p,E),void 0!==n.index0AttributeName?s.bindAttribLocation(p,0,n.index0AttributeName):!0===n.morphTargets&&s.bindAttribLocation(p,0,"position"),s.linkProgram(p),t.debug.checkShaderErrors){const t=s.getProgramInfoLog(p).trim(),e=s.getShaderInfoLog(w).trim(),n=s.getShaderInfoLog(E).trim();let i=!0,o=!0;if(!1===s.getProgramParameter(p,35714)){i=!1;const e=bi(s,w,"vertex"),n=bi(s,E,"fragment");console.error("THREE.WebGLProgram: shader error: ",s.getError(),"35715",s.getProgramParameter(p,35715),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(o=!1);o&&(this.diagnostics={runnable:i,programLog:t,vertexShader:{log:e,prefix:v},fragmentShader:{log:n,prefix:g}})}let b,M;return s.deleteShader(w),s.deleteShader(E),this.getUniforms=function(){return void 0===b&&(b=new gi(s,p)),b},this.getAttributes=function(){return void 0===M&&(M=function(t,e){const n={},i=t.getProgramParameter(e,35721);for(let s=0;s<i;s++){const i=t.getActiveAttrib(e,s).name;n[i]=t.getAttribLocation(e,i)}return n}(s,p)),M},this.destroy=function(){i.releaseStatesOfProgram(this),s.deleteProgram(p),this.program=void 0},this.name=n.shaderName,this.id=wi++,this.cacheKey=e,this.usedTimes=1,this.program=p,this.vertexShader=w,this.fragmentShader=E,this}function Ui(t,e,n,i){const s=[],o=n.isWebGL2,r=n.logarithmicDepthBuffer,a=n.floatVertexTextures,c=n.maxVertexUniforms,h=n.vertexTextures;let u=n.precision;const l={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function d(t){let e;return t?t.isTexture?e=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=3e3,e}return{getParameters:function(i,s,f,m,p,v,g){const _=m.fog,w=i.isMeshStandardMaterial?m.environment:null,E=i.envMap||w,b=l[i.type],M=g.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(a)return 1024;{const t=Math.min(Math.floor((c-20)/4),e.length);return t<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+t+"."),0):t}}(g):0;null!==i.precision&&(u=n.getMaxPrecision(i.precision),u!==i.precision&&console.warn("THREE.WebGLProgram.getParameters:",i.precision,"not supported, using",u,"instead."));const T=function(t,e){let n;if(e){const i=rn[e];n={name:t.name||t.type,uniforms:Ve.clone(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader}}else n={name:t.name||t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};return n}(i,b);i.onBeforeCompile(T,t);const x=t.getRenderTarget();return{isWebGL2:o,shaderID:b,shaderName:T.name,uniforms:T.uniforms,vertexShader:T.vertexShader,fragmentShader:T.fragmentShader,defines:i.defines,isRawShaderMaterial:i.isRawShaderMaterial,isShaderMaterial:i.isShaderMaterial,precision:u,instancing:!0===g.isInstancedMesh,supportsVertexTextures:h,outputEncoding:null!==x?d(x.texture):t.outputEncoding,map:!!i.map,mapEncoding:d(i.map),matcap:!!i.matcap,matcapEncoding:d(i.matcap),envMap:!!E,envMapMode:E&&E.mapping,envMapEncoding:d(E),envMapCubeUV:!!E&&(306===E.mapping||307===E.mapping),lightMap:!!i.lightMap,lightMapEncoding:d(i.lightMap),aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,emissiveMapEncoding:d(i.emissiveMap),bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,objectSpaceNormalMap:1===i.normalMapType,tangentSpaceNormalMap:0===i.normalMapType,clearcoatMap:!!i.clearcoatMap,clearcoatRoughnessMap:!!i.clearcoatRoughnessMap,clearcoatNormalMap:!!i.clearcoatNormalMap,displacementMap:!!i.displacementMap,roughnessMap:!!i.roughnessMap,metalnessMap:!!i.metalnessMap,specularMap:!!i.specularMap,alphaMap:!!i.alphaMap,gradientMap:!!i.gradientMap,sheen:!!i.sheen,combine:i.combine,vertexTangents:i.normalMap&&i.vertexTangents,vertexColors:i.vertexColors,vertexUvs:!!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatMap||i.clearcoatRoughnessMap||i.clearcoatNormalMap||i.displacementMap),uvsVertexOnly:!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatNormalMap||!i.displacementMap),fog:!!_,useFog:i.fog,fogExp2:_&&_.isFogExp2,flatShading:i.flatShading,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:r,skinning:i.skinning&&M>0,maxBones:M,useVertexTexture:a,morphTargets:i.morphTargets,morphNormals:i.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:p,numClipIntersection:v,dithering:i.dithering,shadowMapEnabled:t.shadowMap.enabled&&f.length>0,shadowMapType:t.shadowMap.type,toneMapping:i.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:i.premultipliedAlpha,alphaTest:i.alphaTest,doubleSided:2===i.side,flipSided:1===i.side,depthPacking:void 0!==i.depthPacking&&i.depthPacking,index0AttributeName:i.index0AttributeName,extensionDerivatives:i.extensions&&i.extensions.derivatives,extensionFragDepth:i.extensions&&i.extensions.fragDepth,extensionDrawBuffers:i.extensions&&i.extensions.drawBuffers,extensionShaderTextureLOD:i.extensions&&i.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||null!==e.get("EXT_frag_depth"),rendererExtensionDrawBuffers:o||null!==e.get("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||null!==e.get("EXT_shader_texture_lod"),customProgramCacheKey:i.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(void 0===e.isRawShaderMaterial){for(let t=0;t<70;t++)n.push(e[f[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},acquireProgram:function(e,n){let o;for(let t=0,e=s.length;t<e;t++){const e=s[t];if(e.cacheKey===n){o=e,++o.usedTimes;break}}return void 0===o&&(o=new Gi(t,n,e,i),s.push(o)),o},releaseProgram:function(t){if(0==--t.usedTimes){const e=s.indexOf(t);s[e]=s[s.length-1],s.pop(),t.destroy()}},programs:s}}function Fi(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function Bi(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function ji(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function ki(){const t=[];let e=0;const n=[],i=[],s={id:-1};function o(n,i,o,r,a,c){let h=t[e];return void 0===h?(h={id:n.id,object:n,geometry:i,material:o,program:o.program||s,groupOrder:r,renderOrder:n.renderOrder,z:a,group:c},t[e]=h):(h.id=n.id,h.object=n,h.geometry=i,h.material=o,h.program=o.program||s,h.groupOrder=r,h.renderOrder=n.renderOrder,h.z=a,h.group=c),e++,h}return{opaque:n,transparent:i,init:function(){e=0,n.length=0,i.length=0},push:function(t,e,s,r,a,c){const h=o(t,e,s,r,a,c);(!0===s.transparent?i:n).push(h)},unshift:function(t,e,s,r,a,c){const h=o(t,e,s,r,a,c);(!0===s.transparent?i:n).unshift(h)},finish:function(){for(let n=e,i=t.length;n<i;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.program=null,e.group=null}},sort:function(t,e){n.length>1&&n.sort(t||Bi),i.length>1&&i.sort(e||ji)}}}function Vi(){let t=new WeakMap;function e(n){const i=n.target;i.removeEventListener("dispose",e),t.delete(i)}return{get:function(n,i){const s=t.get(n);let o;return void 0===s?(o=new ki,t.set(n,new WeakMap),t.get(n).set(i,o),n.addEventListener("dispose",e)):(o=s.get(i),void 0===o&&(o=new ki,s.set(i,o))),o},dispose:function(){t=new WeakMap}}}function Wi(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new M,color:new Ft};break;case"SpotLight":n={position:new M,direction:new M,color:new Ft,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new M,color:new Ft,distance:0,decay:0};break;case"HemisphereLight":n={direction:new M,skyColor:new Ft,groundColor:new Ft};break;case"RectAreaLight":n={color:new Ft,position:new M,halfWidth:new M,halfHeight:new M}}return t[e.id]=n,n}}}let zi=0;function Xi(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Yi(){const t=new Wi,e=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new u};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new u,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)n.probe.push(new M);const i=new M,s=new O,o=new O;return{setup:function(r,a,c){let h=0,u=0,l=0;for(let t=0;t<9;t++)n.probe[t].set(0,0,0);let f=0,d=0,m=0,p=0,v=0,g=0,_=0,w=0;const E=c.matrixWorldInverse;r.sort(Xi);for(let a=0,c=r.length;a<c;a++){const c=r[a],b=c.color,M=c.intensity,T=c.distance,x=c.shadow&&c.shadow.map?c.shadow.map.texture:null;if(c.isAmbientLight)h+=b.r*M,u+=b.g*M,l+=b.b*M;else if(c.isLightProbe)for(let t=0;t<9;t++)n.probe[t].addScaledVector(c.sh.coefficients[t],M);else if(c.isDirectionalLight){const s=t.get(c);if(s.color.copy(c.color).multiplyScalar(c.intensity),s.direction.setFromMatrixPosition(c.matrixWorld),i.setFromMatrixPosition(c.target.matrixWorld),s.direction.sub(i),s.direction.transformDirection(E),c.castShadow){const t=c.shadow,i=e.get(c);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,n.directionalShadow[f]=i,n.directionalShadowMap[f]=x,n.directionalShadowMatrix[f]=c.shadow.matrix,g++}n.directional[f]=s,f++}else if(c.isSpotLight){const s=t.get(c);if(s.position.setFromMatrixPosition(c.matrixWorld),s.position.applyMatrix4(E),s.color.copy(b).multiplyScalar(M),s.distance=T,s.direction.setFromMatrixPosition(c.matrixWorld),i.setFromMatrixPosition(c.target.matrixWorld),s.direction.sub(i),s.direction.transformDirection(E),s.coneCos=Math.cos(c.angle),s.penumbraCos=Math.cos(c.angle*(1-c.penumbra)),s.decay=c.decay,c.castShadow){const t=c.shadow,i=e.get(c);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,n.spotShadow[m]=i,n.spotShadowMap[m]=x,n.spotShadowMatrix[m]=c.shadow.matrix,w++}n.spot[m]=s,m++}else if(c.isRectAreaLight){const e=t.get(c);e.color.copy(b).multiplyScalar(M),e.position.setFromMatrixPosition(c.matrixWorld),e.position.applyMatrix4(E),o.identity(),s.copy(c.matrixWorld),s.premultiply(E),o.extractRotation(s),e.halfWidth.set(.5*c.width,0,0),e.halfHeight.set(0,.5*c.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),n.rectArea[p]=e,p++}else if(c.isPointLight){const i=t.get(c);if(i.position.setFromMatrixPosition(c.matrixWorld),i.position.applyMatrix4(E),i.color.copy(c.color).multiplyScalar(c.intensity),i.distance=c.distance,i.decay=c.decay,c.castShadow){const t=c.shadow,i=e.get(c);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,i.shadowCameraNear=t.camera.near,i.shadowCameraFar=t.camera.far,n.pointShadow[d]=i,n.pointShadowMap[d]=x,n.pointShadowMatrix[d]=c.shadow.matrix,_++}n.point[d]=i,d++}else if(c.isHemisphereLight){const e=t.get(c);e.direction.setFromMatrixPosition(c.matrixWorld),e.direction.transformDirection(E),e.direction.normalize(),e.skyColor.copy(c.color).multiplyScalar(M),e.groundColor.copy(c.groundColor).multiplyScalar(M),n.hemi[v]=e,v++}}n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=l;const b=n.hash;b.directionalLength===f&&b.pointLength===d&&b.spotLength===m&&b.rectAreaLength===p&&b.hemiLength===v&&b.numDirectionalShadows===g&&b.numPointShadows===_&&b.numSpotShadows===w||(n.directional.length=f,n.spot.length=m,n.rectArea.length=p,n.point.length=d,n.hemi.length=v,n.directionalShadow.length=g,n.directionalShadowMap.length=g,n.pointShadow.length=_,n.pointShadowMap.length=_,n.spotShadow.length=w,n.spotShadowMap.length=w,n.directionalShadowMatrix.length=g,n.pointShadowMatrix.length=_,n.spotShadowMatrix.length=w,b.directionalLength=f,b.pointLength=d,b.spotLength=m,b.rectAreaLength=p,b.hemiLength=v,b.numDirectionalShadows=g,b.numPointShadows=_,b.numSpotShadows=w,n.version=zi++)},state:n}}function qi(){const t=new Yi,e=[],n=[];return{init:function(){e.length=0,n.length=0},state:{lightsArray:e,shadowsArray:n,lights:t},setupLights:function(i){t.setup(e,n,i)},pushLight:function(t){e.push(t)},pushShadow:function(t){n.push(t)}}}function Zi(){let t=new WeakMap;function e(n){const i=n.target;i.removeEventListener("dispose",e),t.delete(i)}return{get:function(n,i){let s;return!1===t.has(n)?(s=new qi,t.set(n,new WeakMap),t.get(n).set(i,s),n.addEventListener("dispose",e)):!1===t.get(n).has(i)?(s=new qi,t.get(n).set(i,s)):s=t.get(n).get(i),s},dispose:function(){t=new WeakMap}}}function Ji(t){zt.call(this),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}function Qi(t){zt.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new M,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}Ji.prototype=Object.create(zt.prototype),Ji.prototype.constructor=Ji,Ji.prototype.isMeshDepthMaterial=!0,Ji.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},Qi.prototype=Object.create(zt.prototype),Qi.prototype.constructor=Qi,Qi.prototype.isMeshDistanceMaterial=!0,Qi.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};function Ki(t,e,n){let i=new Ke;const s=new u,o=new u,r=new v,a=[],c=[],h={},l={0:1,1:0,2:2},f=new We({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new u},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),d=f.clone();d.defines.HORIZONAL_PASS=1;const m=new me;m.setAttribute("position",new Zt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new Pe(m,f),_=this;function w(n,i){const s=e.update(p);f.uniforms.shadow_pass.value=n.map.texture,f.uniforms.resolution.value=n.mapSize,f.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,s,f,p,null),d.uniforms.shadow_pass.value=n.mapPass.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,s,d,p,null)}function E(t,e,n){const i=t<<0|e<<1|n<<2;let s=a[i];return void 0===s&&(s=new Ji({depthPacking:3201,morphTargets:t,skinning:e}),a[i]=s),s}function b(t,e,n){const i=t<<0|e<<1|n<<2;let s=c[i];return void 0===s&&(s=new Qi({morphTargets:t,skinning:e}),c[i]=s),s}function M(e,n,i,s,o,r,a){let c=null,u=E,f=e.customDepthMaterial;if(!0===s.isPointLight&&(u=b,f=e.customDistanceMaterial),void 0===f){let t=!1;!0===i.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let s=!1;!0===e.isSkinnedMesh&&(!0===i.skinning?s=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e));c=u(t,s,!0===e.isInstancedMesh)}else c=f;if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){const t=c.uuid,e=i.uuid;let n=h[t];void 0===n&&(n={},h[t]=n);let s=n[e];void 0===s&&(s=c.clone(),n[e]=s),c=s}return c.visible=i.visible,c.wireframe=i.wireframe,c.side=3===a?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:l[i.side],c.clipShadows=i.clipShadows,c.clippingPlanes=i.clippingPlanes,c.clipIntersection=i.clipIntersection,c.wireframeLinewidth=i.wireframeLinewidth,c.linewidth=i.linewidth,!0===s.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(s.matrixWorld),c.nearDistance=o,c.farDistance=r),c}function T(n,s,o,r,a){if(!1===n.visible)return;if(n.layers.test(s.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===a)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,n.matrixWorld);const i=e.update(n),s=n.material;if(Array.isArray(s)){const e=i.groups;for(let c=0,h=e.length;c<h;c++){const h=e[c],u=s[h.materialIndex];if(u&&u.visible){const e=M(n,i,u,r,o.near,o.far,a);t.renderBufferDirect(o,null,i,e,n,h)}}}else if(s.visible){const e=M(n,i,s,r,o.near,o.far,a);t.renderBufferDirect(o,null,i,e,n,null)}}const c=n.children;for(let t=0,e=c.length;t<e;t++)T(c[t],s,o,r,a)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,a,c){if(!1===_.enabled)return;if(!1===_.autoUpdate&&!1===_.needsUpdate)return;if(0===e.length)return;const h=t.getRenderTarget(),u=t.getActiveCubeFace(),l=t.getActiveMipmapLevel(),f=t.state;f.setBlending(0),f.buffers.color.setClear(1,1,1,1),f.buffers.depth.setTest(!0),f.setScissorTest(!1);for(let h=0,u=e.length;h<u;h++){const u=e[h],l=u.shadow;if(!1===l.autoUpdate&&!1===l.needsUpdate)continue;if(void 0===l){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}s.copy(l.mapSize);const d=l.getFrameExtents();if(s.multiply(d),o.copy(l.mapSize),(s.x>n||s.y>n)&&(s.x>n&&(o.x=Math.floor(n/d.x),s.x=o.x*d.x,l.mapSize.x=o.x),s.y>n&&(o.y=Math.floor(n/d.y),s.y=o.y*d.y,l.mapSize.y=o.y)),null===l.map&&!l.isPointLightShadow&&3===this.type){const t={minFilter:1006,magFilter:1006,format:1023};l.map=new g(s.x,s.y,t),l.map.texture.name=u.name+".shadowMap",l.mapPass=new g(s.x,s.y,t),l.camera.updateProjectionMatrix()}if(null===l.map){const t={minFilter:1003,magFilter:1003,format:1023};l.map=new g(s.x,s.y,t),l.map.texture.name=u.name+".shadowMap",l.camera.updateProjectionMatrix()}t.setRenderTarget(l.map),t.clear();const m=l.getViewportCount();for(let t=0;t<m;t++){const e=l.getViewport(t);r.set(o.x*e.x,o.y*e.y,o.x*e.z,o.y*e.w),f.viewport(r),l.updateMatrices(u,t),i=l.getFrustum(),T(a,c,l.camera,u,this.type)}l.isPointLightShadow||3!==this.type||w(l,c),l.needsUpdate=!1}_.needsUpdate=!1,t.setRenderTarget(h,u,l)}}function $i(t,e,n){const i=n.isWebGL2;const s=new function(){let e=!1;const n=new v;let i=null;const s=new v(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,o,r,a){!0===a&&(e*=r,i*=r,o*=r),n.set(e,i,o,r),!1===s.equals(n)&&(t.clearColor(e,i,o,r),s.copy(n))},reset:function(){e=!1,i=null,s.set(-1,0,0,0)}}},o=new function(){let e=!1,n=null,i=null,s=null;return{setTest:function(t){t?H(2929):N(2929)},setMask:function(i){n===i||e||(t.depthMask(i),n=i)},setFunc:function(e){if(i!==e){if(e)switch(e){case 0:t.depthFunc(512);break;case 1:t.depthFunc(519);break;case 2:t.depthFunc(513);break;case 3:t.depthFunc(515);break;case 4:t.depthFunc(514);break;case 5:t.depthFunc(518);break;case 6:t.depthFunc(516);break;case 7:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);i=e}},setLocked:function(t){e=t},setClear:function(e){s!==e&&(t.clearDepth(e),s=e)},reset:function(){e=!1,n=null,i=null,s=null}}},r=new function(){let e=!1,n=null,i=null,s=null,o=null,r=null,a=null,c=null,h=null;return{setTest:function(t){e||(t?H(2960):N(2960))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,r){i===e&&s===n&&o===r||(t.stencilFunc(e,n,r),i=e,s=n,o=r)},setOp:function(e,n,i){r===e&&a===n&&c===i||(t.stencilOp(e,n,i),r=e,a=n,c=i)},setLocked:function(t){e=t},setClear:function(e){h!==e&&(t.clearStencil(e),h=e)},reset:function(){e=!1,n=null,i=null,s=null,o=null,r=null,a=null,c=null,h=null}}};let a={},c=null,h=null,u=null,l=null,f=null,d=null,m=null,p=null,g=null,_=!1,w=null,E=null,b=null,M=null,T=null;const x=t.getParameter(35661);let y=!1,S=0;const L=t.getParameter(7938);-1!==L.indexOf("WebGL")?(S=parseFloat(/^WebGL\ ([0-9])/.exec(L)[1]),y=S>=1):-1!==L.indexOf("OpenGL ES")&&(S=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(L)[1]),y=S>=2);let R=null,A={};const O=new v,C=new v;function P(e,n,i){const s=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<i;e++)t.texImage2D(n+e,0,6408,1,1,0,6408,5121,s);return o}const D={};function H(e){!0!==a[e]&&(t.enable(e),a[e]=!0)}function N(e){!1!==a[e]&&(t.disable(e),a[e]=!1)}D[3553]=P(3553,3553,1),D[34067]=P(34067,34069,6),s.setClear(0,0,0,1),o.setClear(1),r.setClear(0),H(2929),o.setFunc(3),F(!1),B(1),H(2884),U(0);const I={100:32774,101:32778,102:32779};if(i)I[103]=32775,I[104]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(I[103]=t.MIN_EXT,I[104]=t.MAX_EXT)}const G={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function U(e,n,i,s,o,r,a,c){if(0!==e){if(h||(H(3042),h=!0),5===e)o=o||n,r=r||i,a=a||s,n===l&&o===m||(t.blendEquationSeparate(I[n],I[o]),l=n,m=o),i===f&&s===d&&r===p&&a===g||(t.blendFuncSeparate(G[i],G[s],G[r],G[a]),f=i,d=s,p=r,g=a),u=e,_=null;else if(e!==u||c!==_){if(100===l&&100===m||(t.blendEquation(32774),l=100,m=100),c)switch(e){case 1:t.blendFuncSeparate(1,771,1,771);break;case 2:t.blendFunc(1,1);break;case 3:t.blendFuncSeparate(0,0,769,771);break;case 4:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:t.blendFuncSeparate(770,771,1,771);break;case 2:t.blendFunc(770,1);break;case 3:t.blendFunc(0,769);break;case 4:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}f=null,d=null,p=null,g=null,u=e,_=c}}else h&&(N(3042),h=!1)}function F(e){w!==e&&(e?t.frontFace(2304):t.frontFace(2305),w=e)}function B(e){0!==e?(H(2884),e!==E&&(1===e?t.cullFace(1029):2===e?t.cullFace(1028):t.cullFace(1032))):N(2884),E=e}function j(e,n,i){e?(H(32823),M===n&&T===i||(t.polygonOffset(n,i),M=n,T=i)):N(32823)}function k(e){void 0===e&&(e=33984+x-1),R!==e&&(t.activeTexture(e),R=e)}return{buffers:{color:s,depth:o,stencil:r},enable:H,disable:N,useProgram:function(e){return c!==e&&(t.useProgram(e),c=e,!0)},setBlending:U,setMaterial:function(t,e){2===t.side?N(2884):H(2884);let n=1===t.side;e&&(n=!n),F(n),1===t.blending&&!1===t.transparent?U(0):U(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),o.setFunc(t.depthFunc),o.setTest(t.depthTest),o.setMask(t.depthWrite),s.setMask(t.colorWrite);const i=t.stencilWrite;r.setTest(i),i&&(r.setMask(t.stencilWriteMask),r.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),r.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),j(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)},setFlipSided:F,setCullFace:B,setLineWidth:function(e){e!==b&&(y&&t.lineWidth(e),b=e)},setPolygonOffset:j,setScissorTest:function(t){t?H(3089):N(3089)},activeTexture:k,bindTexture:function(e,n){null===R&&k();let i=A[R];void 0===i&&(i={type:void 0,texture:void 0},A[R]=i),i.type===e&&i.texture===n||(t.bindTexture(e,n||D[e]),i.type=e,i.texture=n)},unbindTexture:function(){const e=A[R];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===O.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),O.copy(e))},viewport:function(e){!1===C.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),C.copy(e))},reset:function(){a={},R=null,A={},c=null,u=null,w=null,E=null,s.reset(),o.reset(),r.reset()}}}function ts(t,e,n,i,s,o,r){const a=s.isWebGL2,c=s.maxTextures,u=s.maxCubemapSize,l=s.maxTextureSize,f=s.maxSamples,d=new WeakMap;let m,p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function v(t,e){return p?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function g(t,e,n,i){let s=1;if((t.width>i||t.height>i)&&(s=i/Math.max(t.width,t.height)),s<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?h.floorPowerOfTwo:Math.floor,o=i(s*t.width),r=i(s*t.height);void 0===m&&(m=v(o,r));const a=n?v(o,r):m;a.width=o,a.height=r;return a.getContext("2d").drawImage(t,0,0,o,r),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+o+"x"+r+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function _(t){return h.isPowerOfTwo(t.width)&&h.isPowerOfTwo(t.height)}function w(t,e){return t.generateMipmaps&&e&&1003!==t.minFilter&&1006!==t.minFilter}function E(e,n,s,o){t.generateMipmap(e);i.get(n).D=Math.log(Math.max(s,o))*Math.LOG2E}function b(n,i,s){if(!1===a)return i;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let o=i;return 6403===i&&(5126===s&&(o=33326),5131===s&&(o=33325),5121===s&&(o=33321)),6407===i&&(5126===s&&(o=34837),5131===s&&(o=34843),5121===s&&(o=32849)),6408===i&&(5126===s&&(o=34836),5131===s&&(o=34842),5121===s&&(o=32856)),33325!==o&&33326!==o&&34842!==o&&34836!==o||e.get("EXT_color_buffer_float"),o}function M(t){return 1003===t||1004===t||1005===t?9728:9729}function T(e){const n=e.target;n.removeEventListener("dispose",T),function(e){const n=i.get(e);if(void 0===n.H)return;t.deleteTexture(n.N),i.remove(e)}(n),n.isVideoTexture&&d.delete(n),r.memory.textures--}function x(e){const n=e.target;n.removeEventListener("dispose",x),function(e){const n=i.get(e),s=i.get(e.texture);if(!e)return;void 0!==s.N&&t.deleteTexture(s.N);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(n.I[e]),n.G&&t.deleteRenderbuffer(n.G[e]);else t.deleteFramebuffer(n.I),n.G&&t.deleteRenderbuffer(n.G),n.U&&t.deleteFramebuffer(n.U),n.F&&t.deleteRenderbuffer(n.F),n.B&&t.deleteRenderbuffer(n.B);i.remove(e.texture),i.remove(e)}(n),r.memory.textures--}let y=0;function S(t,e){const s=i.get(t);if(t.isVideoTexture&&function(t){const e=r.render.frame;d.get(t)!==e&&(d.set(t,e),t.update())}(t),t.version>0&&s.j!==t.version){const n=t.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void D(s,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+e),n.bindTexture(3553,s.N)}function L(e,s){if(6!==e.image.length)return;const r=i.get(e);if(e.version>0&&r.j!==e.version){P(r,e),n.activeTexture(33984+s),n.bindTexture(34067,r.N),t.pixelStorei(37440,e.flipY);const i=e&&(e.isCompressedTexture||e.image[0].isCompressedTexture),c=e.image[0]&&e.image[0].isDataTexture,h=[];for(let t=0;t<6;t++)h[t]=i||c?c?e.image[t].image:e.image[t]:g(e.image[t],!1,!0,u);const l=h[0],f=_(l)||a,d=o.convert(e.format),m=o.convert(e.type),p=b(e.internalFormat,d,m);let v;if(C(34067,e,f),i){for(let t=0;t<6;t++){v=h[t].mipmaps;for(let i=0;i<v.length;i++){const s=v[i];1023!==e.format&&1022!==e.format?null!==d?n.compressedTexImage2D(34069+t,i,p,s.width,s.height,0,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+t,i,p,s.width,s.height,0,d,m,s.data)}}r.D=v.length-1}else{v=e.mipmaps;for(let t=0;t<6;t++)if(c){n.texImage2D(34069+t,0,p,h[t].width,h[t].height,0,d,m,h[t].data);for(let e=0;e<v.length;e++){const i=v[e].image[t].image;n.texImage2D(34069+t,e+1,p,i.width,i.height,0,d,m,i.data)}}else{n.texImage2D(34069+t,0,p,d,m,h[t]);for(let e=0;e<v.length;e++){const i=v[e];n.texImage2D(34069+t,e+1,p,d,m,i.image[t])}}r.D=v.length}w(e,f)&&E(34067,e,l.width,l.height),r.j=e.version,e.onUpdate&&e.onUpdate(e)}else n.activeTexture(33984+s),n.bindTexture(34067,r.N)}function R(t,e){n.activeTexture(33984+e),n.bindTexture(34067,i.get(t).N)}const A={1e3:10497,1001:33071,1002:33648},O={1003:9728,1004:9984,1005:9986,1006:9729,1007:9985,1008:9987};function C(n,o,r){r?(t.texParameteri(n,10242,A[o.wrapS]),t.texParameteri(n,10243,A[o.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,A[o.wrapR]),t.texParameteri(n,10240,O[o.magFilter]),t.texParameteri(n,10241,O[o.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),1001===o.wrapS&&1001===o.wrapT||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,M(o.magFilter)),t.texParameteri(n,10241,M(o.minFilter)),1003!==o.minFilter&&1006!==o.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const c=e.get("EXT_texture_filter_anisotropic");if(c){if(1015===o.type&&null===e.get("OES_texture_float_linear"))return;if(1016===o.type&&null===(a||e.get("OES_texture_half_float_linear")))return;(o.anisotropy>1||i.get(o).k)&&(t.texParameterf(n,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,s.getMaxAnisotropy())),i.get(o).k=o.anisotropy)}}function P(e,n){void 0===e.H&&(e.H=!0,n.addEventListener("dispose",T),e.N=t.createTexture(),r.memory.textures++)}function D(e,i,s){let r=3553;i.isDataTexture2DArray&&(r=35866),i.isDataTexture3D&&(r=32879),P(e,i),n.activeTexture(33984+s),n.bindTexture(r,e.N),t.pixelStorei(37440,i.flipY),t.pixelStorei(37441,i.premultiplyAlpha),t.pixelStorei(3317,i.unpackAlignment);const c=function(t){return!a&&(1001!==t.wrapS||1001!==t.wrapT||1003!==t.minFilter&&1006!==t.minFilter)}(i)&&!1===_(i.image),h=g(i.image,c,!1,l),u=_(h)||a,f=o.convert(i.format);let d,m=o.convert(i.type),p=b(i.internalFormat,f,m);C(r,i,u);const v=i.mipmaps;if(i.isDepthTexture)p=6402,a?p=1015===i.type?36012:1014===i.type?33190:1020===i.type?35056:33189:1015===i.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===i.format&&6402===p&&1012!==i.type&&1014!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=1012,m=o.convert(i.type)),1027===i.format&&6402===p&&(p=34041,1020!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=1020,m=o.convert(i.type))),n.texImage2D(3553,0,p,h.width,h.height,0,f,m,null);else if(i.isDataTexture)if(v.length>0&&u){for(let t=0,e=v.length;t<e;t++)d=v[t],n.texImage2D(3553,t,p,d.width,d.height,0,f,m,d.data);i.generateMipmaps=!1,e.D=v.length-1}else n.texImage2D(3553,0,p,h.width,h.height,0,f,m,h.data),e.D=0;else if(i.isCompressedTexture){for(let t=0,e=v.length;t<e;t++)d=v[t],1023!==i.format&&1022!==i.format?null!==f?n.compressedTexImage2D(3553,t,p,d.width,d.height,0,d.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,t,p,d.width,d.height,0,f,m,d.data);e.D=v.length-1}else if(i.isDataTexture2DArray)n.texImage3D(35866,0,p,h.width,h.height,h.depth,0,f,m,h.data),e.D=0;else if(i.isDataTexture3D)n.texImage3D(32879,0,p,h.width,h.height,h.depth,0,f,m,h.data),e.D=0;else if(v.length>0&&u){for(let t=0,e=v.length;t<e;t++)d=v[t],n.texImage2D(3553,t,p,f,m,d);i.generateMipmaps=!1,e.D=v.length-1}else n.texImage2D(3553,0,p,f,m,h),e.D=0;w(i,u)&&E(r,i,h.width,h.height),e.j=i.version,i.onUpdate&&i.onUpdate(i)}function H(e,s,r,a){const c=o.convert(s.texture.format),h=o.convert(s.texture.type),u=b(s.texture.internalFormat,c,h);n.texImage2D(a,0,u,s.width,s.height,0,c,h,null),t.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,r,a,i.get(s.texture).N,0),t.bindFramebuffer(36160,null)}function N(e,n,i){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let s=33189;if(i){const e=n.depthTexture;e&&e.isDepthTexture&&(1015===e.type?s=36012:1014===e.type&&(s=33190));const i=G(n);t.renderbufferStorageMultisample(36161,i,s,n.width,n.height)}else t.renderbufferStorage(36161,s,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const e=G(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=o.convert(n.texture.format),s=o.convert(n.texture.type),r=b(n.texture.internalFormat,e,s);if(i){const e=G(n);t.renderbufferStorageMultisample(36161,e,r,n.width,n.height)}else t.renderbufferStorage(36161,r,n.width,n.height)}t.bindRenderbuffer(36161,null)}function I(e){const n=i.get(e),s=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(s)throw Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLCubeRenderTarget)throw Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(n.depthTexture).N&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),S(n.depthTexture,0);const s=i.get(n.depthTexture).N;if(1026===n.depthTexture.format)t.framebufferTexture2D(36160,36096,3553,s,0);else{if(1027!==n.depthTexture.format)throw Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,s,0)}}(n.I,e)}else if(s){n.G=[];for(let i=0;i<6;i++)t.bindFramebuffer(36160,n.I[i]),n.G[i]=t.createRenderbuffer(),N(n.G[i],e,!1)}else t.bindFramebuffer(36160,n.I),n.G=t.createRenderbuffer(),N(n.G,e,!1);t.bindFramebuffer(36160,null)}function G(t){return a&&t.isWebGLMultisampleRenderTarget?Math.min(f,t.samples):0}let U=!1,F=!1;this.allocateTextureUnit=function(){const t=y;return t>=c&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+c),y+=1,t},this.resetTextureUnits=function(){y=0},this.setTexture2D=S,this.setTexture2DArray=function(t,e){const s=i.get(t);t.version>0&&s.j!==t.version?D(s,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,s.N))},this.setTexture3D=function(t,e){const s=i.get(t);t.version>0&&s.j!==t.version?D(s,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,s.N))},this.setTextureCube=L,this.setTextureCubeDynamic=R,this.setupRenderTarget=function(e){const s=i.get(e),c=i.get(e.texture);e.addEventListener("dispose",x),c.N=t.createTexture(),r.memory.textures++;const h=!0===e.isWebGLCubeRenderTarget,u=!0===e.isWebGLMultisampleRenderTarget,l=_(e)||a;if(!a||1022!==e.texture.format||1015!==e.texture.type&&1016!==e.texture.type||(e.texture.format=1023,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),h){s.I=[];for(let e=0;e<6;e++)s.I[e]=t.createFramebuffer()}else if(s.I=t.createFramebuffer(),u)if(a){s.U=t.createFramebuffer(),s.F=t.createRenderbuffer(),t.bindRenderbuffer(36161,s.F);const n=o.convert(e.texture.format),i=o.convert(e.texture.type),r=b(e.texture.internalFormat,n,i),a=G(e);t.renderbufferStorageMultisample(36161,a,r,e.width,e.height),t.bindFramebuffer(36160,s.U),t.framebufferRenderbuffer(36160,36064,36161,s.F),t.bindRenderbuffer(36161,null),e.depthBuffer&&(s.B=t.createRenderbuffer(),N(s.B,e,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(h){n.bindTexture(34067,c.N),C(34067,e.texture,l);for(let t=0;t<6;t++)H(s.I[t],e,36064,34069+t);w(e.texture,l)&&E(34067,e.texture,e.width,e.height),n.bindTexture(34067,null)}else n.bindTexture(3553,c.N),C(3553,e.texture,l),H(s.I,e,36064,3553),w(e.texture,l)&&E(3553,e.texture,e.width,e.height),n.bindTexture(3553,null);e.depthBuffer&&I(e)},this.updateRenderTargetMipmap=function(t){const e=t.texture;if(w(e,_(t)||a)){const s=t.isWebGLCubeRenderTarget?34067:3553,o=i.get(e).N;n.bindTexture(s,o),E(s,e,t.width,t.height),n.bindTexture(s,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(a){const n=i.get(e);t.bindFramebuffer(36008,n.U),t.bindFramebuffer(36009,n.I);const s=e.width,o=e.height;let r=16384;e.depthBuffer&&(r|=256),e.stencilBuffer&&(r|=1024),t.blitFramebuffer(0,0,s,o,0,0,s,o,r,9728),t.bindFramebuffer(36160,n.U)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===U&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),U=!0),t=t.texture),S(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===F&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),F=!0),t=t.texture),t&&t.isCubeTexture||Array.isArray(t.image)&&6===t.image.length?L(t,e):R(t,e)}}function es(t,e,n){const i=n.isWebGL2;return{convert:function(t){let n;if(1009===t)return 5121;if(1017===t)return 32819;if(1018===t)return 32820;if(1019===t)return 33635;if(1010===t)return 5120;if(1011===t)return 5122;if(1012===t)return 5123;if(1013===t)return 5124;if(1014===t)return 5125;if(1015===t)return 5126;if(1016===t)return i?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(1021===t)return 6406;if(1022===t)return 6407;if(1023===t)return 6408;if(1024===t)return 6409;if(1025===t)return 6410;if(1026===t)return 6402;if(1027===t)return 34041;if(1028===t)return 6403;if(1029===t)return 36244;if(1030===t)return 33319;if(1031===t)return 33320;if(1032===t)return 36248;if(1033===t)return 36249;if(33776===t||33777===t||33778===t||33779===t){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(33776===t)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===t)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===t)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===t)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===t||35841===t||35842===t||35843===t){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(35840===t)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===t)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===t)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===t)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===t)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===t||37496===t)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(37492===t)return n.COMPRESSED_RGB8_ETC2;if(37496===t)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===t||37809===t||37810===t||37811===t||37812===t||37813===t||37814===t||37815===t||37816===t||37817===t||37818===t||37819===t||37820===t||37821===t||37840===t||37841===t||37842===t||37843===t||37844===t||37845===t||37846===t||37847===t||37848===t||37849===t||37850===t||37851===t||37852===t||37853===t?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):36492===t?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):1020===t?i?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function ns(t){Xe.call(this),this.cameras=t||[]}function is(){q.call(this),this.type="Group"}function ss(){this.V=null,this.W=null}function os(t,e){const n=this;let i=null,s=1,o=null,r="local-floor",a=null;const c=[],h=new Map,u=new Xe;u.layers.enable(1),u.viewport=new v;const l=new Xe;l.layers.enable(2),l.viewport=new v;const f=[u,l],d=new ns;d.layers.enable(1),d.layers.enable(2);let m=null,p=null;function g(t){const e=h.get(t.inputSource);e&&e.dispatchEvent({type:t.type})}function _(){h.forEach((function(t,e){t.disconnect(e)})),h.clear(),t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),S.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function w(t){o=t,S.setContext(i),S.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}function E(t){const e=i.inputSources;for(let t=0;t<c.length;t++)h.set(e[t],c[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=h.get(n);i&&(i.dispatchEvent({type:"disconnected",data:n}),h.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],i=h.get(n);i&&i.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=c[t];return void 0===e&&(e=new ss,c[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=c[t];return void 0===e&&(e=new ss,c[t]=e),e.getGripSpace()},this.setFramebufferScaleFactor=function(t){s=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){r=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getSession=function(){return i},this.setSession=function(t){if(i=t,null!==i){i.addEventListener("select",g),i.addEventListener("selectstart",g),i.addEventListener("selectend",g),i.addEventListener("squeeze",g),i.addEventListener("squeezestart",g),i.addEventListener("squeezeend",g),i.addEventListener("end",_);const t=e.getContextAttributes();!0!==t.xrCompatible&&e.makeXRCompatible();const n={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:s},o=new XRWebGLLayer(i,e,n);i.updateRenderState({baseLayer:o}),i.requestReferenceSpace(r).then(w),i.addEventListener("inputsourceschange",E)}};const b=new M,T=new M;function x(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.getInverse(t.matrixWorld)}this.getCamera=function(t){d.near=l.near=u.near=t.near,d.far=l.far=u.far=t.far,m===d.near&&p===d.far||(i.updateRenderState({depthNear:d.near,depthFar:d.far}),m=d.near,p=d.far);const e=t.parent,n=d.cameras;x(d,e);for(let t=0;t<n.length;t++)x(n[t],e);t.matrixWorld.copy(d.matrixWorld);const s=t.children;for(let t=0,e=s.length;t<e;t++)s[t].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){b.setFromMatrixPosition(e.matrixWorld),T.setFromMatrixPosition(n.matrixWorld);const i=b.distanceTo(T),s=e.projectionMatrix.elements,o=n.projectionMatrix.elements,r=s[14]/(s[10]-1),a=s[14]/(s[10]+1),c=(s[9]+1)/s[5],h=(s[9]-1)/s[5],u=(s[8]-1)/s[0],l=(o[8]+1)/o[0],f=r*u,d=r*l,m=i/(-u+l),p=m*-u;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(p),t.translateZ(m),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.getInverse(t.matrixWorld);const v=r+m,g=a+m,_=f-p,w=d+(i-p),E=c*a/g*v,M=h*a/g*v;t.projectionMatrix.makePerspective(_,w,E,M,v,g)}(d,u,l):d.projectionMatrix.copy(u.projectionMatrix),d};let y=null;const S=new tn;S.setAnimationLoop((function(e,n){if(a=n.getViewerPose(o),null!==a){const e=a.views,n=i.renderState.baseLayer;t.setFramebuffer(n.framebuffer);let s=!1;e.length!==d.cameras.length&&(d.cameras.length=0,s=!0);for(let t=0;t<e.length;t++){const i=e[t],o=n.getViewport(i),r=f[t];r.matrix.fromArray(i.transform.matrix),r.projectionMatrix.fromArray(i.projectionMatrix),r.viewport.set(o.x,o.y,o.width,o.height),0===t&&d.matrix.copy(r.matrix),!0===s&&d.cameras.push(r)}}const s=i.inputSources;for(let t=0;t<c.length;t++){const e=c[t],i=s[t];e.update(i,n,o)}y&&y(e,n)})),this.setAnimationLoop=function(t){y=t},this.dispose=function(){}}function rs(t){function e(e,n,i){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const s=n.envMap||i;let o,r;s&&(e.envMap.value=s,e.flipEnvMap.value=s.isCubeTexture?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio,e.maxMipLevel.value=t.get(s).D),n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?o=n.map:n.specularMap?o=n.specularMap:n.displacementMap?o=n.displacementMap:n.normalMap?o=n.normalMap:n.bumpMap?o=n.bumpMap:n.roughnessMap?o=n.roughnessMap:n.metalnessMap?o=n.metalnessMap:n.alphaMap?o=n.alphaMap:n.emissiveMap&&(o=n.emissiveMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),e.uvTransform.value.copy(o.matrix)),n.aoMap?r=n.aoMap:n.lightMap&&(r=n.lightMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uv2Transform.value.copy(r.matrix))}function n(t,e,n){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),(e.envMap||n)&&(t.envMapIntensity.value=e.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,i,s,o,r){i.isMeshBasicMaterial?e(t,i):i.isMeshLambertMaterial?(e(t,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,i)):i.isMeshToonMaterial?(e(t,i),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshPhongMaterial?(e(t,i),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshStandardMaterial?(e(t,i,s),i.isMeshPhysicalMaterial?function(t,e,i){n(t,e,i),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen);e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap);e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap);e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate());t.transparency.value=e.transparency}(t,i,s):n(t,i,s)):i.isMeshMatcapMaterial?(e(t,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDepthMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDistanceMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,i)):i.isMeshNormalMaterial?(e(t,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,i)):i.isPointsMaterial?function(t,e,n,i){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*i,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let s;e.map?s=e.map:e.alphaMap&&(s=e.alphaMap);void 0!==s&&(!0===s.matrixAutoUpdate&&s.updateMatrix(),t.uvTransform.value.copy(s.matrix))}(t,i,o,r):i.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function as(t){const e=void 0!==(t=t||{}).canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=void 0!==t.context?t.context:null,i=void 0!==t.alpha&&t.alpha,s=void 0===t.depth||t.depth,o=void 0===t.stencil||t.stencil,r=void 0!==t.antialias&&t.antialias,a=void 0===t.premultipliedAlpha||t.premultipliedAlpha,c=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,l=void 0!==t.powerPreference?t.powerPreference:"default",f=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let d=null,m=null;this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const p=this;let g=!1,_=null,w=0,E=0,b=null,T=null,x=-1,y=null,S=null;const L=new v,R=new v;let A=null,C=e.width,P=e.height,D=1,H=null,N=null;const I=new v(0,0,C,P),G=new v(0,0,C,P);let U=!1;const F=new Ke,B=new ln;let j=!1,k=!1;const V=new O,W=new M,z={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function X(){return null===b?D:1}let Y,q,Z,J,Q,K,$,tt,et,nt,it,st,ot,rt,at,ct,ht,ut,lt,ft=n;function dt(t,n){for(let i=0;i<t.length;i++){const s=t[i],o=e.getContext(s,n);if(null!==o)return o}return null}try{const t={alpha:i,depth:s,stencil:o,antialias:r,premultipliedAlpha:a,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:f};if(e.addEventListener("webglcontextlost",gt,!1),e.addEventListener("webglcontextrestored",_t,!1),null===ft){const e=["webgl2","webgl","experimental-webgl"];if(!0===p.isWebGL1Renderer&&e.shift(),ft=dt(e,t),null===ft)throw dt(e)?Error("Error creating WebGL context with your selected attributes."):Error("Error creating WebGL context.")}void 0===ft.getShaderPrecisionFormat&&(ft.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function mt(){Y=new fn(ft),q=new un(ft,Y,t),!1===q.isWebGL2&&(Y.get("WEBGL_depth_texture"),Y.get("OES_texture_float"),Y.get("OES_texture_half_float"),Y.get("OES_texture_half_float_linear"),Y.get("OES_standard_derivatives"),Y.get("OES_element_index_uint"),Y.get("OES_vertex_array_object"),Y.get("ANGLE_instanced_arrays")),Y.get("OES_texture_float_linear"),ut=new es(ft,Y,q),Z=new $i(ft,Y,q),Z.scissor(R.copy(G).multiplyScalar(D).floor()),Z.viewport(L.copy(I).multiplyScalar(D).floor()),J=new pn(ft),Q=new Fi,K=new ts(ft,Y,Z,Q,q,ut,J),$=new en(ft,q),lt=new cn(ft,Y,$,q),tt=new dn(ft,$,J,lt),et=new wn(ft,tt,$,J),at=new _n(ft),nt=new Ui(p,Y,q,lt),it=new rs(Q),st=new Vi,ot=new Zi,rt=new an(p,Z,et,a),ct=new hn(ft,Y,J,q),ht=new mn(ft,Y,J,q),J.programs=nt.programs,p.capabilities=q,p.extensions=Y,p.properties=Q,p.renderLists=st,p.state=Z,p.info=J}mt();const pt=new os(p,ft);this.xr=pt;const vt=new Ki(p,et,q.maxTextureSize);function gt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function _t(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1,mt()}function wt(t){const e=t.target;e.removeEventListener("dispose",wt),function(t){Et(t),Q.remove(t)}(e)}function Et(t){const e=Q.get(t).program;t.program=void 0,void 0!==e&&nt.releaseProgram(e)}this.shadowMap=vt,this.getContext=function(){return ft},this.getContextAttributes=function(){return ft.getContextAttributes()},this.forceContextLoss=function(){const t=Y.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=Y.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return D},this.setPixelRatio=function(t){void 0!==t&&(D=t,this.setSize(C,P,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new u),t.set(C,P)},this.setSize=function(t,n,i){pt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(C=t,P=n,e.width=Math.floor(t*D),e.height=Math.floor(n*D),!1!==i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new u),t.set(C*D,P*D).floor()},this.setDrawingBufferSize=function(t,n,i){C=t,P=n,D=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new v),t.copy(L)},this.getViewport=function(t){return t.copy(I)},this.setViewport=function(t,e,n,i){t.isVector4?I.set(t.x,t.y,t.z,t.w):I.set(t,e,n,i),Z.viewport(L.copy(I).multiplyScalar(D).floor())},this.getScissor=function(t){return t.copy(G)},this.setScissor=function(t,e,n,i){t.isVector4?G.set(t.x,t.y,t.z,t.w):G.set(t,e,n,i),Z.scissor(R.copy(G).multiplyScalar(D).floor())},this.getScissorTest=function(){return U},this.setScissorTest=function(t){Z.setScissorTest(U=t)},this.setOpaqueSort=function(t){H=t},this.setTransparentSort=function(t){N=t},this.getClearColor=function(){return rt.getClearColor()},this.setClearColor=function(){rt.setClearColor.apply(rt,arguments)},this.getClearAlpha=function(){return rt.getClearAlpha()},this.setClearAlpha=function(){rt.setClearAlpha.apply(rt,arguments)},this.clear=function(t,e,n){let i=0;(void 0===t||t)&&(i|=16384),(void 0===e||e)&&(i|=256),(void 0===n||n)&&(i|=1024),ft.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",gt,!1),e.removeEventListener("webglcontextrestored",_t,!1),st.dispose(),ot.dispose(),Q.dispose(),et.dispose(),lt.dispose(),pt.dispose(),Mt.stop()},this.renderBufferImmediate=function(t,e){lt.initAttributes();const n=Q.get(t);t.hasPositions&&!n.position&&(n.position=ft.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=ft.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=ft.createBuffer()),t.hasColors&&!n.color&&(n.color=ft.createBuffer());const i=e.getAttributes();t.hasPositions&&(ft.bindBuffer(34962,n.position),ft.bufferData(34962,t.positionArray,35048),lt.enableAttribute(i.position),ft.vertexAttribPointer(i.position,3,5126,!1,0,0)),t.hasNormals&&(ft.bindBuffer(34962,n.normal),ft.bufferData(34962,t.normalArray,35048),lt.enableAttribute(i.normal),ft.vertexAttribPointer(i.normal,3,5126,!1,0,0)),t.hasUvs&&(ft.bindBuffer(34962,n.uv),ft.bufferData(34962,t.uvArray,35048),lt.enableAttribute(i.uv),ft.vertexAttribPointer(i.uv,2,5126,!1,0,0)),t.hasColors&&(ft.bindBuffer(34962,n.color),ft.bufferData(34962,t.colorArray,35048),lt.enableAttribute(i.color),ft.vertexAttribPointer(i.color,3,5126,!1,0,0)),lt.disableUnusedAttributes(),ft.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,i,s,o){null===e&&(e=z);const r=s.isMesh&&s.matrixWorld.determinant()<0,a=Lt(t,e,i,s);Z.setMaterial(i,r);let c=n.index;const h=n.attributes.position;if(null===c){if(void 0===h||0===h.count)return}else if(0===c.count)return;let u,l=1;!0===i.wireframe&&(c=tt.getWireframeAttribute(n),l=2),(i.morphTargets||i.morphNormals)&&at.update(s,n,i,a),lt.setup(s,i,a,n,c);let f=ct;null!==c&&(u=$.get(c),f=ht,f.setIndex(u));const d=null!==c?c.count:h.count,m=n.drawRange.start*l,p=n.drawRange.count*l,v=null!==o?o.start*l:0,g=null!==o?o.count*l:1/0,_=Math.max(m,v),w=Math.max(0,Math.min(d,m+p,v+g)-1-_+1);if(0!==w){if(s.isMesh)!0===i.wireframe?(Z.setLineWidth(i.wireframeLinewidth*X()),f.setMode(1)):f.setMode(4);else if(s.isLine){let t=i.linewidth;void 0===t&&(t=1),Z.setLineWidth(t*X()),s.isLineSegments?f.setMode(1):s.isLineLoop?f.setMode(2):f.setMode(3)}else s.isPoints?f.setMode(0):s.isSprite&&f.setMode(4);if(s.isInstancedMesh)f.renderInstances(n,_,w,s.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n.C);f.renderInstances(n,_,w,t)}else f.render(_,w)}},this.compile=function(t,e){m=ot.get(t,e),m.init(),t.traverse((function(t){t.isLight&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))})),m.setupLights(e);const n=new WeakMap;t.traverse((function(e){let i=e.material;if(i)if(Array.isArray(i))for(let s=0;s<i.length;s++){let o=i[s];!1===n.has(o)&&(St(o,t,e),n.set(o))}else!1===n.has(i)&&(St(i,t,e),n.set(i))}))};let bt=null;const Mt=new tn;function Tt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)m.pushLight(t),t.castShadow&&m.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||F.intersectsSprite(t)){i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=et.update(t),s=t.material;s.visible&&d.push(t,e,s,n,W.z,null)}}else if(t.isImmediateRenderObject)i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V),d.push(t,null,t.material,n,W.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==J.render.frame&&(t.skeleton.update(),t.skeleton.frame=J.render.frame),!t.frustumCulled||F.intersectsObject(t))){i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=et.update(t),s=t.material;if(Array.isArray(s)){const i=e.groups;for(let o=0,r=i.length;o<r;o++){const r=i[o],a=s[r.materialIndex];a&&a.visible&&d.push(t,e,a,n,W.z,r)}}else s.visible&&d.push(t,e,s,n,W.z,null)}const s=t.children;for(let t=0,o=s.length;t<o;t++)Tt(s[t],e,n,i)}function xt(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let s=0,o=t.length;s<o;s++){const o=t[s],r=o.object,a=o.geometry,c=null===i?o.material:i,h=o.group;if(n.isArrayCamera){S=n;const t=n.cameras;for(let n=0,i=t.length;n<i;n++){const i=t[n];r.layers.test(i.layers)&&(Z.viewport(L.copy(i.viewport)),m.setupLights(i),yt(r,e,i,a,c,h))}}else S=null,yt(r,e,n,a,c,h)}}function yt(t,e,n,i,s,o){if(t.onBeforeRender(p,e,n,i,s,o),m=ot.get(e,S||n),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const i=Lt(n,e,s,t);Z.setMaterial(s),lt.reset(),function(t,e){t.render((function(t){p.renderBufferImmediate(t,e)}))}(t,i)}else p.renderBufferDirect(n,e,i,s,t,o);t.onAfterRender(p,e,n,i,s,o),m=ot.get(e,S||n)}function St(t,e,n){!0!==e.isScene&&(e=z);const i=Q.get(t),s=m.state.lights,o=m.state.shadowsArray,r=s.state.version,a=nt.getParameters(t,s.state,o,e,B.numPlanes,B.numIntersection,n),c=nt.getProgramCacheKey(a);let h=i.program,u=!0;if(void 0===h)t.addEventListener("dispose",wt);else if(h.cacheKey!==c)Et(t);else if(i.lightsStateVersion!==r)i.lightsStateVersion=r,u=!1;else{if(void 0!==a.shaderID)return;u=!1}u&&(h=nt.acquireProgram(a,c),i.program=h,i.uniforms=a.uniforms,i.outputEncoding=a.outputEncoding,t.program=h);const l=h.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(let e=0;e<p.maxMorphTargets;e++)l["morphTarget"+e]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0;for(let e=0;e<p.maxMorphNormals;e++)l["morphNormal"+e]>=0&&t.numSupportedMorphNormals++}const f=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(i.numClippingPlanes=B.numPlanes,i.numIntersection=B.numIntersection,f.clippingPlanes=B.uniform),i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=r,i.needsLights&&(f.ambientLightColor.value=s.state.ambient,f.lightProbe.value=s.state.probe,f.directionalLights.value=s.state.directional,f.directionalLightShadows.value=s.state.directionalShadow,f.spotLights.value=s.state.spot,f.spotLightShadows.value=s.state.spotShadow,f.rectAreaLights.value=s.state.rectArea,f.pointLights.value=s.state.point,f.pointLightShadows.value=s.state.pointShadow,f.hemisphereLights.value=s.state.hemi,f.directionalShadowMap.value=s.state.directionalShadowMap,f.directionalShadowMatrix.value=s.state.directionalShadowMatrix,f.spotShadowMap.value=s.state.spotShadowMap,f.spotShadowMatrix.value=s.state.spotShadowMatrix,f.pointShadowMap.value=s.state.pointShadowMap,f.pointShadowMatrix.value=s.state.pointShadowMatrix);const d=i.program.getUniforms(),v=gi.seqWithValue(d.seq,f);i.uniformsList=v}function Lt(t,e,n,i){!0!==e.isScene&&(e=z),K.resetTextureUnits();const s=e.fog,o=n.isMeshStandardMaterial?e.environment:null,r=null===b?p.outputEncoding:b.texture.encoding,a=Q.get(n),c=m.state.lights;if(!0===j&&(!0===k||t!==y)){const e=t===y&&n.id===x;B.setState(n.clippingPlanes,n.clipIntersection,n.clipShadows,t,a,e)}n.version===a.j?void 0===a.program||n.fog&&a.fog!==s||a.environment!==o||a.needsLights&&a.lightsStateVersion!==c.state.version?St(n,e,i):void 0===a.numClippingPlanes||a.numClippingPlanes===B.numPlanes&&a.numIntersection===B.numIntersection?a.outputEncoding!==r&&St(n,e,i):St(n,e,i):(St(n,e,i),a.j=n.version);let u=!1,l=!1,f=!1;const d=a.program,v=d.getUniforms(),g=a.uniforms;if(Z.useProgram(d.program)&&(u=!0,l=!0,f=!0),n.id!==x&&(x=n.id,l=!0),u||y!==t){if(v.setValue(ft,"projectionMatrix",t.projectionMatrix),q.logarithmicDepthBuffer&&v.setValue(ft,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),y!==t&&(y=t,l=!0,f=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=v.map.cameraPosition;void 0!==e&&e.setValue(ft,W.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&v.setValue(ft,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&v.setValue(ft,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){v.setOptional(ft,i,"bindMatrix"),v.setOptional(ft,i,"bindMatrixInverse");const t=i.skeleton;if(t){const e=t.bones;if(q.floatVertexTextures){if(void 0===t.boneTexture){let n=Math.sqrt(4*e.length);n=h.ceilPowerOfTwo(n),n=Math.max(n,4);const i=new Float32Array(n*n*4);i.set(t.boneMatrices);const s=new Ze(i,n,n,1023,1015);t.boneMatrices=i,t.boneTexture=s,t.boneTextureSize=n}v.setValue(ft,"boneTexture",t.boneTexture,K),v.setValue(ft,"boneTextureSize",t.boneTextureSize)}else v.setOptional(ft,t,"boneMatrices")}}var _,w;return(l||a.receiveShadow!==i.receiveShadow)&&(a.receiveShadow=i.receiveShadow,v.setValue(ft,"receiveShadow",i.receiveShadow)),l&&(v.setValue(ft,"toneMappingExposure",p.toneMappingExposure),a.needsLights&&(w=f,(_=g).ambientLightColor.needsUpdate=w,_.lightProbe.needsUpdate=w,_.directionalLights.needsUpdate=w,_.directionalLightShadows.needsUpdate=w,_.pointLights.needsUpdate=w,_.pointLightShadows.needsUpdate=w,_.spotLights.needsUpdate=w,_.spotLightShadows.needsUpdate=w,_.rectAreaLights.needsUpdate=w,_.hemisphereLights.needsUpdate=w),s&&n.fog&&it.refreshFogUniforms(g,s),it.refreshMaterialUniforms(g,n,o,D,P),void 0!==g.ltc_1&&(g.ltc_1.value=$e.LTC_1),void 0!==g.ltc_2&&(g.ltc_2.value=$e.LTC_2),gi.upload(ft,a.uniformsList,g,K)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(gi.upload(ft,a.uniformsList,g,K),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&v.setValue(ft,"center",i.center),v.setValue(ft,"modelViewMatrix",i.modelViewMatrix),v.setValue(ft,"normalMatrix",i.normalMatrix),v.setValue(ft,"modelMatrix",i.matrixWorld),d}Mt.setAnimationLoop((function(t){pt.isPresenting||bt&&bt(t)})),"undefined"!=typeof window&&Mt.setContext(window),this.setAnimationLoop=function(t){bt=t,pt.setAnimationLoop(t),null===t?Mt.stop():Mt.start()},this.render=function(t,e){let n,i;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===g)return;lt.resetDefaultState(),x=-1,y=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===pt.enabled&&!0===pt.isPresenting&&(e=pt.getCamera(e)),!0===t.isScene&&t.onBeforeRender(p,t,e,n||b),m=ot.get(t,e),m.init(),V.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),F.setFromProjectionMatrix(V),k=this.localClippingEnabled,j=B.init(this.clippingPlanes,k,e),d=st.get(t,e),d.init(),Tt(t,e,0,p.sortObjects),d.finish(),!0===p.sortObjects&&d.sort(H,N),!0===j&&B.beginShadows();const s=m.state.shadowsArray;vt.render(s,t,e),m.setupLights(e),!0===j&&B.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),rt.render(d,t,e,i);const o=d.opaque,r=d.transparent;o.length>0&&xt(o,t,e),r.length>0&&xt(r,t,e),!0===t.isScene&&t.onAfterRender(p,t,e),null!==b&&(K.updateRenderTargetMipmap(b),K.updateMultisampleRenderTarget(b)),Z.buffers.depth.setTest(!0),Z.buffers.depth.setMask(!0),Z.buffers.color.setMask(!0),Z.setPolygonOffset(!1),d=null,m=null},this.setFramebuffer=function(t){_!==t&&null===b&&ft.bindFramebuffer(36160,t),_=t},this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return E},this.getRenderTarget=function(){return b},this.setRenderTarget=function(t,e,n){b=t,w=e,E=n,t&&void 0===Q.get(t).I&&K.setupRenderTarget(t);let i=_,s=!1;if(t){const n=Q.get(t).I;t.isWebGLCubeRenderTarget?(i=n[e||0],s=!0):i=t.isWebGLMultisampleRenderTarget?Q.get(t).U:n,L.copy(t.viewport),R.copy(t.scissor),A=t.scissorTest}else L.copy(I).multiplyScalar(D).floor(),R.copy(G).multiplyScalar(D).floor(),A=U;if(T!==i&&(ft.bindFramebuffer(36160,i),T=i),Z.viewport(L),Z.scissor(R),Z.setScissorTest(A),s){const i=Q.get(t.texture);ft.framebufferTexture2D(36160,36064,34069+(e||0),i.N,n||0)}},this.readRenderTargetPixels=function(t,e,n,i,s,o,r){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let a=Q.get(t).I;if(t.isWebGLCubeRenderTarget&&void 0!==r&&(a=a[r]),a){let r=!1;a!==T&&(ft.bindFramebuffer(36160,a),r=!0);try{const a=t.texture,c=a.format,h=a.type;if(1023!==c&&ut.convert(c)!==ft.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(1009===h||ut.convert(h)===ft.getParameter(35738)||1015===h&&(q.isWebGL2||Y.get("OES_texture_float")||Y.get("WEBGL_color_buffer_float"))||1016===h&&(q.isWebGL2?Y.get("EXT_color_buffer_float"):Y.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===ft.checkFramebufferStatus(36160)?e>=0&&e<=t.width-i&&n>=0&&n<=t.height-s&&ft.readPixels(e,n,i,s,ut.convert(c),ut.convert(h),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{r&&ft.bindFramebuffer(36160,T)}}},this.copyFramebufferToTexture=function(t,e,n){void 0===n&&(n=0);const i=Math.pow(2,-n),s=Math.floor(e.image.width*i),o=Math.floor(e.image.height*i),r=ut.convert(e.format);K.setTexture2D(e,0),ft.copyTexImage2D(3553,n,r,t.x,t.y,s,o,0),Z.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i){void 0===i&&(i=0);const s=e.image.width,o=e.image.height,r=ut.convert(n.format),a=ut.convert(n.type);K.setTexture2D(n,0),ft.pixelStorei(37440,n.flipY),ft.pixelStorei(37441,n.premultiplyAlpha),ft.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?ft.texSubImage2D(3553,i,t.x,t.y,s,o,r,a,e.image.data):e.isCompressedTexture?ft.compressedTexSubImage2D(3553,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,r,e.mipmaps[0].data):ft.texSubImage2D(3553,i,t.x,t.y,r,a,e.image),0===i&&n.generateMipmaps&&ft.generateMipmap(3553),Z.unbindTexture()},this.initTexture=function(t){K.setTexture2D(t,0),Z.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function cs(t){as.call(this,t)}function hs(t,e){this.name="",this.color=new Ft(t),this.density=void 0!==e?e:25e-5}function us(t,e,n){this.name="",this.color=new Ft(t),this.near=void 0!==e?e:1,this.far=void 0!==n?n:1e3}function ls(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=h.generateUUID()}ns.prototype=Object.assign(Object.create(Xe.prototype),{constructor:ns,isArrayCamera:!0}),is.prototype=Object.assign(Object.create(q.prototype),{constructor:is,isGroup:!0}),Object.assign(ss.prototype,{constructor:ss,getTargetRaySpace:function(){return null===this.V&&(this.V=new is,this.V.matrixAutoUpdate=!1,this.V.visible=!1),this.V},getGripSpace:function(){return null===this.W&&(this.W=new is,this.W.matrixAutoUpdate=!1,this.W.visible=!1),this.W},dispatchEvent:function(t){return null!==this.V&&this.V.dispatchEvent(t),null!==this.W&&this.W.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this.V&&(this.V.visible=!1),null!==this.W&&(this.W.visible=!1),this},update:function(t,e,n){let i=null,s=null;const o=this.V,r=this.W;return t&&(null!==o&&(i=e.getPose(t.targetRaySpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),null!==r&&t.gripSpace&&(s=e.getPose(t.gripSpace,n),null!==s&&(r.matrix.fromArray(s.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale)))),null!==o&&(o.visible=null!==i),null!==r&&(r.visible=null!==s),this}}),Object.assign(os.prototype,a.prototype),cs.prototype=Object.assign(Object.create(as.prototype),{constructor:cs,isWebGL1Renderer:!0}),Object.assign(hs.prototype,{isFogExp2:!0,clone:function(){return new hs(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}),Object.assign(us.prototype,{isFog:!0,clone:function(){return new us(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}),Object.defineProperty(ls.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(ls.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,s=this.stride;i<s;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer.X&&(this.array.buffer.X=h.generateUUID()),void 0===t.arrayBuffers[this.array.buffer.X]&&(t.arrayBuffers[this.array.buffer.X]=this.array.slice(0).buffer);const e=new ls(new this.array.constructor(t.arrayBuffers[this.array.buffer.X]),this.stride);return e.setUsage(this.usage),e},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer.X&&(this.array.buffer.X=h.generateUUID()),void 0===t.arrayBuffers[this.array.buffer.X]&&(t.arrayBuffers[this.array.buffer.X]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer.X,type:this.array.constructor.name,stride:this.stride}}});const fs=new M;function ds(t,e,n,i){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===i}function ms(t){zt.call(this),this.type="SpriteMaterial",this.color=new Ft(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}let ps;Object.defineProperties(ds.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(ds.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)fs.x=this.getX(e),fs.y=this.getY(e),fs.z=this.getZ(e),fs.applyMatrix4(t),this.setXYZ(e,fs.x,fs.y,fs.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,s){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=s,this},clone:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Zt(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new ds(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),ms.prototype=Object.create(zt.prototype),ms.prototype.constructor=ms,ms.prototype.isSpriteMaterial=!0,ms.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};const vs=new M,gs=new M,_s=new M,ws=new u,Es=new u,bs=new O,Ms=new M,Ts=new M,xs=new M,ys=new u,Ss=new u,Ls=new u;function Rs(t){if(q.call(this),this.type="Sprite",void 0===ps){ps=new me;const t=new ls(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);ps.setIndex([0,1,2,0,2,3]),ps.setAttribute("position",new ds(t,3,0,!1)),ps.setAttribute("uv",new ds(t,2,3,!1))}this.geometry=ps,this.material=void 0!==t?t:new ms,this.center=new u(.5,.5)}function As(t,e,n,i,s,o){ws.subVectors(t,n).addScalar(.5).multiply(i),void 0!==s?(Es.x=o*ws.x-s*ws.y,Es.y=s*ws.x+o*ws.y):Es.copy(ws),t.copy(e),t.x+=Es.x,t.y+=Es.y,t.applyMatrix4(bs)}Rs.prototype=Object.assign(Object.create(q.prototype),{constructor:Rs,isSprite:!0,raycast:function(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),gs.setFromMatrixScale(this.matrixWorld),bs.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),_s.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&gs.multiplyScalar(-_s.z);const n=this.material.rotation;let i,s;0!==n&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;As(Ms.set(-.5,-.5,0),_s,o,gs,i,s),As(Ts.set(.5,-.5,0),_s,o,gs,i,s),As(xs.set(.5,.5,0),_s,o,gs,i,s),ys.set(0,0),Ss.set(1,0),Ls.set(1,1);let r=t.ray.intersectTriangle(Ms,Ts,xs,!1,vs);if(null===r&&(As(Ts.set(-.5,.5,0),_s,o,gs,i,s),Ss.set(0,1),r=t.ray.intersectTriangle(Ms,xs,Ts,!1,vs),null===r))return;const a=t.ray.origin.distanceTo(vs);a<t.near||a>t.far||e.push({distance:a,point:vs.clone(),uv:Nt.getUV(vs,Ms,Ts,xs,ys,Ss,Ls,new u),face:null,object:this})},copy:function(t){return q.prototype.copy.call(this,t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}});const Os=new M,Cs=new M;function Ps(){q.call(this),this.Y=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function Ds(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Pe.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new O,this.bindMatrixInverse=new O}Ps.prototype=Object.assign(Object.create(q.prototype),{constructor:Ps,isLOD:!0,copy:function(t){q.prototype.copy.call(this,t,!1);const e=t.levels;for(let t=0,n=e.length;t<n;t++){const n=e[t];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=t.autoUpdate,this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);const n=this.levels;let i;for(i=0;i<n.length&&!(e<n[i].distance);i++);return n.splice(i,0,{distance:e,object:t}),this.add(t),this},getCurrentLevel:function(){return this.Y},getObjectForDistance:function(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i&&!(t<e[n].distance);n++);return e[n-1].object}return null},raycast:function(t,e){if(this.levels.length>0){Os.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(Os);this.getObjectForDistance(n).raycast(t,e)}},update:function(t){const e=this.levels;if(e.length>1){Os.setFromMatrixPosition(t.matrixWorld),Cs.setFromMatrixPosition(this.matrixWorld);const n=Os.distanceTo(Cs)/t.zoom;let i,s;for(e[0].object.visible=!0,i=1,s=e.length;i<s&&n>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this.Y=i-1;i<s;i++)e[i].object.visible=!1}},toJSON:function(t){const e=q.prototype.toJSON.call(this,t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let t=0,i=n.length;t<i;t++){const i=n[t];e.object.levels.push({object:i.object.uuid,distance:i.distance})}return e}}),Ds.prototype=Object.assign(Object.create(Pe.prototype),{constructor:Ds,isSkinnedMesh:!0,copy:function(t){return Pe.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new v,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){Pe.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const t=new M,e=new v,n=new v,i=new M,s=new O;return function(o,r){const a=this.skeleton,c=this.geometry;e.fromBufferAttribute(c.attributes.skinIndex,o),n.fromBufferAttribute(c.attributes.skinWeight,o),t.fromBufferAttribute(c.attributes.position,o).applyMatrix4(this.bindMatrix),r.set(0,0,0);for(let o=0;o<4;o++){const c=n.getComponent(o);if(0!==c){const n=e.getComponent(o);s.multiplyMatrices(a.bones[n].matrixWorld,a.boneInverses[n]),r.addScaledVector(i.copy(t).applyMatrix4(s),c)}}return r.applyMatrix4(this.bindMatrixInverse)}}()});const Hs=new O,Ns=new O;function Is(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new O)}}function Gs(){q.call(this),this.type="Bone"}Object.assign(Is.prototype,{calculateInverses:function(){this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++){const e=new O;this.bones[t]&&e.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(e)}},pose:function(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.getInverse(this.boneInverses[t])}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}},update:function(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let i=0,s=t.length;i<s;i++){const s=t[i]?t[i].matrixWorld:Ns;Hs.multiplyMatrices(s,e[i]),Hs.toArray(n,16*i)}void 0!==i&&(i.needsUpdate=!0)},clone:function(){return new Is(this.bones,this.boneInverses)},getBoneByName:function(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}}),Gs.prototype=Object.assign(Object.create(q.prototype),{constructor:Gs,isBone:!0});const Us=new O,Fs=new O,Bs=[],js=new Pe;function ks(t,e,n){Pe.call(this,t,e),this.instanceMatrix=new Zt(new Float32Array(16*n),16),this.count=n,this.frustumCulled=!1}function Vs(t){zt.call(this),this.type="LineBasicMaterial",this.color=new Ft(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}ks.prototype=Object.assign(Object.create(Pe.prototype),{constructor:ks,isInstancedMesh:!0,copy:function(t){return Pe.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),this.count=t.count,this},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,e){const n=this.matrixWorld,i=this.count;if(js.geometry=this.geometry,js.material=this.material,void 0!==js.material)for(let s=0;s<i;s++){this.getMatrixAt(s,Us),Fs.multiplyMatrices(n,Us),js.matrixWorld=Fs,js.raycast(t,Bs);for(let t=0,n=Bs.length;t<n;t++){const n=Bs[t];n.instanceId=s,n.object=this,e.push(n)}Bs.length=0}},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){}}),Vs.prototype=Object.create(zt.prototype),Vs.prototype.constructor=Vs,Vs.prototype.isLineBasicMaterial=!0,Vs.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this};const Ws=new M,zs=new M,Xs=new O,Ys=new Et,qs=new ft;function Zs(t,e,n){1===n&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),q.call(this),this.type="Line",this.geometry=void 0!==t?t:new me,this.material=void 0!==e?e:new Vs,this.updateMorphTargets()}Zs.prototype=Object.assign(Object.create(q.prototype),{constructor:Zs,isLine:!0,copy:function(t){return q.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)Ws.fromBufferAttribute(e,t-1),zs.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=Ws.distanceTo(zs);t.setAttribute("lineDistance",new ie(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;n[0]=0;for(let t=1,i=e.length;t<i;t++)n[t]=n[t-1],n[t]+=e[t-1].distanceTo(e[t])}return this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Line.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),qs.copy(n.boundingSphere),qs.applyMatrix4(i),qs.radius+=s,!1===t.ray.intersectsSphere(qs))return;Xs.getInverse(i),Ys.copy(t.ray).applyMatrix4(Xs);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),r=o*o,a=new M,c=new M,h=new M,u=new M,l=this&&this.isLineSegments?2:1;if(n.isBufferGeometry){const i=n.index,s=n.attributes.position.array;if(null!==i){const n=i.array;for(let i=0,o=n.length-1;i<o;i+=l){const o=n[i],l=n[i+1];a.fromArray(s,3*o),c.fromArray(s,3*l);if(Ys.distanceSqToSegment(a,c,u,h)>r)continue;u.applyMatrix4(this.matrixWorld);const f=t.ray.origin.distanceTo(u);f<t.near||f>t.far||e.push({distance:f,point:h.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else for(let n=0,i=s.length/3-1;n<i;n+=l){a.fromArray(s,3*n),c.fromArray(s,3*n+3);if(Ys.distanceSqToSegment(a,c,u,h)>r)continue;u.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(u);i<t.near||i>t.far||e.push({distance:i,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const i=n.vertices,s=i.length;for(let n=0;n<s-1;n+=l){if(Ys.distanceSqToSegment(i[n],i[n+1],u,h)>r)continue;u.applyMatrix4(this.matrixWorld);const s=t.ray.origin.distanceTo(u);s<t.near||s>t.far||e.push({distance:s,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||e+"";this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const Js=new M,Qs=new M;function Ks(t,e){Zs.call(this,t,e),this.type="LineSegments"}function $s(t,e){Zs.call(this,t,e),this.type="LineLoop"}function to(t){zt.call(this),this.type="PointsMaterial",this.color=new Ft(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}Ks.prototype=Object.assign(Object.create(Zs.prototype),{constructor:Ks,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)Js.fromBufferAttribute(e,t),Qs.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Js.distanceTo(Qs);t.setAttribute("lineDistance",new ie(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;for(let t=0,i=e.length;t<i;t+=2)Js.copy(e[t]),Qs.copy(e[t+1]),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Js.distanceTo(Qs)}return this}}),$s.prototype=Object.assign(Object.create(Zs.prototype),{constructor:$s,isLineLoop:!0}),to.prototype=Object.create(zt.prototype),to.prototype.constructor=to,to.prototype.isPointsMaterial=!0,to.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};const eo=new O,no=new Et,io=new ft,so=new M;function oo(t,e){q.call(this),this.type="Points",this.geometry=void 0!==t?t:new me,this.material=void 0!==e?e:new to,this.updateMorphTargets()}function ro(t,e,n,i,s,o,r){const a=no.distanceSqToPoint(t);if(a<n){const n=new M;no.closestPointToPoint(t,n),n.applyMatrix4(i);const c=s.ray.origin.distanceTo(n);if(c<s.near||c>s.far)return;o.push({distance:c,distanceToRay:Math.sqrt(a),point:n,index:e,face:null,object:r})}}function ao(t,e,n,i,s,o,r,a,c){p.call(this,t,e,n,i,s,o,r,a,c),this.format=void 0!==r?r:1022,this.minFilter=void 0!==o?o:1006,this.magFilter=void 0!==s?s:1006,this.generateMipmaps=!1}function co(t,e,n,i,s,o,r,a,c,h,u,l){p.call(this,null,o,r,a,c,h,i,s,u,l),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function ho(t,e,n,i,s,o,r,a,c){p.call(this,t,e,n,i,s,o,r,a,c),this.needsUpdate=!0}function uo(t,e,n,i,s,o,r,a,c,h){if(1026!==(h=void 0!==h?h:1026)&&1027!==h)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&1026===h&&(n=1012),void 0===n&&1027===h&&(n=1020),p.call(this,null,i,s,o,r,a,h,n,c),this.image={width:t,height:e},this.magFilter=void 0!==r?r:1003,this.minFilter=void 0!==a?a:1003,this.flipY=!1,this.generateMipmaps=!1}function lo(t){me.call(this),this.type="WireframeGeometry";const e=[],n=[0,0],i={},s=["a","b","c"];if(t&&t.isGeometry){const o=t.faces;for(let t=0,e=o.length;t<e;t++){const e=o[t];for(let t=0;t<3;t++){const o=e[s[t]],r=e[s[(t+1)%3]];n[0]=Math.min(o,r),n[1]=Math.max(o,r);const a=n[0]+","+n[1];void 0===i[a]&&(i[a]={index1:n[0],index2:n[1]})}}for(const n in i){const s=i[n];let o=t.vertices[s.index1];e.push(o.x,o.y,o.z),o=t.vertices[s.index2],e.push(o.x,o.y,o.z)}}else if(t&&t.isBufferGeometry){let s=new M;if(null!==t.index){const o=t.attributes.position,r=t.index;let a=t.groups;0===a.length&&(a=[{start:0,count:r.count,materialIndex:0}]);for(let t=0,e=a.length;t<e;++t){const e=a[t],s=e.start;for(let t=s,o=s+e.count;t<o;t+=3)for(let e=0;e<3;e++){const s=r.getX(t+e),o=r.getX(t+(e+1)%3);n[0]=Math.min(s,o),n[1]=Math.max(s,o);const a=n[0]+","+n[1];void 0===i[a]&&(i[a]={index1:n[0],index2:n[1]})}}for(const t in i){const n=i[t];s.fromBufferAttribute(o,n.index1),e.push(s.x,s.y,s.z),s.fromBufferAttribute(o,n.index2),e.push(s.x,s.y,s.z)}}else{const n=t.attributes.position;for(let t=0,i=n.count/3;t<i;t++)for(let i=0;i<3;i++){const o=3*t+i;s.fromBufferAttribute(n,o),e.push(s.x,s.y,s.z);const r=3*t+(i+1)%3;s.fromBufferAttribute(n,r),e.push(s.x,s.y,s.z)}}}this.setAttribute("position",new ie(e,3))}function fo(t,e,n){Fe.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n},this.fromBufferGeometry(new mo(t,e,n)),this.mergeVertices()}function mo(t,e,n){me.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:n};const i=[],s=[],o=[],r=[],a=1e-5,c=new M,h=new M,u=new M,l=new M,f=new M;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const d=e+1;for(let i=0;i<=n;i++){const d=i/n;for(let n=0;n<=e;n++){const i=n/e;t(i,d,h),s.push(h.x,h.y,h.z),i-a>=0?(t(i-a,d,u),l.subVectors(h,u)):(t(i+a,d,u),l.subVectors(u,h)),d-a>=0?(t(i,d-a,u),f.subVectors(h,u)):(t(i,d+a,u),f.subVectors(u,h)),c.crossVectors(l,f).normalize(),o.push(c.x,c.y,c.z),r.push(i,d)}}for(let t=0;t<n;t++)for(let n=0;n<e;n++){const e=t*d+n,s=t*d+n+1,o=(t+1)*d+n+1,r=(t+1)*d+n;i.push(e,s,r),i.push(s,o,r)}this.setIndex(i),this.setAttribute("position",new ie(s,3)),this.setAttribute("normal",new ie(o,3)),this.setAttribute("uv",new ie(r,2))}function po(t,e,n,i){Fe.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i},this.fromBufferGeometry(new vo(t,e,n,i)),this.mergeVertices()}function vo(t,e,n,i){me.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i},n=n||1;const s=[],o=[];function r(t,e,n,i){const s=Math.pow(2,i),o=[];for(let i=0;i<=s;i++){o[i]=[];const r=t.clone().lerp(n,i/s),a=e.clone().lerp(n,i/s),c=s-i;for(let t=0;t<=c;t++)o[i][t]=0===t&&i===s?r:r.clone().lerp(a,t/c)}for(let t=0;t<s;t++)for(let e=0;e<2*(s-t)-1;e++){const n=Math.floor(e/2);e%2==0?(a(o[t][n+1]),a(o[t+1][n]),a(o[t][n])):(a(o[t][n+1]),a(o[t+1][n+1]),a(o[t+1][n]))}}function a(t){s.push(t.x,t.y,t.z)}function c(e,n){const i=3*e;n.x=t[i+0],n.y=t[i+1],n.z=t[i+2]}function h(t,e,n,i){i<0&&1===t.x&&(o[e]=t.x-1),0===n.x&&0===n.z&&(o[e]=i/2/Math.PI+.5)}function l(t){return Math.atan2(t.z,-t.x)}!function(t){const n=new M,i=new M,s=new M;for(let o=0;o<e.length;o+=3)c(e[o+0],n),c(e[o+1],i),c(e[o+2],s),r(n,i,s,t)}(i=i||0),function(t){const e=new M;for(let n=0;n<s.length;n+=3)e.x=s[n+0],e.y=s[n+1],e.z=s[n+2],e.normalize().multiplyScalar(t),s[n+0]=e.x,s[n+1]=e.y,s[n+2]=e.z}(n),function(){const t=new M;for(let n=0;n<s.length;n+=3){t.x=s[n+0],t.y=s[n+1],t.z=s[n+2];const i=l(t)/2/Math.PI+.5,r=Math.atan2(-(e=t).y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;o.push(i,1-r)}var e;(function(){const t=new M,e=new M,n=new M,i=new M,r=new u,a=new u,c=new u;for(let u=0,f=0;u<s.length;u+=9,f+=6){t.set(s[u+0],s[u+1],s[u+2]),e.set(s[u+3],s[u+4],s[u+5]),n.set(s[u+6],s[u+7],s[u+8]),r.set(o[f+0],o[f+1]),a.set(o[f+2],o[f+3]),c.set(o[f+4],o[f+5]),i.copy(t).add(e).add(n).divideScalar(3);const d=l(i);h(r,f+0,t,d),h(a,f+2,e,d),h(c,f+4,n,d)}})(),function(){for(let t=0;t<o.length;t+=6){const e=o[t+0],n=o[t+2],i=o[t+4],s=Math.max(e,n,i),r=Math.min(e,n,i);s>.9&&r<.1&&(e<.2&&(o[t+0]+=1),n<.2&&(o[t+2]+=1),i<.2&&(o[t+4]+=1))}}()}(),this.setAttribute("position",new ie(s,3)),this.setAttribute("normal",new ie(s.slice(),3)),this.setAttribute("uv",new ie(o,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}function go(t,e){Fe.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new _o(t,e)),this.mergeVertices()}function _o(t,e){vo.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}function wo(t,e){Fe.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Eo(t,e)),this.mergeVertices()}function Eo(t,e){vo.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}function bo(t,e){Fe.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Mo(t,e)),this.mergeVertices()}function Mo(t,e){const n=1.618033988749895,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1];vo.call(this,i,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}function To(t,e){Fe.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new xo(t,e)),this.mergeVertices()}function xo(t,e){const n=1.618033988749895,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i];vo.call(this,s,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}function yo(t,e,n,i,s,o){Fe.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:s},void 0!==o&&console.warn("THREE.TubeGeometry: taper has been removed.");const r=new So(t,e,n,i,s);this.tangents=r.tangents,this.normals=r.normals,this.binormals=r.binormals,this.fromBufferGeometry(r),this.mergeVertices()}function So(t,e,n,i,s){me.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:s},e=e||64,n=n||1,i=i||8,s=s||!1;const o=t.computeFrenetFrames(e,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const r=new M,a=new M,c=new u;let h=new M;const l=[],f=[],d=[],m=[];function p(s){h=t.getPointAt(s/e,h);const c=o.normals[s],u=o.binormals[s];for(let t=0;t<=i;t++){const e=t/i*Math.PI*2,s=Math.sin(e),o=-Math.cos(e);a.x=o*c.x+s*u.x,a.y=o*c.y+s*u.y,a.z=o*c.z+s*u.z,a.normalize(),f.push(a.x,a.y,a.z),r.x=h.x+n*a.x,r.y=h.y+n*a.y,r.z=h.z+n*a.z,l.push(r.x,r.y,r.z)}}!function(){for(let t=0;t<e;t++)p(t);p(!1===s?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=i;n++)c.x=t/e,c.y=n/i,d.push(c.x,c.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),s=(i+1)*t+(e-1),o=(i+1)*t+e,r=(i+1)*(t-1)+e;m.push(n,s,r),m.push(s,o,r)}}()}(),this.setIndex(m),this.setAttribute("position",new ie(l,3)),this.setAttribute("normal",new ie(f,3)),this.setAttribute("uv",new ie(d,2))}function Lo(t,e,n,i,s,o,r){Fe.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:s,q:o},void 0!==r&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new Ro(t,e,n,i,s,o)),this.mergeVertices()}function Ro(t,e,n,i,s,o){me.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:s,q:o},t=t||1,e=e||.4,n=Math.floor(n)||64,i=Math.floor(i)||8,s=s||2,o=o||3;const r=[],a=[],c=[],h=[],u=new M,l=new M,f=new M,d=new M,m=new M,p=new M,v=new M;for(let r=0;r<=n;++r){const _=r/n*s*Math.PI*2;g(_,s,o,t,f),g(_+.01,s,o,t,d),p.subVectors(d,f),v.addVectors(d,f),m.crossVectors(p,v),v.crossVectors(m,p),m.normalize(),v.normalize();for(let t=0;t<=i;++t){const s=t/i*Math.PI*2,o=-e*Math.cos(s),d=e*Math.sin(s);u.x=f.x+(o*v.x+d*m.x),u.y=f.y+(o*v.y+d*m.y),u.z=f.z+(o*v.z+d*m.z),a.push(u.x,u.y,u.z),l.subVectors(u,f).normalize(),c.push(l.x,l.y,l.z),h.push(r/n),h.push(t/i)}}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),s=(i+1)*t+(e-1),o=(i+1)*t+e,a=(i+1)*(t-1)+e;r.push(n,s,a),r.push(s,o,a)}function g(t,e,n,i,s){const o=Math.cos(t),r=Math.sin(t),a=n/e*t,c=Math.cos(a);s.x=i*(2+c)*.5*o,s.y=i*(2+c)*r*.5,s.z=i*Math.sin(a)*.5}this.setIndex(r),this.setAttribute("position",new ie(a,3)),this.setAttribute("normal",new ie(c,3)),this.setAttribute("uv",new ie(h,2))}function Ao(t,e,n,i,s){Fe.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:s},this.fromBufferGeometry(new Oo(t,e,n,i,s)),this.mergeVertices()}function Oo(t,e,n,i,s){me.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:s},t=t||1,e=e||.4,n=Math.floor(n)||8,i=Math.floor(i)||6,s=s||2*Math.PI;const o=[],r=[],a=[],c=[],h=new M,u=new M,l=new M;for(let o=0;o<=n;o++)for(let f=0;f<=i;f++){const d=f/i*s,m=o/n*Math.PI*2;u.x=(t+e*Math.cos(m))*Math.cos(d),u.y=(t+e*Math.cos(m))*Math.sin(d),u.z=e*Math.sin(m),r.push(u.x,u.y,u.z),h.x=t*Math.cos(d),h.y=t*Math.sin(d),l.subVectors(u,h).normalize(),a.push(l.x,l.y,l.z),c.push(f/i),c.push(o/n)}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*t+e-1,s=(i+1)*(t-1)+e-1,r=(i+1)*(t-1)+e,a=(i+1)*t+e;o.push(n,s,a),o.push(s,r,a)}this.setIndex(o),this.setAttribute("position",new ie(r,3)),this.setAttribute("normal",new ie(a,3)),this.setAttribute("uv",new ie(c,2))}oo.prototype=Object.assign(Object.create(q.prototype),{constructor:oo,isPoints:!0,copy:function(t){return q.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Points.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),io.copy(n.boundingSphere),io.applyMatrix4(i),io.radius+=s,!1===t.ray.intersectsSphere(io))return;eo.getInverse(i),no.copy(t.ray).applyMatrix4(eo);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),r=o*o;if(n.isBufferGeometry){const s=n.index,o=n.attributes.position.array;if(null!==s){const n=s.array;for(let s=0,a=n.length;s<a;s++){const a=n[s];so.fromArray(o,3*a),ro(so,a,r,i,t,e,this)}}else for(let n=0,s=o.length/3;n<s;n++)so.fromArray(o,3*n),ro(so,n,r,i,t,e,this)}else{const s=n.vertices;for(let n=0,o=s.length;n<o;n++)ro(s[n],n,r,i,t,e,this)}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||e+"";this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),ao.prototype=Object.assign(Object.create(p.prototype),{constructor:ao,isVideoTexture:!0,update:function(){const t=this.image;t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),co.prototype=Object.create(p.prototype),co.prototype.constructor=co,co.prototype.isCompressedTexture=!0,ho.prototype=Object.create(p.prototype),ho.prototype.constructor=ho,ho.prototype.isCanvasTexture=!0,uo.prototype=Object.create(p.prototype),uo.prototype.constructor=uo,uo.prototype.isDepthTexture=!0,lo.prototype=Object.create(me.prototype),lo.prototype.constructor=lo,fo.prototype=Object.create(Fe.prototype),fo.prototype.constructor=fo,mo.prototype=Object.create(me.prototype),mo.prototype.constructor=mo,po.prototype=Object.create(Fe.prototype),po.prototype.constructor=po,vo.prototype=Object.create(me.prototype),vo.prototype.constructor=vo,go.prototype=Object.create(Fe.prototype),go.prototype.constructor=go,_o.prototype=Object.create(vo.prototype),_o.prototype.constructor=_o,wo.prototype=Object.create(Fe.prototype),wo.prototype.constructor=wo,Eo.prototype=Object.create(vo.prototype),Eo.prototype.constructor=Eo,bo.prototype=Object.create(Fe.prototype),bo.prototype.constructor=bo,Mo.prototype=Object.create(vo.prototype),Mo.prototype.constructor=Mo,To.prototype=Object.create(Fe.prototype),To.prototype.constructor=To,xo.prototype=Object.create(vo.prototype),xo.prototype.constructor=xo,yo.prototype=Object.create(Fe.prototype),yo.prototype.constructor=yo,So.prototype=Object.create(me.prototype),So.prototype.constructor=So,So.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t},Lo.prototype=Object.create(Fe.prototype),Lo.prototype.constructor=Lo,Ro.prototype=Object.create(me.prototype),Ro.prototype.constructor=Ro,Ao.prototype=Object.create(Fe.prototype),Ao.prototype.constructor=Ao,Oo.prototype=Object.create(me.prototype),Oo.prototype.constructor=Oo;const Co=function(t,e,n){n=n||2;let i,s,o,r,a,c,h,u=e&&e.length,l=u?e[0]*n:t.length,f=Po(t,0,l,n,!0),d=[];if(!f||f.next===f.prev)return d;if(u&&(f=function(t,e,n,i){let s,o,r,a,c,h=[];for(s=0,o=e.length;s<o;s++)r=e[s]*i,a=s<o-1?e[s+1]*i:t.length,c=Po(t,r,a,i,!1),c===c.next&&(c.steiner=!0),h.push(Vo(c));for(h.sort(Fo),s=0;s<h.length;s++)Bo(h[s],n),n=Do(n,n.next);return n}(t,e,f,n)),t.length>80*n){i=o=t[0],s=r=t[1];for(let e=n;e<l;e+=n)a=t[e],c=t[e+1],a<i&&(i=a),c<s&&(s=c),a>o&&(o=a),c>r&&(r=c);h=Math.max(o-i,r-s),h=0!==h?1/h:0}return Ho(f,d,n,i,s,h),d};function Po(t,e,n,i,s){let o,r;if(s===function(t,e,n,i){let s=0;for(let o=e,r=n-i;o<n;o+=i)s+=(t[r]-t[o])*(t[o+1]+t[r+1]),r=o;return s}(t,e,n,i)>0)for(o=e;o<n;o+=i)r=$o(o,t[o],t[o+1],r);else for(o=n-i;o>=e;o-=i)r=$o(o,t[o],t[o+1],r);return r&&Yo(r,r.next)&&(tr(r),r=r.next),r}function Do(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!Yo(i,i.next)&&0!==Xo(i.prev,i,i.next))i=i.next;else{if(tr(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function Ho(t,e,n,i,s,o,r){if(!t)return;!r&&o&&function(t,e,n,i){let s=t;do{null===s.z&&(s.z=ko(s.x,s.y,e,n,i)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next}while(s!==t);s.prevZ.nextZ=null,s.prevZ=null,function(t){let e,n,i,s,o,r,a,c,h=1;do{for(n=t,t=null,o=null,r=0;n;){for(r++,i=n,a=0,e=0;e<h&&(a++,i=i.nextZ,i);e++);for(c=h;a>0||c>0&&i;)0!==a&&(0===c||!i||n.z<=i.z)?(s=n,n=n.nextZ,a--):(s=i,i=i.nextZ,c--),o?o.nextZ=s:t=s,s.prevZ=o,o=s;n=i}o.nextZ=null,h*=2}while(r>1)}(s)}(t,i,s,o);let a,c,h=t;for(;t.prev!==t.next;)if(a=t.prev,c=t.next,o?Io(t,i,s,o):No(t))e.push(a.i/n),e.push(t.i/n),e.push(c.i/n),tr(t),t=c.next,h=c.next;else if((t=c)===h){r?1===r?Ho(t=Go(Do(t),e,n),e,n,i,s,o,2):2===r&&Uo(t,e,n,i,s,o):Ho(Do(t),e,n,i,s,o,1);break}}function No(t){let e=t.prev,n=t,i=t.next;if(Xo(e,n,i)>=0)return!1;let s=t.next.next;for(;s!==t.prev;){if(Wo(e.x,e.y,n.x,n.y,i.x,i.y,s.x,s.y)&&Xo(s.prev,s,s.next)>=0)return!1;s=s.next}return!0}function Io(t,e,n,i){let s=t.prev,o=t,r=t.next;if(Xo(s,o,r)>=0)return!1;let a=s.x<o.x?s.x<r.x?s.x:r.x:o.x<r.x?o.x:r.x,c=s.y<o.y?s.y<r.y?s.y:r.y:o.y<r.y?o.y:r.y,h=s.x>o.x?s.x>r.x?s.x:r.x:o.x>r.x?o.x:r.x,u=s.y>o.y?s.y>r.y?s.y:r.y:o.y>r.y?o.y:r.y,l=ko(a,c,e,n,i),f=ko(h,u,e,n,i),d=t.prevZ,m=t.nextZ;for(;d&&d.z>=l&&m&&m.z<=f;){if(d!==t.prev&&d!==t.next&&Wo(s.x,s.y,o.x,o.y,r.x,r.y,d.x,d.y)&&Xo(d.prev,d,d.next)>=0)return!1;if(d=d.prevZ,m!==t.prev&&m!==t.next&&Wo(s.x,s.y,o.x,o.y,r.x,r.y,m.x,m.y)&&Xo(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;d&&d.z>=l;){if(d!==t.prev&&d!==t.next&&Wo(s.x,s.y,o.x,o.y,r.x,r.y,d.x,d.y)&&Xo(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;m&&m.z<=f;){if(m!==t.prev&&m!==t.next&&Wo(s.x,s.y,o.x,o.y,r.x,r.y,m.x,m.y)&&Xo(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function Go(t,e,n){let i=t;do{let s=i.prev,o=i.next.next;!Yo(s,o)&&qo(s,i,i.next,o)&&Qo(s,o)&&Qo(o,s)&&(e.push(s.i/n),e.push(i.i/n),e.push(o.i/n),tr(i),tr(i.next),i=t=o),i=i.next}while(i!==t);return Do(i)}function Uo(t,e,n,i,s,o){let r=t;do{let t=r.next.next;for(;t!==r.prev;){if(r.i!==t.i&&zo(r,t)){let a=Ko(r,t);return r=Do(r,r.next),a=Do(a,a.next),Ho(r,e,n,i,s,o),void Ho(a,e,n,i,s,o)}t=t.next}r=r.next}while(r!==t)}function Fo(t,e){return t.x-e.x}function Bo(t,e){if(e=function(t,e){let n,i=e,s=t.x,o=t.y,r=-1/0;do{if(o<=i.y&&o>=i.next.y&&i.next.y!==i.y){let t=i.x+(o-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=s&&t>r){if(r=t,t===s){if(o===i.y)return i;if(o===i.next.y)return i.next}n=i.x<i.next.x?i:i.next}}i=i.next}while(i!==e);if(!n)return null;if(s===r)return n;let a,c=n,h=n.x,u=n.y,l=1/0;i=n;do{s>=i.x&&i.x>=h&&s!==i.x&&Wo(o<u?s:r,o,h,u,o<u?r:s,o,i.x,i.y)&&(a=Math.abs(o-i.y)/(s-i.x),Qo(i,t)&&(a<l||a===l&&(i.x>n.x||i.x===n.x&&jo(n,i)))&&(n=i,l=a)),i=i.next}while(i!==c);return n}(t,e)){const n=Ko(e,t);Do(e,e.next),Do(n,n.next)}}function jo(t,e){return Xo(t.prev,t,e.prev)<0&&Xo(e.next,t,t.next)<0}function ko(t,e,n,i,s){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*s)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*s)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Vo(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function Wo(t,e,n,i,s,o,r,a){return(s-r)*(e-a)-(t-r)*(o-a)>=0&&(t-r)*(i-a)-(n-r)*(e-a)>=0&&(n-r)*(o-a)-(s-r)*(i-a)>=0}function zo(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&qo(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Qo(t,e)&&Qo(e,t)&&function(t,e){let n=t,i=!1,s=(t.x+e.x)/2,o=(t.y+e.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&s<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(Xo(t.prev,t,e.prev)||Xo(t,e.prev,e))||Yo(t,e)&&Xo(t.prev,t,t.next)>0&&Xo(e.prev,e,e.next)>0)}function Xo(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Yo(t,e){return t.x===e.x&&t.y===e.y}function qo(t,e,n,i){const s=Jo(Xo(t,e,n)),o=Jo(Xo(t,e,i)),r=Jo(Xo(n,i,t)),a=Jo(Xo(n,i,e));return s!==o&&r!==a||(!(0!==s||!Zo(t,n,e))||(!(0!==o||!Zo(t,i,e))||(!(0!==r||!Zo(n,t,i))||!(0!==a||!Zo(n,e,i)))))}function Zo(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Jo(t){return t>0?1:t<0?-1:0}function Qo(t,e){return Xo(t.prev,t,t.next)<0?Xo(t,e,t.next)>=0&&Xo(t,t.prev,e)>=0:Xo(t,e,t.prev)<0||Xo(t,t.next,e)<0}function Ko(t,e){let n=new er(t.i,t.x,t.y),i=new er(e.i,e.x,e.y),s=t.next,o=e.prev;return t.next=e,e.prev=t,n.next=s,s.prev=n,i.next=n,n.prev=i,o.next=i,i.prev=o,i}function $o(t,e,n,i){const s=new er(t,e,n);return i?(s.next=i.next,s.prev=i,i.next.prev=s,i.next=s):(s.prev=s,s.next=s),s}function tr(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function er(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const nr={area:function(t){const e=t.length;let n=0;for(let i=e-1,s=0;s<e;i=s++)n+=t[i].x*t[s].y-t[s].x*t[i].y;return.5*n},isClockWise:function(t){return nr.area(t)<0},triangulateShape:function(t,e){const n=[],i=[],s=[];ir(t),sr(n,t);let o=t.length;e.forEach(ir);for(let t=0;t<e.length;t++)i.push(o),o+=e[t].length,sr(n,e[t]);const r=Co(n,i);for(let t=0;t<r.length;t+=3)s.push(r.slice(t,t+3));return s}};function ir(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function sr(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}function or(t,e){Fe.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new rr(t,e)),this.mergeVertices()}function rr(t,e){me.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:t,options:e};const n=this,i=[],s=[];for(let e=0,n=(t=Array.isArray(t)?t:[t]).length;e<n;e++){o(t[e])}function o(t){const o=[],r=void 0!==e.curveSegments?e.curveSegments:12,a=void 0!==e.steps?e.steps:1;let c=void 0!==e.depth?e.depth:100,h=void 0===e.bevelEnabled||e.bevelEnabled,l=void 0!==e.bevelThickness?e.bevelThickness:6,f=void 0!==e.bevelSize?e.bevelSize:l-2,d=void 0!==e.bevelOffset?e.bevelOffset:0,m=void 0!==e.bevelSegments?e.bevelSegments:3;const p=e.extrudePath,v=void 0!==e.UVGenerator?e.UVGenerator:ar;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),c=e.amount);let g,_,w,E,b,T=!1;p&&(g=p.getSpacedPoints(a),T=!0,h=!1,_=p.computeFrenetFrames(a,!1),w=new M,E=new M,b=new M),h||(m=0,l=0,f=0,d=0);const x=t.extractPoints(r);let y=x.shape;const S=x.holes;if(!nr.isClockWise(y)){y=y.reverse();for(let t=0,e=S.length;t<e;t++){const e=S[t];nr.isClockWise(e)&&(S[t]=e.reverse())}}const L=nr.triangulateShape(y,S),R=y;for(let t=0,e=S.length;t<e;t++){const e=S[t];y=y.concat(e)}function A(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const O=y.length,C=L.length;function P(t,e,n){let i,s,o;const r=t.x-e.x,a=t.y-e.y,c=n.x-t.x,h=n.y-t.y,l=r*r+a*a;if(Math.abs(r*h-a*c)>Number.EPSILON){const f=Math.sqrt(l),d=Math.sqrt(c*c+h*h),m=e.x-a/f,p=e.y+r/f,v=((n.x-h/d-m)*h-(n.y+c/d-p)*c)/(r*h-a*c);i=m+r*v-t.x,s=p+a*v-t.y;const g=i*i+s*s;if(g<=2)return new u(i,s);o=Math.sqrt(g/2)}else{let t=!1;r>Number.EPSILON?c>Number.EPSILON&&(t=!0):r<-Number.EPSILON?c<-Number.EPSILON&&(t=!0):Math.sign(a)===Math.sign(h)&&(t=!0),t?(i=-a,s=r,o=Math.sqrt(l)):(i=r,s=a,o=Math.sqrt(l/2))}return new u(i/o,s/o)}const D=[];for(let t=0,e=R.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),D[t]=P(R[t],R[n],R[i]);const H=[];let N,I=D.concat();for(let t=0,e=S.length;t<e;t++){const e=S[t];N=[];for(let t=0,n=e.length,i=n-1,s=t+1;t<n;t++,i++,s++)i===n&&(i=0),s===n&&(s=0),N[t]=P(e[t],e[i],e[s]);H.push(N),I=I.concat(N)}for(let t=0;t<m;t++){const e=t/m,n=l*Math.cos(e*Math.PI/2),i=f*Math.sin(e*Math.PI/2)+d;for(let t=0,e=R.length;t<e;t++){const e=A(R[t],D[t],i);F(e.x,e.y,-n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];N=H[t];for(let t=0,s=e.length;t<s;t++){const s=A(e[t],N[t],i);F(s.x,s.y,-n)}}}const G=f+d;for(let t=0;t<O;t++){const e=h?A(y[t],I[t],G):y[t];T?(E.copy(_.normals[0]).multiplyScalar(e.x),w.copy(_.binormals[0]).multiplyScalar(e.y),b.copy(g[0]).add(E).add(w),F(b.x,b.y,b.z)):F(e.x,e.y,0)}for(let t=1;t<=a;t++)for(let e=0;e<O;e++){const n=h?A(y[e],I[e],G):y[e];T?(E.copy(_.normals[t]).multiplyScalar(n.x),w.copy(_.binormals[t]).multiplyScalar(n.y),b.copy(g[t]).add(E).add(w),F(b.x,b.y,b.z)):F(n.x,n.y,c/a*t)}for(let t=m-1;t>=0;t--){const e=t/m,n=l*Math.cos(e*Math.PI/2),i=f*Math.sin(e*Math.PI/2)+d;for(let t=0,e=R.length;t<e;t++){const e=A(R[t],D[t],i);F(e.x,e.y,c+n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];N=H[t];for(let t=0,s=e.length;t<s;t++){const s=A(e[t],N[t],i);T?F(s.x,s.y+g[a-1].y,g[a-1].x+n):F(s.x,s.y,c+n)}}}function U(t,e){let n=t.length;for(;--n>=0;){const i=n;let s=n-1;s<0&&(s=t.length-1);for(let t=0,n=a+2*m;t<n;t++){const n=O*t,o=O*(t+1);j(e+i+n,e+s+n,e+s+o,e+i+o)}}}function F(t,e,n){o.push(t),o.push(e),o.push(n)}function B(t,e,s){k(t),k(e),k(s);const o=i.length/3,r=v.generateTopUV(n,i,o-3,o-2,o-1);V(r[0]),V(r[1]),V(r[2])}function j(t,e,s,o){k(t),k(e),k(o),k(e),k(s),k(o);const r=i.length/3,a=v.generateSideWallUV(n,i,r-6,r-3,r-2,r-1);V(a[0]),V(a[1]),V(a[3]),V(a[1]),V(a[2]),V(a[3])}function k(t){i.push(o[3*t+0]),i.push(o[3*t+1]),i.push(o[3*t+2])}function V(t){s.push(t.x),s.push(t.y)}!function(){const t=i.length/3;if(h){let t=0,e=O*t;for(let t=0;t<C;t++){const n=L[t];B(n[2]+e,n[1]+e,n[0]+e)}t=a+2*m,e=O*t;for(let t=0;t<C;t++){const n=L[t];B(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<C;t++){const e=L[t];B(e[2],e[1],e[0])}for(let t=0;t<C;t++){const e=L[t];B(e[0]+O*a,e[1]+O*a,e[2]+O*a)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;U(R,e),e+=R.length;for(let t=0,n=S.length;t<n;t++){const n=S[t];U(n,e),e+=n.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute("position",new ie(i,3)),this.setAttribute("uv",new ie(s,2)),this.computeVertexNormals()}or.prototype=Object.create(Fe.prototype),or.prototype.constructor=or,or.prototype.toJSON=function(){const t=Fe.prototype.toJSON.call(this);return cr(this.parameters.shapes,this.parameters.options,t)},rr.prototype=Object.create(me.prototype),rr.prototype.constructor=rr,rr.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return cr(this.parameters.shapes,this.parameters.options,t)};const ar={generateTopUV:function(t,e,n,i,s){const o=e[3*n],r=e[3*n+1],a=e[3*i],c=e[3*i+1],h=e[3*s],l=e[3*s+1];return[new u(o,r),new u(a,c),new u(h,l)]},generateSideWallUV:function(t,e,n,i,s,o){const r=e[3*n],a=e[3*n+1],c=e[3*n+2],h=e[3*i],l=e[3*i+1],f=e[3*i+2],d=e[3*s],m=e[3*s+1],p=e[3*s+2],v=e[3*o],g=e[3*o+1],_=e[3*o+2];return Math.abs(a-l)<.01?[new u(r,1-c),new u(h,1-f),new u(d,1-p),new u(v,1-_)]:[new u(a,1-c),new u(l,1-f),new u(m,1-p),new u(g,1-_)]}};function cr(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}function hr(t,e){Fe.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new ur(t,e)),this.mergeVertices()}function ur(t,e){const n=(e=e||{}).font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Fe;const i=n.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),rr.call(this,i,e),this.type="TextBufferGeometry"}function lr(t,e,n,i,s,o,r){Fe.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:r},this.fromBufferGeometry(new fr(t,e,n,i,s,o,r)),this.mergeVertices()}function fr(t,e,n,i,s,o,r){me.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:r},t=t||1,e=Math.max(3,Math.floor(e)||8),n=Math.max(2,Math.floor(n)||6),i=void 0!==i?i:0,s=void 0!==s?s:2*Math.PI;const a=Math.min((o=void 0!==o?o:0)+(r=void 0!==r?r:Math.PI),Math.PI);let c=0;const h=[],u=new M,l=new M,f=[],d=[],m=[],p=[];for(let f=0;f<=n;f++){const v=[],g=f/n;let _=0;0==f&&0==o?_=.5/e:f==n&&a==Math.PI&&(_=-.5/e);for(let n=0;n<=e;n++){const a=n/e;u.x=-t*Math.cos(i+a*s)*Math.sin(o+g*r),u.y=t*Math.cos(o+g*r),u.z=t*Math.sin(i+a*s)*Math.sin(o+g*r),d.push(u.x,u.y,u.z),l.copy(u).normalize(),m.push(l.x,l.y,l.z),p.push(a+_,1-g),v.push(c++)}h.push(v)}for(let t=0;t<n;t++)for(let i=0;i<e;i++){const e=h[t][i+1],s=h[t][i],r=h[t+1][i],c=h[t+1][i+1];(0!==t||o>0)&&f.push(e,s,c),(t!==n-1||a<Math.PI)&&f.push(s,r,c)}this.setIndex(f),this.setAttribute("position",new ie(d,3)),this.setAttribute("normal",new ie(m,3)),this.setAttribute("uv",new ie(p,2))}function dr(t,e,n,i,s,o){Fe.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},this.fromBufferGeometry(new mr(t,e,n,i,s,o)),this.mergeVertices()}function mr(t,e,n,i,s,o){me.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},t=t||.5,e=e||1,s=void 0!==s?s:0,o=void 0!==o?o:2*Math.PI,n=void 0!==n?Math.max(3,n):8;const r=[],a=[],c=[],h=[];let l=t;const f=(e-t)/(i=void 0!==i?Math.max(1,i):1),d=new M,m=new u;for(let t=0;t<=i;t++){for(let t=0;t<=n;t++){const i=s+t/n*o;d.x=l*Math.cos(i),d.y=l*Math.sin(i),a.push(d.x,d.y,d.z),c.push(0,0,1),m.x=(d.x/e+1)/2,m.y=(d.y/e+1)/2,h.push(m.x,m.y)}l+=f}for(let t=0;t<i;t++){const e=t*(n+1);for(let t=0;t<n;t++){const i=t+e,s=i,o=i+n+1,a=i+n+2,c=i+1;r.push(s,o,c),r.push(o,a,c)}}this.setIndex(r),this.setAttribute("position",new ie(a,3)),this.setAttribute("normal",new ie(c,3)),this.setAttribute("uv",new ie(h,2))}function pr(t,e,n,i){Fe.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},this.fromBufferGeometry(new vr(t,e,n,i)),this.mergeVertices()}function vr(t,e,n,i){me.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e)||12,n=n||0,i=i||2*Math.PI,i=h.clamp(i,0,2*Math.PI);const s=[],o=[],r=[],a=1/e,c=new M,l=new u;for(let s=0;s<=e;s++){const h=n+s*a*i,u=Math.sin(h),f=Math.cos(h);for(let n=0;n<=t.length-1;n++)c.x=t[n].x*u,c.y=t[n].y,c.z=t[n].x*f,o.push(c.x,c.y,c.z),l.x=s/e,l.y=n/(t.length-1),r.push(l.x,l.y)}for(let n=0;n<e;n++)for(let e=0;e<t.length-1;e++){const i=e+n*t.length,o=i,r=i+t.length,a=i+t.length+1,c=i+1;s.push(o,r,c),s.push(r,a,c)}if(this.setIndex(s),this.setAttribute("position",new ie(o,3)),this.setAttribute("uv",new ie(r,2)),this.computeVertexNormals(),i===2*Math.PI){const n=this.attributes.normal.array,i=new M,s=new M,o=new M,r=e*t.length*3;for(let e=0,a=0;e<t.length;e++,a+=3)i.x=n[a+0],i.y=n[a+1],i.z=n[a+2],s.x=n[r+a+0],s.y=n[r+a+1],s.z=n[r+a+2],o.addVectors(i,s).normalize(),n[a+0]=n[r+a+0]=o.x,n[a+1]=n[r+a+1]=o.y,n[a+2]=n[r+a+2]=o.z}}function gr(t,e){Fe.call(this),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new _r(t,e)),this.mergeVertices()}function _r(t,e){me.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;const n=[],i=[],s=[],o=[];let r=0,a=0;if(!1===Array.isArray(t))c(t);else for(let e=0;e<t.length;e++)c(t[e]),this.addGroup(r,a,e),r+=a,a=0;function c(t){const r=i.length/3,c=t.extractPoints(e);let h=c.shape;const u=c.holes;!1===nr.isClockWise(h)&&(h=h.reverse());for(let t=0,e=u.length;t<e;t++){const e=u[t];!0===nr.isClockWise(e)&&(u[t]=e.reverse())}const l=nr.triangulateShape(h,u);for(let t=0,e=u.length;t<e;t++){const e=u[t];h=h.concat(e)}for(let t=0,e=h.length;t<e;t++){const e=h[t];i.push(e.x,e.y,0),s.push(0,0,1),o.push(e.x,e.y)}for(let t=0,e=l.length;t<e;t++){const e=l[t],i=e[0]+r,s=e[1]+r,o=e[2]+r;n.push(i,s,o),a+=3}}this.setIndex(n),this.setAttribute("position",new ie(i,3)),this.setAttribute("normal",new ie(s,3)),this.setAttribute("uv",new ie(o,2))}function wr(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}function Er(t,e){me.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;const n=[],i=Math.cos(h.DEG2RAD*e),s=[0,0],o={};let r,a,c;const u=["a","b","c"];let l;t.isBufferGeometry?(l=new Fe,l.fromBufferGeometry(t)):l=t.clone(),l.mergeVertices(),l.computeFaceNormals();const f=l.vertices,d=l.faces;for(let t=0,e=d.length;t<e;t++){const e=d[t];for(let n=0;n<3;n++)r=e[u[n]],a=e[u[(n+1)%3]],s[0]=Math.min(r,a),s[1]=Math.max(r,a),c=s[0]+","+s[1],void 0===o[c]?o[c]={index1:s[0],index2:s[1],face1:t,face2:void 0}:o[c].face2=t}for(c in o){const t=o[c];if(void 0===t.face2||d[t.face1].normal.dot(d[t.face2].normal)<=i){let e=f[t.index1];n.push(e.x,e.y,e.z),e=f[t.index2],n.push(e.x,e.y,e.z)}}this.setAttribute("position",new ie(n,3))}function br(t,e,n,i,s,o,r,a){Fe.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new Mr(t,e,n,i,s,o,r,a)),this.mergeVertices()}function Mr(t,e,n,i,s,o,r,a){me.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:r,thetaLength:a};const c=this;t=void 0!==t?t:1,e=void 0!==e?e:1,n=n||1,i=Math.floor(i)||8,s=Math.floor(s)||1,o=void 0!==o&&o,r=void 0!==r?r:0,a=void 0!==a?a:2*Math.PI;const h=[],l=[],f=[],d=[];let m=0;const p=[],v=n/2;let g=0;function _(n){let s,o;const p=new u,_=new M;let w=0;const E=!0===n?t:e,b=!0===n?1:-1;s=m;for(let t=1;t<=i;t++)l.push(0,v*b,0),f.push(0,b,0),d.push(.5,.5),m++;o=m;for(let t=0;t<=i;t++){const e=t/i*a+r,n=Math.cos(e),s=Math.sin(e);_.x=E*s,_.y=v*b,_.z=E*n,l.push(_.x,_.y,_.z),f.push(0,b,0),p.x=.5*n+.5,p.y=.5*s*b+.5,d.push(p.x,p.y),m++}for(let t=0;t<i;t++){const e=s+t,i=o+t;!0===n?h.push(i,i+1,e):h.push(i+1,i,e),w+=3}c.addGroup(g,w,!0===n?1:2),g+=w}!function(){const o=new M,u=new M;let _=0;const w=(e-t)/n;for(let c=0;c<=s;c++){const h=[],g=c/s,_=g*(e-t)+t;for(let t=0;t<=i;t++){const e=t/i,s=e*a+r,c=Math.sin(s),p=Math.cos(s);u.x=_*c,u.y=-g*n+v,u.z=_*p,l.push(u.x,u.y,u.z),o.set(c,w,p).normalize(),f.push(o.x,o.y,o.z),d.push(e,1-g),h.push(m++)}p.push(h)}for(let t=0;t<i;t++)for(let e=0;e<s;e++){const n=p[e][t],i=p[e+1][t],s=p[e+1][t+1],o=p[e][t+1];h.push(n,i,o),h.push(i,s,o),_+=6}c.addGroup(g,_,0),g+=_}(),!1===o&&(t>0&&_(!0),e>0&&_(!1)),this.setIndex(h),this.setAttribute("position",new ie(l,3)),this.setAttribute("normal",new ie(f,3)),this.setAttribute("uv",new ie(d,2))}function Tr(t,e,n,i,s,o,r){br.call(this,0,t,e,n,i,s,o,r),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:r}}function xr(t,e,n,i,s,o,r){Mr.call(this,0,t,e,n,i,s,o,r),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:r}}function yr(t,e,n,i){Fe.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},this.fromBufferGeometry(new Sr(t,e,n,i)),this.mergeVertices()}function Sr(t,e,n,i){me.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},t=t||1,e=void 0!==e?Math.max(3,e):8,n=void 0!==n?n:0,i=void 0!==i?i:2*Math.PI;const s=[],o=[],r=[],a=[],c=new M,h=new u;o.push(0,0,0),r.push(0,0,1),a.push(.5,.5);for(let s=0,u=3;s<=e;s++,u+=3){const l=n+s/e*i;c.x=t*Math.cos(l),c.y=t*Math.sin(l),o.push(c.x,c.y,c.z),r.push(0,0,1),h.x=(o[u]/t+1)/2,h.y=(o[u+1]/t+1)/2,a.push(h.x,h.y)}for(let t=1;t<=e;t++)s.push(t,t+1,0);this.setIndex(s),this.setAttribute("position",new ie(o,3)),this.setAttribute("normal",new ie(r,3)),this.setAttribute("uv",new ie(a,2))}hr.prototype=Object.create(Fe.prototype),hr.prototype.constructor=hr,ur.prototype=Object.create(rr.prototype),ur.prototype.constructor=ur,lr.prototype=Object.create(Fe.prototype),lr.prototype.constructor=lr,fr.prototype=Object.create(me.prototype),fr.prototype.constructor=fr,dr.prototype=Object.create(Fe.prototype),dr.prototype.constructor=dr,mr.prototype=Object.create(me.prototype),mr.prototype.constructor=mr,pr.prototype=Object.create(Fe.prototype),pr.prototype.constructor=pr,vr.prototype=Object.create(me.prototype),vr.prototype.constructor=vr,gr.prototype=Object.create(Fe.prototype),gr.prototype.constructor=gr,gr.prototype.toJSON=function(){const t=Fe.prototype.toJSON.call(this);return wr(this.parameters.shapes,t)},_r.prototype=Object.create(me.prototype),_r.prototype.constructor=_r,_r.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return wr(this.parameters.shapes,t)},Er.prototype=Object.create(me.prototype),Er.prototype.constructor=Er,br.prototype=Object.create(Fe.prototype),br.prototype.constructor=br,Mr.prototype=Object.create(me.prototype),Mr.prototype.constructor=Mr,Tr.prototype=Object.create(br.prototype),Tr.prototype.constructor=Tr,xr.prototype=Object.create(Mr.prototype),xr.prototype.constructor=xr,yr.prototype=Object.create(Fe.prototype),yr.prototype.constructor=yr,Sr.prototype=Object.create(me.prototype),Sr.prototype.constructor=Sr;var Lr=Object.freeze({__proto__:null,WireframeGeometry:lo,ParametricGeometry:fo,ParametricBufferGeometry:mo,TetrahedronGeometry:go,TetrahedronBufferGeometry:_o,OctahedronGeometry:wo,OctahedronBufferGeometry:Eo,IcosahedronGeometry:bo,IcosahedronBufferGeometry:Mo,DodecahedronGeometry:To,DodecahedronBufferGeometry:xo,PolyhedronGeometry:po,PolyhedronBufferGeometry:vo,TubeGeometry:yo,TubeBufferGeometry:So,TorusKnotGeometry:Lo,TorusKnotBufferGeometry:Ro,TorusGeometry:Ao,TorusBufferGeometry:Oo,TextGeometry:hr,TextBufferGeometry:ur,SphereGeometry:lr,SphereBufferGeometry:fr,RingGeometry:dr,RingBufferGeometry:mr,PlaneGeometry:nn,PlaneBufferGeometry:sn,LatheGeometry:pr,LatheBufferGeometry:vr,ShapeGeometry:gr,ShapeBufferGeometry:_r,ExtrudeGeometry:or,ExtrudeBufferGeometry:rr,EdgesGeometry:Er,ConeGeometry:Tr,ConeBufferGeometry:xr,CylinderGeometry:br,CylinderBufferGeometry:Mr,CircleGeometry:yr,CircleBufferGeometry:Sr,BoxGeometry:class extends Fe{constructor(t,e,n,i,s,o){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:s,depthSegments:o},this.fromBufferGeometry(new Be(t,e,n,i,s,o)),this.mergeVertices()}},BoxBufferGeometry:Be});function Rr(t){zt.call(this),this.type="ShadowMaterial",this.color=new Ft(0),this.transparent=!0,this.setValues(t)}function Ar(t){We.call(this,t),this.type="RawShaderMaterial"}function Or(t){zt.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ft(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ft(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new u(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(t)}function Cr(t){Or.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new u(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transparency=0,this.setValues(t)}function Pr(t){zt.call(this),this.type="MeshPhongMaterial",this.color=new Ft(16777215),this.specular=new Ft(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ft(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new u(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Dr(t){zt.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ft(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ft(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new u(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Hr(t){zt.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new u(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Nr(t){zt.call(this),this.type="MeshLambertMaterial",this.color=new Ft(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ft(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Ir(t){zt.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ft(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new u(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Gr(t){Vs.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}Rr.prototype=Object.create(zt.prototype),Rr.prototype.constructor=Rr,Rr.prototype.isShadowMaterial=!0,Rr.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.color.copy(t.color),this},Ar.prototype=Object.create(We.prototype),Ar.prototype.constructor=Ar,Ar.prototype.isRawShaderMaterial=!0,Or.prototype=Object.create(zt.prototype),Or.prototype.constructor=Or,Or.prototype.isMeshStandardMaterial=!0,Or.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.vertexTangents=t.vertexTangents,this},Cr.prototype=Object.create(Or.prototype),Cr.prototype.constructor=Cr,Cr.prototype.isMeshPhysicalMaterial=!0,Cr.prototype.copy=function(t){return Or.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new Ft).copy(t.sheen):this.sheen=null,this.transparency=t.transparency,this},Pr.prototype=Object.create(zt.prototype),Pr.prototype.constructor=Pr,Pr.prototype.isMeshPhongMaterial=!0,Pr.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Dr.prototype=Object.create(zt.prototype),Dr.prototype.constructor=Dr,Dr.prototype.isMeshToonMaterial=!0,Dr.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Hr.prototype=Object.create(zt.prototype),Hr.prototype.constructor=Hr,Hr.prototype.isMeshNormalMaterial=!0,Hr.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Nr.prototype=Object.create(zt.prototype),Nr.prototype.constructor=Nr,Nr.prototype.isMeshLambertMaterial=!0,Nr.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Ir.prototype=Object.create(zt.prototype),Ir.prototype.constructor=Ir,Ir.prototype.isMeshMatcapMaterial=!0,Ir.prototype.copy=function(t){return zt.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Gr.prototype=Object.create(Vs.prototype),Gr.prototype.constructor=Gr,Gr.prototype.isLineDashedMaterial=!0,Gr.prototype.copy=function(t){return Vs.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Ur=Object.freeze({__proto__:null,ShadowMaterial:Rr,SpriteMaterial:ms,RawShaderMaterial:Ar,ShaderMaterial:We,PointsMaterial:to,MeshPhysicalMaterial:Cr,MeshStandardMaterial:Or,MeshPhongMaterial:Pr,MeshToonMaterial:Dr,MeshNormalMaterial:Hr,MeshLambertMaterial:Nr,MeshDepthMaterial:Ji,MeshDistanceMaterial:Qi,MeshBasicMaterial:Xt,MeshMatcapMaterial:Ir,LineDashedMaterial:Gr,LineBasicMaterial:Vs,Material:zt});const Fr={arraySlice:function(t,e,n){return Fr.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const i=t.length,s=new t.constructor(i);for(let o=0,r=0;r!==i;++o){const i=n[o]*e;for(let n=0;n!==e;++n)s[r++]=t[i+n]}return s},flattenJSON:function(t,e,n,i){let s=1,o=t[0];for(;void 0!==o&&void 0===o[i];)o=t[s++];if(void 0===o)return;let r=o[i];if(void 0!==r)if(Array.isArray(r))do{r=o[i],void 0!==r&&(e.push(o.time),n.push.apply(n,r)),o=t[s++]}while(void 0!==o);else if(void 0!==r.toArray)do{r=o[i],void 0!==r&&(e.push(o.time),r.toArray(n,n.length)),o=t[s++]}while(void 0!==o);else do{r=o[i],void 0!==r&&(e.push(o.time),n.push(r)),o=t[s++]}while(void 0!==o)},subclip:function(t,e,n,i,s){s=s||30;const o=t.clone();o.name=e;const r=[];for(let t=0;t<o.tracks.length;++t){const e=o.tracks[t],a=e.getValueSize(),c=[],h=[];for(let t=0;t<e.times.length;++t){const o=e.times[t]*s;if(!(o<n||o>=i)){c.push(e.times[t]);for(let n=0;n<a;++n)h.push(e.values[t*a+n])}}0!==c.length&&(e.times=Fr.convertArray(c,e.times.constructor),e.values=Fr.convertArray(h,e.values.constructor),r.push(e))}o.tracks=r;let a=1/0;for(let t=0;t<o.tracks.length;++t)a>o.tracks[t].times[0]&&(a=o.tracks[t].times[0]);for(let t=0;t<o.tracks.length;++t)o.tracks[t].shift(-1*a);return o.resetDuration(),o},makeClipAdditive:function(t,e,n,i){void 0===e&&(e=0),void 0===n&&(n=t),(void 0===i||i<=0)&&(i=30);const s=t.tracks.length,o=e/i;for(let e=0;e<s;++e){const i=n.tracks[e],s=i.ValueTypeName;if("bool"===s||"string"===s)continue;const r=t.tracks.find((function(t){return t.name===i.name&&t.ValueTypeName===s}));if(void 0===r)continue;const a=i.getValueSize(),c=i.times.length-1;let h;if(o<=i.times[0])h=Fr.arraySlice(i.values,0,i.valueSize);else if(o>=i.times[c]){const t=c*a;h=Fr.arraySlice(i.values,t)}else{const t=i.createInterpolant();t.evaluate(o),h=t.resultBuffer}if("quaternion"===s){new w(h[0],h[1],h[2],h[3]).normalize().conjugate().toArray(h)}const u=r.times.length;for(let t=0;t<u;++t){const e=t*a;if("quaternion"===s)w.multiplyQuaternionsFlat(r.values,e,h,0,r.values,e);else for(let t=0;t<a;++t)r.values[e+t]-=h[t]}}return t.blendMode=2501,t}};function Br(t,e,n,i){this.parameterPositions=t,this.Z=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}function jr(t,e,n,i){Br.call(this,t,e,n,i),this.J=-0,this.K=-0,this.$=-0,this.tt=-0}function kr(t,e,n,i){Br.call(this,t,e,n,i)}function Vr(t,e,n,i){Br.call(this,t,e,n,i)}function Wr(t,e,n,i){if(void 0===t)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Fr.convertArray(e,this.TimeBufferType),this.values=Fr.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}function zr(t,e,n){Wr.call(this,t,e,n)}function Xr(t,e,n,i){Wr.call(this,t,e,n,i)}function Yr(t,e,n,i){Wr.call(this,t,e,n,i)}function qr(t,e,n,i){Br.call(this,t,e,n,i)}function Zr(t,e,n,i){Wr.call(this,t,e,n,i)}function Jr(t,e,n,i){Wr.call(this,t,e,n,i)}function Qr(t,e,n,i){Wr.call(this,t,e,n,i)}function Kr(t,e,n,i){this.name=t,this.tracks=n,this.duration=void 0!==e?e:-1,this.blendMode=void 0!==i?i:2500,this.uuid=h.generateUUID(),this.duration<0&&this.resetDuration()}function $r(t){if(void 0===t.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Yr;case"vector":case"vector2":case"vector3":case"vector4":return Qr;case"color":return Xr;case"quaternion":return Zr;case"bool":case"boolean":return zr;case"string":return Jr}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];Fr.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(Br.prototype,{evaluate:function(t){let e=this.parameterPositions,n=this.Z,i=e[n],s=e[n-1];t:{e:{let o;n:{i:if(!(t<i)){for(let o=n+2;;){if(void 0===i){if(t<s)break i;return n=e.length,this.Z=n,this.afterEnd_(n-1,t,s)}if(n===o)break;if(s=i,i=e[++n],t<i)break e}o=e.length;break n}if(t>=s)break t;{const r=e[1];t<r&&(n=2,s=r);for(let o=n-2;;){if(void 0===s)return this.Z=0,this.beforeStart_(0,t,i);if(n===o)break;if(i=s,s=e[--n-1],t>=s)break e}o=n,n=0}}for(;n<o;){const i=n+o>>>1;t<e[i]?o=i:n=i+1}if(i=e[n],s=e[n-1],void 0===s)return this.Z=0,this.beforeStart_(0,t,i);if(void 0===i)return n=e.length,this.Z=n,this.afterEnd_(n-1,s,t)}this.Z=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=t*i;for(let t=0;t!==i;++t)e[t]=n[s+t];return e},interpolate_:function(){throw Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Br.prototype,{beforeStart_:Br.prototype.copySampleValue_,afterEnd_:Br.prototype.copySampleValue_}),jr.prototype=Object.assign(Object.create(Br.prototype),{constructor:jr,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(t,e,n){let i=this.parameterPositions,s=t-2,o=t+1,r=i[s],a=i[o];if(void 0===r)switch(this.getSettings_().endingStart){case 2401:s=t,r=2*e-n;break;case 2402:s=i.length-2,r=e+i[s]-i[s+1];break;default:s=t,r=n}if(void 0===a)switch(this.getSettings_().endingEnd){case 2401:o=t,a=2*n-e;break;case 2402:o=1,a=n+i[1]-i[0];break;default:o=t-1,a=e}const c=.5*(n-e),h=this.valueSize;this.J=c/(e-r),this.$=c/(a-n),this.K=s*h,this.tt=o*h},interpolate_:function(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,r=this.valueSize,a=t*r,c=a-r,h=this.K,u=this.tt,l=this.J,f=this.$,d=(n-e)/(i-e),m=d*d,p=m*d,v=-l*p+2*l*m-l*d,g=(1+l)*p+(-1.5-2*l)*m+(-.5+l)*d+1,_=(-1-f)*p+(1.5+f)*m+.5*d,w=f*p-f*m;for(let t=0;t!==r;++t)s[t]=v*o[h+t]+g*o[c+t]+_*o[a+t]+w*o[u+t];return s}}),kr.prototype=Object.assign(Object.create(Br.prototype),{constructor:kr,interpolate_:function(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,r=this.valueSize,a=t*r,c=a-r,h=(n-e)/(i-e),u=1-h;for(let t=0;t!==r;++t)s[t]=o[c+t]*u+o[a+t]*h;return s}}),Vr.prototype=Object.assign(Object.create(Br.prototype),{constructor:Vr,interpolate_:function(t){return this.copySampleValue_(t-1)}}),Object.assign(Wr,{toJSON:function(t){const e=t.constructor;let n;if(void 0!==e.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Fr.convertArray(t.times,Array),values:Fr.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}}),Object.assign(Wr.prototype,{constructor:Wr,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(t){return new Vr(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new kr(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new jr(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){let e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this},scale:function(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this},trim:function(t,e){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<t;)++s;for(;-1!==o&&n[o]>e;)--o;if(++o,0!==s||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const t=this.getValueSize();this.times=Fr.arraySlice(n,s,o),this.values=Fr.arraySlice(this.values,s*t,o*t)}return this},validate:function(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,s=n.length;0===s&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let o=null;for(let e=0;e!==s;e++){const i=n[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==o&&o>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,o),t=!1;break}o=i}if(void 0!==i&&Fr.isTypedArray(i))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t},optimize:function(){const t=Fr.arraySlice(this.times),e=Fr.arraySlice(this.values),n=this.getValueSize(),i=2302===this.getInterpolation(),s=t.length-1;let o=1;for(let r=1;r<s;++r){let s=!1;const a=t[r];if(a!==t[r+1]&&(1!==r||a!==a[0]))if(i)s=!0;else{const t=r*n,i=t-n,o=t+n;for(let r=0;r!==n;++r){const n=e[t+r];if(n!==e[i+r]||n!==e[o+r]){s=!0;break}}}if(s){if(r!==o){t[o]=t[r];const i=r*n,s=o*n;for(let t=0;t!==n;++t)e[s+t]=e[i+t]}++o}}if(s>0){t[o]=t[s];for(let t=s*n,i=o*n,r=0;r!==n;++r)e[i+r]=e[t+r];++o}return o!==t.length?(this.times=Fr.arraySlice(t,0,o),this.values=Fr.arraySlice(e,0,o*n)):(this.times=t,this.values=e),this},clone:function(){const t=Fr.arraySlice(this.times,0),e=Fr.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}),zr.prototype=Object.assign(Object.create(Wr.prototype),{constructor:zr,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Xr.prototype=Object.assign(Object.create(Wr.prototype),{constructor:Xr,ValueTypeName:"color"}),Yr.prototype=Object.assign(Object.create(Wr.prototype),{constructor:Yr,ValueTypeName:"number"}),qr.prototype=Object.assign(Object.create(Br.prototype),{constructor:qr,interpolate_:function(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,r=this.valueSize,a=(n-e)/(i-e);let c=t*r;for(let t=c+r;c!==t;c+=4)w.slerpFlat(s,0,o,c-r,o,c,a);return s}}),Zr.prototype=Object.assign(Object.create(Wr.prototype),{constructor:Zr,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(t){return new qr(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),Jr.prototype=Object.assign(Object.create(Wr.prototype),{constructor:Jr,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Qr.prototype=Object.assign(Object.create(Wr.prototype),{constructor:Qr,ValueTypeName:"vector"}),Object.assign(Kr,{parse:function(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let t=0,s=n.length;t!==s;++t)e.push($r(n[t]).scale(i));return new Kr(t.name,t.duration,e,t.blendMode)},toJSON:function(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,i=n.length;t!==i;++t)e.push(Wr.toJSON(n[t]));return i},CreateFromMorphTargetSequence:function(t,e,n,i){const s=e.length,o=[];for(let t=0;t<s;t++){let r=[],a=[];r.push((t+s-1)%s,t,(t+1)%s),a.push(0,1,0);const c=Fr.getKeyframeOrder(r);r=Fr.sortedArray(r,1,c),a=Fr.sortedArray(a,1,c),i||0!==r[0]||(r.push(s),a.push(a[0])),o.push(new Yr(".morphTargetInfluences["+e[t].name+"]",r,a).scale(1/n))}return new Kr(t,-1,o)},findByName:function(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],o=n.name.match(s);if(o&&o.length>1){const t=o[1];let e=i[t];e||(i[t]=e=[]),e.push(n)}}const o=[];for(const t in i)o.push(Kr.CreateFromMorphTargetSequence(t,i[t],e,n));return o},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,i,s){if(0!==n.length){const o=[],r=[];Fr.flattenJSON(n,o,r,i),0!==o.length&&s.push(new t(e,o,r))}},i=[],s=t.name||"default",o=t.fps||30,r=t.blendMode;let a=t.length||-1;const c=t.hierarchy||[];for(let t=0;t<c.length;t++){const s=c[t].keys;if(s&&0!==s.length)if(s[0].morphTargets){const t={};let e;for(e=0;e<s.length;e++)if(s[e].morphTargets)for(let n=0;n<s[e].morphTargets.length;n++)t[s[e].morphTargets[n]]=-1;for(const n in t){const t=[],o=[];for(let i=0;i!==s[e].morphTargets.length;++i){const i=s[e];t.push(i.time),o.push(i.morphTarget===n?1:0)}i.push(new Yr(".morphTargetInfluence["+n+"]",t,o))}a=t.length*(o||1)}else{const o=".bones["+e[t].name+"]";n(Qr,o+".position",s,"pos",i),n(Zr,o+".quaternion",s,"rot",i),n(Qr,o+".scale",s,"scl",i)}}if(0===i.length)return null;return new Kr(s,a,i,r)}}),Object.assign(Kr.prototype,{resetDuration:function(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this},trim:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new Kr(this.name,this.duration,t,this.blendMode)}});const ta={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function ea(t,e,n){const i=this;let s=!1,o=0,r=0,a=void 0;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){r++,!1===s&&void 0!==i.onStart&&i.onStart(t,o,r),s=!0},this.itemEnd=function(t){o++,void 0!==i.onProgress&&i.onProgress(t,o,r),o===r&&(s=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return a?a(t):t},this.setURLModifier=function(t){return a=t,this},this.addHandler=function(t,e){return c.push(t,e),this},this.removeHandler=function(t){const e=c.indexOf(t);return-1!==e&&c.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=c.length;e<n;e+=2){const n=c[e],i=c[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}}const na=new ea;function ia(t){this.manager=void 0!==t?t:na,this.crossOrigin="anonymous",this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(ia.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise((function(i,s){n.load(t,i,e,s)}))},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const sa={};function oa(t){ia.call(this,t)}function ra(t){ia.call(this,t)}function aa(t){ia.call(this,t)}function ca(t){ia.call(this,t)}function ha(t){ia.call(this,t)}function ua(t){ia.call(this,t)}function la(t){ia.call(this,t)}function fa(){this.type="Curve",this.arcLengthDivisions=200}function da(t,e,n,i,s,o,r,a){fa.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=s||0,this.aEndAngle=o||2*Math.PI,this.aClockwise=r||!1,this.aRotation=a||0}function ma(t,e,n,i,s,o){da.call(this,t,e,n,n,i,s,o),this.type="ArcCurve"}function pa(){let t=0,e=0,n=0,i=0;function s(s,o,r,a){t=s,e=r,n=-3*s+3*o-2*r-a,i=2*s-2*o+r+a}return{initCatmullRom:function(t,e,n,i,o){s(e,n,o*(n-t),o*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,o,r,a){let c=(e-t)/o-(n-t)/(o+r)+(n-e)/r,h=(n-e)/r-(i-e)/(r+a)+(i-n)/a;c*=r,h*=r,s(e,n,c,h)},calc:function(s){const o=s*s;return t+e*s+n*o+i*(o*s)}}}oa.prototype=Object.assign(Object.create(ia.prototype),{constructor:oa,load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=ta.get(t);if(void 0!==o)return s.manager.itemStart(t),setTimeout((function(){e&&e(o),s.manager.itemEnd(t)}),0),o;if(void 0!==sa[t])return void sa[t].push({onLoad:e,onProgress:n,onError:i});const r=t.match(/^data:(.*?)(;base64)?,(.*)$/);let a;if(r){const n=r[1],o=!!r[2];let a=r[3];a=decodeURIComponent(a),o&&(a=atob(a));try{let i;const o=(this.responseType||"").toLowerCase();switch(o){case"arraybuffer":case"blob":const t=new Uint8Array(a.length);for(let e=0;e<a.length;e++)t[e]=a.charCodeAt(e);i="blob"===o?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;i=e.parseFromString(a,n);break;case"json":i=JSON.parse(a);break;default:i=a}setTimeout((function(){e&&e(i),s.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){i&&i(e),s.manager.itemError(t),s.manager.itemEnd(t)}),0)}}else{sa[t]=[],sa[t].push({onLoad:e,onProgress:n,onError:i}),a=new XMLHttpRequest,a.open("GET",t,!0),a.addEventListener("load",(function(e){const n=this.response,i=sa[t];if(delete sa[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),ta.add(t,n);for(let t=0,e=i.length;t<e;t++){const e=i[t];e.onLoad&&e.onLoad(n)}s.manager.itemEnd(t)}else{for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}s.manager.itemError(t),s.manager.itemEnd(t)}}),!1),a.addEventListener("progress",(function(e){const n=sa[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onProgress&&i.onProgress(e)}}),!1),a.addEventListener("error",(function(e){const n=sa[t];delete sa[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}s.manager.itemError(t),s.manager.itemEnd(t)}),!1),a.addEventListener("abort",(function(e){const n=sa[t];delete sa[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}s.manager.itemError(t),s.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.overrideMimeType&&a.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)a.setRequestHeader(t,this.requestHeader[t]);a.send(null)}return s.manager.itemStart(t),a},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this}}),ra.prototype=Object.assign(Object.create(ia.prototype),{constructor:ra,load:function(t,e,n,i){const s=this,o=new oa(s.manager);o.setPath(s.path),o.load(t,(function(n){try{e(s.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),s.manager.itemError(t)}}),n,i)},parse:function(t){const e=[];for(let n=0;n<t.length;n++){const i=Kr.parse(t[n]);e.push(i)}return e}}),aa.prototype=Object.assign(Object.create(ia.prototype),{constructor:aa,load:function(t,e,n,i){const s=this,o=[],r=new co;r.image=o;const a=new oa(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer");let c=0;function h(h){a.load(t[h],(function(t){const n=s.parse(t,!0);o[h]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},c+=1,6===c&&(1===n.mipmapCount&&(r.minFilter=1006),r.format=n.format,r.needsUpdate=!0,e&&e(r))}),n,i)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)h(e);else a.load(t,(function(t){const n=s.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){o[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)o[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),o[e].format=n.format,o[e].width=n.width,o[e].height=n.height}}else r.image.width=n.width,r.image.height=n.height,r.mipmaps=n.mipmaps;1===n.mipmapCount&&(r.minFilter=1006),r.format=n.format,r.needsUpdate=!0,e&&e(r)}),n,i);return r}}),ca.prototype=Object.assign(Object.create(ia.prototype),{constructor:ca,load:function(t,e,n,i){const s=this,o=new Ze,r=new oa(this.manager);return r.setResponseType("arraybuffer"),r.setPath(this.path),r.load(t,(function(t){const n=s.parse(t);n&&(void 0!==n.image?o.image=n.image:void 0!==n.data&&(o.image.width=n.width,o.image.height=n.height,o.image.data=n.data),o.wrapS=void 0!==n.wrapS?n.wrapS:1001,o.wrapT=void 0!==n.wrapT?n.wrapT:1001,o.magFilter=void 0!==n.magFilter?n.magFilter:1006,o.minFilter=void 0!==n.minFilter?n.minFilter:1006,o.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.format&&(o.format=n.format),void 0!==n.type&&(o.type=n.type),void 0!==n.mipmaps&&(o.mipmaps=n.mipmaps,o.minFilter=1008),1===n.mipmapCount&&(o.minFilter=1006),o.needsUpdate=!0,e&&e(o,n))}),n,i),o}}),ha.prototype=Object.assign(Object.create(ia.prototype),{constructor:ha,load:function(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=ta.get(t);if(void 0!==o)return s.manager.itemStart(t),setTimeout((function(){e&&e(o),s.manager.itemEnd(t)}),0),o;const r=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){r.removeEventListener("load",a,!1),r.removeEventListener("error",c,!1),ta.add(t,this),e&&e(this),s.manager.itemEnd(t)}function c(e){r.removeEventListener("load",a,!1),r.removeEventListener("error",c,!1),i&&i(e),s.manager.itemError(t),s.manager.itemEnd(t)}return r.addEventListener("load",a,!1),r.addEventListener("error",c,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(r.crossOrigin=this.crossOrigin),s.manager.itemStart(t),r.src=t,r}}),ua.prototype=Object.assign(Object.create(ia.prototype),{constructor:ua,load:function(t,e,n,i){const s=new En,o=new ha(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let r=0;function a(n){o.load(t[n],(function(t){s.images[n]=t,r++,6===r&&(s.needsUpdate=!0,e&&e(s))}),void 0,i)}for(let e=0;e<t.length;++e)a(e);return s}}),la.prototype=Object.assign(Object.create(ia.prototype),{constructor:la,load:function(t,e,n,i){const s=new p,o=new ha(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,(function(n){s.image=n;const i=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);s.format=i?1022:1023,s.needsUpdate=!0,void 0!==e&&e(s)}),n,i),s}}),Object.assign(fa.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t){void 0===t&&(t=5);const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t){void 0===t&&(t=5);const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),s=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),s+=n.distanceTo(i),e.push(s),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let i,s=0,o=n.length;i=e||t*n[o-1];let r,a=0,c=o-1;for(;a<=c;)if(s=Math.floor(a+(c-a)/2),r=n[s]-i,r<0)a=s+1;else{if(!(r>0)){c=s;break}c=s-1}if(s=c,n[s]===i)return s/(o-1);const h=n[s];return(s+(i-h)/(n[s+1]-h))/(o-1)},getTangent:function(t,e){let n=t-1e-4,i=t+1e-4;n<0&&(n=0),i>1&&(i=1);const s=this.getPoint(n),o=this.getPoint(i),r=e||(s.isVector2?new u:new M);return r.copy(o).sub(s).normalize(),r},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new M,i=[],s=[],o=[],r=new M,a=new O;for(let e=0;e<=t;e++){const n=e/t;i[e]=this.getTangentAt(n,new M),i[e].normalize()}s[0]=new M,o[0]=new M;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),l=Math.abs(i[0].y),f=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),l<=c&&(c=l,n.set(0,1,0)),f<=c&&n.set(0,0,1),r.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],r),o[0].crossVectors(i[0],s[0]);for(let e=1;e<=t;e++){if(s[e]=s[e-1].clone(),o[e]=o[e-1].clone(),r.crossVectors(i[e-1],i[e]),r.length()>Number.EPSILON){r.normalize();const t=Math.acos(h.clamp(i[e-1].dot(i[e]),-1,1));s[e].applyMatrix4(a.makeRotationAxis(r,t))}o[e].crossVectors(i[e],s[e])}if(!0===e){let e=Math.acos(h.clamp(s[0].dot(s[t]),-1,1));e/=t,i[0].dot(r.crossVectors(s[0],s[t]))>0&&(e=-e);for(let n=1;n<=t;n++)s[n].applyMatrix4(a.makeRotationAxis(i[n],e*n)),o[n].crossVectors(i[n],s[n])}return{tangents:i,normals:s,binormals:o}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),da.prototype=Object.create(fa.prototype),da.prototype.constructor=da,da.prototype.isEllipseCurve=!0,da.prototype.getPoint=function(t,e){const n=e||new u,i=2*Math.PI;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(s=o?0:i),!0!==this.aClockwise||o||(s===i?s=-i:s-=i);const r=this.aStartAngle+t*s;let a=this.aX+this.xRadius*Math.cos(r),c=this.aY+this.yRadius*Math.sin(r);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=a-this.aX,i=c-this.aY;a=n*t-i*e+this.aX,c=n*e+i*t+this.aY}return n.set(a,c)},da.prototype.copy=function(t){return fa.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},da.prototype.toJSON=function(){const t=fa.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},da.prototype.fromJSON=function(t){return fa.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},ma.prototype=Object.create(da.prototype),ma.prototype.constructor=ma,ma.prototype.isArcCurve=!0;const va=new M,ga=new pa,_a=new pa,wa=new pa;function Ea(t,e,n,i){fa.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=n||"centripetal",this.tension=i||.5}function ba(t,e,n,i,s){const o=.5*(i-e),r=.5*(s-n),a=t*t;return(2*n-2*i+o+r)*(t*a)+(-3*n+3*i-2*o-r)*a+o*t+n}function Ma(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function Ta(t,e,n,i,s){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,s)}function xa(t,e,n,i){fa.call(this),this.type="CubicBezierCurve",this.v0=t||new u,this.v1=e||new u,this.v2=n||new u,this.v3=i||new u}function ya(t,e,n,i){fa.call(this),this.type="CubicBezierCurve3",this.v0=t||new M,this.v1=e||new M,this.v2=n||new M,this.v3=i||new M}function Sa(t,e){fa.call(this),this.type="LineCurve",this.v1=t||new u,this.v2=e||new u}function La(t,e){fa.call(this),this.type="LineCurve3",this.v1=t||new M,this.v2=e||new M}function Ra(t,e,n){fa.call(this),this.type="QuadraticBezierCurve",this.v0=t||new u,this.v1=e||new u,this.v2=n||new u}function Aa(t,e,n){fa.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new M,this.v1=e||new M,this.v2=n||new M}function Oa(t){fa.call(this),this.type="SplineCurve",this.points=t||[]}Ea.prototype=Object.create(fa.prototype),Ea.prototype.constructor=Ea,Ea.prototype.isCatmullRomCurve3=!0,Ea.prototype.getPoint=function(t,e){const n=e||new M,i=this.points,s=i.length,o=(s-(this.closed?0:1))*t;let r,a,c,h,u=Math.floor(o),l=o-u;if(this.closed?u+=u>0?0:(Math.floor(Math.abs(u)/s)+1)*s:0===l&&u===s-1&&(u=s-2,l=1),this.closed||u>0?r=i[(u-1)%s]:(va.subVectors(i[0],i[1]).add(i[0]),r=va),a=i[u%s],c=i[(u+1)%s],this.closed||u+2<s?h=i[(u+2)%s]:(va.subVectors(i[s-1],i[s-2]).add(i[s-1]),h=va),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(r.distanceToSquared(a),t),n=Math.pow(a.distanceToSquared(c),t),i=Math.pow(c.distanceToSquared(h),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),ga.initNonuniformCatmullRom(r.x,a.x,c.x,h.x,e,n,i),_a.initNonuniformCatmullRom(r.y,a.y,c.y,h.y,e,n,i),wa.initNonuniformCatmullRom(r.z,a.z,c.z,h.z,e,n,i)}else"catmullrom"===this.curveType&&(ga.initCatmullRom(r.x,a.x,c.x,h.x,this.tension),_a.initCatmullRom(r.y,a.y,c.y,h.y,this.tension),wa.initCatmullRom(r.z,a.z,c.z,h.z,this.tension));return n.set(ga.calc(l),_a.calc(l),wa.calc(l)),n},Ea.prototype.copy=function(t){fa.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},Ea.prototype.toJSON=function(){const t=fa.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},Ea.prototype.fromJSON=function(t){fa.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new M).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},xa.prototype=Object.create(fa.prototype),xa.prototype.constructor=xa,xa.prototype.isCubicBezierCurve=!0,xa.prototype.getPoint=function(t,e){const n=e||new u,i=this.v0,s=this.v1,o=this.v2,r=this.v3;return n.set(Ta(t,i.x,s.x,o.x,r.x),Ta(t,i.y,s.y,o.y,r.y)),n},xa.prototype.copy=function(t){return fa.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},xa.prototype.toJSON=function(){const t=fa.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},xa.prototype.fromJSON=function(t){return fa.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},ya.prototype=Object.create(fa.prototype),ya.prototype.constructor=ya,ya.prototype.isCubicBezierCurve3=!0,ya.prototype.getPoint=function(t,e){const n=e||new M,i=this.v0,s=this.v1,o=this.v2,r=this.v3;return n.set(Ta(t,i.x,s.x,o.x,r.x),Ta(t,i.y,s.y,o.y,r.y),Ta(t,i.z,s.z,o.z,r.z)),n},ya.prototype.copy=function(t){return fa.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},ya.prototype.toJSON=function(){const t=fa.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},ya.prototype.fromJSON=function(t){return fa.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},Sa.prototype=Object.create(fa.prototype),Sa.prototype.constructor=Sa,Sa.prototype.isLineCurve=!0,Sa.prototype.getPoint=function(t,e){const n=e||new u;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},Sa.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Sa.prototype.getTangent=function(t,e){const n=e||new u;return n.copy(this.v2).sub(this.v1).normalize(),n},Sa.prototype.copy=function(t){return fa.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Sa.prototype.toJSON=function(){const t=fa.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Sa.prototype.fromJSON=function(t){return fa.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},La.prototype=Object.create(fa.prototype),La.prototype.constructor=La,La.prototype.isLineCurve3=!0,La.prototype.getPoint=function(t,e){const n=e||new M;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},La.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},La.prototype.copy=function(t){return fa.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},La.prototype.toJSON=function(){const t=fa.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},La.prototype.fromJSON=function(t){return fa.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Ra.prototype=Object.create(fa.prototype),Ra.prototype.constructor=Ra,Ra.prototype.isQuadraticBezierCurve=!0,Ra.prototype.getPoint=function(t,e){const n=e||new u,i=this.v0,s=this.v1,o=this.v2;return n.set(Ma(t,i.x,s.x,o.x),Ma(t,i.y,s.y,o.y)),n},Ra.prototype.copy=function(t){return fa.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Ra.prototype.toJSON=function(){const t=fa.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Ra.prototype.fromJSON=function(t){return fa.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Aa.prototype=Object.create(fa.prototype),Aa.prototype.constructor=Aa,Aa.prototype.isQuadraticBezierCurve3=!0,Aa.prototype.getPoint=function(t,e){const n=e||new M,i=this.v0,s=this.v1,o=this.v2;return n.set(Ma(t,i.x,s.x,o.x),Ma(t,i.y,s.y,o.y),Ma(t,i.z,s.z,o.z)),n},Aa.prototype.copy=function(t){return fa.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Aa.prototype.toJSON=function(){const t=fa.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Aa.prototype.fromJSON=function(t){return fa.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Oa.prototype=Object.create(fa.prototype),Oa.prototype.constructor=Oa,Oa.prototype.isSplineCurve=!0,Oa.prototype.getPoint=function(t,e){const n=e||new u,i=this.points,s=(i.length-1)*t,o=Math.floor(s),r=s-o,a=i[0===o?o:o-1],c=i[o],h=i[o>i.length-2?i.length-1:o+1],l=i[o>i.length-3?i.length-1:o+2];return n.set(ba(r,a.x,c.x,h.x,l.x),ba(r,a.y,c.y,h.y,l.y)),n},Oa.prototype.copy=function(t){fa.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this},Oa.prototype.toJSON=function(){const t=fa.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t},Oa.prototype.fromJSON=function(t){fa.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new u).fromArray(n))}return this};var Ca=Object.freeze({__proto__:null,ArcCurve:ma,CatmullRomCurve3:Ea,CubicBezierCurve:xa,CubicBezierCurve3:ya,EllipseCurve:da,LineCurve:Sa,LineCurve3:La,QuadraticBezierCurve:Ra,QuadraticBezierCurve3:Aa,SplineCurve:Oa});function Pa(){fa.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Da(t){Pa.call(this),this.type="Path",this.currentPoint=new u,t&&this.setFromPoints(t)}function Ha(t){Da.call(this,t),this.uuid=h.generateUUID(),this.type="Shape",this.holes=[]}function Na(t,e){q.call(this),this.type="Light",this.color=new Ft(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}function Ia(t,e,n){Na.call(this,t,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(q.DefaultUp),this.updateMatrix(),this.groundColor=new Ft(e)}function Ga(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new u(512,512),this.map=null,this.mapPass=null,this.matrix=new O,this.autoUpdate=!0,this.needsUpdate=!1,this.et=new Ke,this.nt=new u(1,1),this.it=1,this.st=[new v(0,0,1,1)]}function Ua(){Ga.call(this,new Xe(50,1,.5,500))}function Fa(t,e,n,i,s,o){Na.call(this,t,e),this.type="SpotLight",this.position.copy(q.DefaultUp),this.updateMatrix(),this.target=new q,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==i?i:Math.PI/3,this.penumbra=void 0!==s?s:0,this.decay=void 0!==o?o:1,this.shadow=new Ua}function Ba(){Ga.call(this,new Xe(90,1,.5,500)),this.nt=new u(4,2),this.it=6,this.st=[new v(2,1,1,1),new v(0,1,1,1),new v(3,1,1,1),new v(1,1,1,1),new v(3,0,1,1),new v(1,0,1,1)],this.ot=[new M(1,0,0),new M(-1,0,0),new M(0,0,1),new M(0,0,-1),new M(0,1,0),new M(0,-1,0)],this.rt=[new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,0,1),new M(0,0,-1)]}function ja(t,e,n,i){Na.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==i?i:1,this.shadow=new Ba}function ka(t,e,n,i,s,o){ze.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==t?t:-1,this.right=void 0!==e?e:1,this.top=void 0!==n?n:1,this.bottom=void 0!==i?i:-1,this.near=void 0!==s?s:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()}function Va(){Ga.call(this,new ka(-5,5,5,-5,.5,500))}function Wa(t,e){Na.call(this,t,e),this.type="DirectionalLight",this.position.copy(q.DefaultUp),this.updateMatrix(),this.target=new q,this.shadow=new Va}function za(t,e){Na.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}function Xa(t,e,n,i){Na.call(this,t,e),this.type="RectAreaLight",this.width=void 0!==n?n:10,this.height=void 0!==i?i:10}function Ya(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new M)}function qa(t,e){Na.call(this,void 0,e),this.type="LightProbe",this.sh=void 0!==t?t:new Ya}function Za(t){ia.call(this,t),this.textures={}}Pa.prototype=Object.assign(Object.create(fa.prototype),{constructor:Pa,add:function(t){this.curves.push(t)},closePath:function(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Sa(e,t))},getPoint:function(t){const e=t*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=e){const t=n[i]-e,s=this.curves[i],o=s.getLength(),r=0===o?0:1-t/o;return s.getPointAt(r)}i++}return null},getLength:function(){const t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){void 0===t&&(t=40);const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;const e=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],r=o&&o.isEllipseCurve?2*t:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?t*o.points.length:t,a=o.getPoints(r);for(let t=0;t<a.length;t++){const i=a[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(t){fa.prototype.copy.call(this,t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){const t=fa.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t},fromJSON:function(t){fa.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Ca[n.type]).fromJSON(n))}return this}}),Da.prototype=Object.assign(Object.create(Pa.prototype),{constructor:Da,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){const n=new Sa(this.currentPoint.clone(),new u(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,n,i){const s=new Ra(this.currentPoint.clone(),new u(t,e),new u(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this},bezierCurveTo:function(t,e,n,i,s,o){const r=new xa(this.currentPoint.clone(),new u(t,e),new u(n,i),new u(s,o));return this.curves.push(r),this.currentPoint.set(s,o),this},splineThru:function(t){const e=new Oa([this.currentPoint.clone()].concat(t));return this.curves.push(e),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,n,i,s,o){const r=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(t+r,e+a,n,i,s,o),this},absarc:function(t,e,n,i,s,o){return this.absellipse(t,e,n,n,i,s,o),this},ellipse:function(t,e,n,i,s,o,r,a){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(t+c,e+h,n,i,s,o,r,a),this},absellipse:function(t,e,n,i,s,o,r,a){const c=new da(t,e,n,i,s,o,r,a);if(this.curves.length>0){const t=c.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this},copy:function(t){return Pa.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){const t=Pa.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return Pa.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}}),Ha.prototype=Object.assign(Object.create(Da.prototype),{constructor:Ha,getPointsHoles:function(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){Da.prototype.copy.call(this,t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this},toJSON:function(){const t=Da.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t},fromJSON:function(t){Da.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new Da).fromJSON(n))}return this}}),Na.prototype=Object.assign(Object.create(q.prototype),{constructor:Na,isLight:!0,copy:function(t){return q.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){const e=q.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),Ia.prototype=Object.assign(Object.create(Na.prototype),{constructor:Ia,isHemisphereLight:!0,copy:function(t){return Na.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(Ga.prototype,{ct:new O,ht:new M,ut:new M,getViewportCount:function(){return this.it},getFrustum:function(){return this.et},updateMatrices:function(t){const e=this.camera,n=this.matrix,i=this.ct,s=this.ut,o=this.ht;o.setFromMatrixPosition(t.matrixWorld),e.position.copy(o),s.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(s),e.updateMatrixWorld(),i.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this.et.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)},getViewport:function(t){return this.st[t]},getFrameExtents:function(){return this.nt},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),Ua.prototype=Object.assign(Object.create(Ga.prototype),{constructor:Ua,isSpotLightShadow:!0,updateMatrices:function(t){const e=this.camera,n=2*h.RAD2DEG*t.angle,i=this.mapSize.width/this.mapSize.height,s=t.distance||e.far;n===e.fov&&i===e.aspect&&s===e.far||(e.fov=n,e.aspect=i,e.far=s,e.updateProjectionMatrix()),Ga.prototype.updateMatrices.call(this,t)}}),Fa.prototype=Object.assign(Object.create(Na.prototype),{constructor:Fa,isSpotLight:!0,copy:function(t){return Na.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Ba.prototype=Object.assign(Object.create(Ga.prototype),{constructor:Ba,isPointLightShadow:!0,updateMatrices:function(t,e){void 0===e&&(e=0);const n=this.camera,i=this.matrix,s=this.ht,o=this.ut,r=this.ct;s.setFromMatrixPosition(t.matrixWorld),n.position.copy(s),o.copy(n.position),o.add(this.ot[e]),n.up.copy(this.rt[e]),n.lookAt(o),n.updateMatrixWorld(),i.makeTranslation(-s.x,-s.y,-s.z),r.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this.et.setFromProjectionMatrix(r)}}),ja.prototype=Object.assign(Object.create(Na.prototype),{constructor:ja,isPointLight:!0,copy:function(t){return Na.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),ka.prototype=Object.assign(Object.create(ze.prototype),{constructor:ka,isOrthographicCamera:!0,copy:function(t,e){return ze.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,i,s,o){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-t,o=n+t,r=i+e,a=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=t*this.view.offsetX,o=s+t*this.view.width,r-=e*this.view.offsetY,a=r-e*this.view.height}this.projectionMatrix.makeOrthographic(s,o,r,a,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){const e=q.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),Va.prototype=Object.assign(Object.create(Ga.prototype),{constructor:Va,isDirectionalLightShadow:!0,updateMatrices:function(t){Ga.prototype.updateMatrices.call(this,t)}}),Wa.prototype=Object.assign(Object.create(Na.prototype),{constructor:Wa,isDirectionalLight:!0,copy:function(t){return Na.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),za.prototype=Object.assign(Object.create(Na.prototype),{constructor:za,isAmbientLight:!0}),Xa.prototype=Object.assign(Object.create(Na.prototype),{constructor:Xa,isRectAreaLight:!0,copy:function(t){return Na.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){const e=Na.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}}),Object.assign(Ya.prototype,{isSphericalHarmonics3:!0,set:function(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this},zero:function(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this},getAt:function(t,e){const n=t.x,i=t.y,s=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.282095),e.addScaledVector(o[1],.488603*i),e.addScaledVector(o[2],.488603*s),e.addScaledVector(o[3],.488603*n),e.addScaledVector(o[4],n*i*1.092548),e.addScaledVector(o[5],i*s*1.092548),e.addScaledVector(o[6],.315392*(3*s*s-1)),e.addScaledVector(o[7],n*s*1.092548),e.addScaledVector(o[8],.546274*(n*n-i*i)),e},getIrradianceAt:function(t,e){const n=t.x,i=t.y,s=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.886227),e.addScaledVector(o[1],1.023328*i),e.addScaledVector(o[2],1.023328*s),e.addScaledVector(o[3],1.023328*n),e.addScaledVector(o[4],.858086*n*i),e.addScaledVector(o[5],.858086*i*s),e.addScaledVector(o[6],.743125*s*s-.247708),e.addScaledVector(o[7],.858086*n*s),e.addScaledVector(o[8],.429043*(n*n-i*i)),e},add:function(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this},addScaledSH:function(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this},scale:function(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this},lerp:function(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this},equals:function(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0},copy:function(t){return this.set(t.coefficients)},clone:function(){return(new this.constructor).copy(this)},fromArray:function(t,e){void 0===e&&(e=0);const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}}),Object.assign(Ya,{getBasisAt:function(t,e){const n=t.x,i=t.y,s=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*s,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*s,e[6]=.315392*(3*s*s-1),e[7]=1.092548*n*s,e[8]=.546274*(n*n-i*i)}}),qa.prototype=Object.assign(Object.create(Na.prototype),{constructor:qa,isLightProbe:!0,copy:function(t){return Na.prototype.copy.call(this,t),this.sh.copy(t.sh),this},fromJSON:function(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this},toJSON:function(t){const e=Na.prototype.toJSON.call(this,t);return e.object.sh=this.sh.toArray(),e}}),Za.prototype=Object.assign(Object.create(ia.prototype),{constructor:Za,load:function(t,e,n,i){const s=this,o=new oa(s.manager);o.setPath(s.path),o.load(t,(function(n){try{e(s.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),s.manager.itemError(t)}}),n,i)},parse:function(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const i=new Ur[t.type];if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.sheen&&(i.sheen=(new Ft).setHex(t.sheen)),void 0!==t.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&i.specular.setHex(t.specular),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearcoat&&(i.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(i.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.combine&&(i.combine=t.combine),void 0!==t.side&&(i.side=t.side),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(i.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(i.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(i.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(i.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(i.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(i.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(i.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(i.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),1!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.polygonOffset&&(i.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(i.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(i.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(i.skinning=t.skinning),void 0!==t.morphTargets&&(i.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(i.morphNormals=t.morphNormals),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.vertexTangents&&(i.vertexTangents=t.vertexTangents),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.toneMapped&&(i.toneMapped=t.toneMapped),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const s=t.uniforms[e];switch(i.uniforms[e]={},s.type){case"t":i.uniforms[e].value=n(s.value);break;case"c":i.uniforms[e].value=(new Ft).setHex(s.value);break;case"v2":i.uniforms[e].value=(new u).fromArray(s.value);break;case"v3":i.uniforms[e].value=(new M).fromArray(s.value);break;case"v4":i.uniforms[e].value=(new v).fromArray(s.value);break;case"m3":i.uniforms[e].value=(new l).fromArray(s.value);case"m4":i.uniforms[e].value=(new O).fromArray(s.value);break;default:i.uniforms[e].value=s.value}}if(void 0!==t.defines&&(i.defines=t.defines),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const e in t.extensions)i.extensions[e]=t.extensions[e];if(void 0!==t.shading&&(i.flatShading=1===t.shading),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=n(t.map)),void 0!==t.matcap&&(i.matcap=n(t.matcap)),void 0!==t.alphaMap&&(i.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(i.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(i.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),i.normalScale=(new u).fromArray(e)}return void 0!==t.displacementMap&&(i.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=n(t.specularMap)),void 0!==t.envMap&&(i.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(i.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(i.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(i.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(i.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(i.clearcoatNormalScale=(new u).fromArray(t.clearcoatNormalScale)),i},setTextures:function(t){return this.textures=t,this}});const Ja=function(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)};function Qa(){me.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function Ka(t,e,n,i){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Zt.call(this,t,e,n),this.meshPerAttribute=i||1}function $a(t){ia.call(this,t)}Qa.prototype=Object.assign(Object.create(me.prototype),{constructor:Qa,isInstancedBufferGeometry:!0,copy:function(t){return me.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t=me.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}),Ka.prototype=Object.assign(Object.create(Zt.prototype),{constructor:Ka,isInstancedBufferAttribute:!0,copy:function(t){return Zt.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=Zt.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}),$a.prototype=Object.assign(Object.create(ia.prototype),{constructor:$a,load:function(t,e,n,i){const s=this,o=new oa(s.manager);o.setPath(s.path),o.load(t,(function(n){try{e(s.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),s.manager.itemError(t)}}),n,i)},parse:function(t){const e={},n={};function i(t,i){if(void 0!==e[i])return e[i];const s=t.interleavedBuffers[i],o=function(t,e){if(void 0!==n[e])return n[e];const i=t.arrayBuffers[e],s=new Uint32Array(i).buffer;return n[e]=s,s}(t,s.buffer),r=new ls(new tc[s.type](o),s.stride);return r.uuid=s.uuid,e[i]=r,r}const s=t.isInstancedBufferGeometry?new Qa:new me,o=t.data.index;if(void 0!==o){const t=new tc[o.type](o.array);s.setIndex(new Zt(t,1))}const r=t.data.attributes;for(const e in r){const n=r[e];let o;if(n.isInterleavedBufferAttribute){o=new ds(i(t.data,n.data),n.itemSize,n.offset,n.normalized)}else{const t=new tc[n.type](n.array);o=new(n.isInstancedBufferAttribute?Ka:Zt)(t,n.itemSize,n.normalized)}void 0!==n.name&&(o.name=n.name),s.setAttribute(e,o)}const a=t.data.morphAttributes;if(a)for(const e in a){const n=a[e],o=[];for(let e=0,s=n.length;e<s;e++){const s=n[e];let r;if(s.isInterleavedBufferAttribute){r=new ds(i(t.data,s.data),s.itemSize,s.offset,s.normalized)}else{r=new Zt(new tc[s.type](s.array),s.itemSize,s.normalized)}void 0!==s.name&&(r.name=s.name),o.push(r)}s.morphAttributes[e]=o}t.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const c=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==c)for(let t=0,e=c.length;t!==e;++t){const e=c[t];s.addGroup(e.start,e.count,e.materialIndex)}const h=t.data.boundingSphere;if(void 0!==h){const t=new M;void 0!==h.center&&t.fromArray(h.center),s.boundingSphere=new ft(t,h.radius)}return t.name&&(s.name=t.name),t.userData&&(s.userData=t.userData),s}});const tc={Int8Array,Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function ec(t){ia.call(this,t)}ec.prototype=Object.assign(Object.create(ia.prototype),{constructor:ec,load:function(t,e,n,i){const s=this,o=""===this.path?Ja(t):this.path;this.resourcePath=this.resourcePath||o;const r=new oa(s.manager);r.setPath(this.path),r.load(t,(function(n){let o=null;try{o=JSON.parse(n)}catch(e){return void 0!==i&&i(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const r=o.metadata;void 0!==r&&void 0!==r.type&&"geometry"!==r.type.toLowerCase()?s.parse(o,e):console.error("THREE.ObjectLoader: Can't load "+t)}),n,i)},parse:function(t,e){const n=this.parseShape(t.shapes),i=this.parseGeometries(t.geometries,n),s=this.parseImages(t.images,(function(){void 0!==e&&e(a)})),o=this.parseTextures(t.textures,s),r=this.parseMaterials(t.materials,o),a=this.parseObject(t.object,i,r);return t.animations&&(a.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(a),a},parseShape:function(t){const e={};if(void 0!==t)for(let n=0,i=t.length;n<i;n++){const i=(new Ha).fromJSON(t[n]);e[i.uuid]=i}return e},parseGeometries:function(t,e){const n={};let i;if(void 0!==t){const s=new $a;for(let o=0,r=t.length;o<r;o++){let r;const a=t[o];switch(a.type){case"PlaneGeometry":case"PlaneBufferGeometry":r=new Lr[a.type](a.width,a.height,a.widthSegments,a.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":r=new Lr[a.type](a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":r=new Lr[a.type](a.radius,a.segments,a.thetaStart,a.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":r=new Lr[a.type](a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":r=new Lr[a.type](a.radius,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":r=new Lr[a.type](a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":r=new Lr[a.type](a.radius,a.detail);break;case"RingGeometry":case"RingBufferGeometry":r=new Lr[a.type](a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":r=new Lr[a.type](a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":r=new Lr[a.type](a.radius,a.tube,a.tubularSegments,a.radialSegments,a.p,a.q);break;case"TubeGeometry":case"TubeBufferGeometry":r=new Lr[a.type]((new Ca[a.path.type]).fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed);break;case"LatheGeometry":case"LatheBufferGeometry":r=new Lr[a.type](a.points,a.segments,a.phiStart,a.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":r=new Lr[a.type](a.vertices,a.indices,a.radius,a.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":i=[];for(let t=0,n=a.shapes.length;t<n;t++){const n=e[a.shapes[t]];i.push(n)}r=new Lr[a.type](i,a.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":i=[];for(let t=0,n=a.shapes.length;t<n;t++){const n=e[a.shapes[t]];i.push(n)}const t=a.options.extrudePath;void 0!==t&&(a.options.extrudePath=(new Ca[t.type]).fromJSON(t)),r=new Lr[a.type](i,a.options);break;case"BufferGeometry":case"InstancedBufferGeometry":r=s.parse(a);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+a.type+'"');continue}r.uuid=a.uuid,void 0!==a.name&&(r.name=a.name),!0===r.isBufferGeometry&&void 0!==a.userData&&(r.userData=a.userData),n[a.uuid]=r}}return n},parseMaterials:function(t,e){const n={},i={};if(void 0!==t){const s=new Za;s.setTextures(e);for(let e=0,o=t.length;e<o;e++){const o=t[e];if("MultiMaterial"===o.type){const t=[];for(let e=0;e<o.materials.length;e++){const i=o.materials[e];void 0===n[i.uuid]&&(n[i.uuid]=s.parse(i)),t.push(n[i.uuid])}i[o.uuid]=t}else void 0===n[o.uuid]&&(n[o.uuid]=s.parse(o)),i[o.uuid]=n[o.uuid]}}return i},parseAnimations:function(t){const e=[];for(let n=0;n<t.length;n++){const i=t[n],s=Kr.parse(i);void 0!==i.uuid&&(s.uuid=i.uuid),e.push(s)}return e},parseImages:function(t,e){const n=this,i={};let s;function o(t){return n.manager.itemStart(t),s.load(t,(function(){n.manager.itemEnd(t)}),void 0,(function(){n.manager.itemError(t),n.manager.itemEnd(t)}))}if(void 0!==t&&t.length>0){const r=new ea(e);s=new ha(r),s.setCrossOrigin(this.crossOrigin);for(let e=0,s=t.length;e<s;e++){const s=t[e],r=s.url;if(Array.isArray(r)){i[s.uuid]=[];for(let t=0,e=r.length;t<e;t++){const e=r[t],a=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e;i[s.uuid].push(o(a))}}else{const t=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(s.url)?s.url:n.resourcePath+s.url;i[s.uuid]=o(t)}}}return i},parseTextures:function(t,e){function n(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const i={};if(void 0!==t)for(let s=0,o=t.length;s<o;s++){const o=t[s];let r;void 0===o.image&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),void 0===e[o.image]&&console.warn("THREE.ObjectLoader: Undefined image",o.image),r=Array.isArray(e[o.image])?new En(e[o.image]):new p(e[o.image]),r.needsUpdate=!0,r.uuid=o.uuid,void 0!==o.name&&(r.name=o.name),void 0!==o.mapping&&(r.mapping=n(o.mapping,nc)),void 0!==o.offset&&r.offset.fromArray(o.offset),void 0!==o.repeat&&r.repeat.fromArray(o.repeat),void 0!==o.center&&r.center.fromArray(o.center),void 0!==o.rotation&&(r.rotation=o.rotation),void 0!==o.wrap&&(r.wrapS=n(o.wrap[0],ic),r.wrapT=n(o.wrap[1],ic)),void 0!==o.format&&(r.format=o.format),void 0!==o.type&&(r.type=o.type),void 0!==o.encoding&&(r.encoding=o.encoding),void 0!==o.minFilter&&(r.minFilter=n(o.minFilter,sc)),void 0!==o.magFilter&&(r.magFilter=n(o.magFilter,sc)),void 0!==o.anisotropy&&(r.anisotropy=o.anisotropy),void 0!==o.flipY&&(r.flipY=o.flipY),void 0!==o.premultiplyAlpha&&(r.premultiplyAlpha=o.premultiplyAlpha),void 0!==o.unpackAlignment&&(r.unpackAlignment=o.unpackAlignment),i[o.uuid]=r}return i},parseObject:function(t,e,n){let i,s,o;function r(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function a(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let i=0,s=t.length;i<s;i++){const s=t[i];void 0===n[s]&&console.warn("THREE.ObjectLoader: Undefined material",s),e.push(n[s])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}switch(t.type){case"Scene":i=new Z,void 0!==t.background&&Number.isInteger(t.background)&&(i.background=new Ft(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?i.fog=new us(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(i.fog=new hs(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":i=new Xe(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(i.focus=t.focus),void 0!==t.zoom&&(i.zoom=t.zoom),void 0!==t.filmGauge&&(i.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(i.filmOffset=t.filmOffset),void 0!==t.view&&(i.view=Object.assign({},t.view));break;case"OrthographicCamera":i=new ka(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(i.zoom=t.zoom),void 0!==t.view&&(i.view=Object.assign({},t.view));break;case"AmbientLight":i=new za(t.color,t.intensity);break;case"DirectionalLight":i=new Wa(t.color,t.intensity);break;case"PointLight":i=new ja(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":i=new Xa(t.color,t.intensity,t.width,t.height);break;case"SpotLight":i=new Fa(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":i=new Ia(t.color,t.groundColor,t.intensity);break;case"LightProbe":i=(new qa).fromJSON(t);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":s=r(t.geometry),o=a(t.material),i=new Pe(s,o);break;case"InstancedMesh":s=r(t.geometry),o=a(t.material);const e=t.count,n=t.instanceMatrix;i=new ks(s,o,e),i.instanceMatrix=new Zt(new Float32Array(n.array),16);break;case"LOD":i=new Ps;break;case"Line":i=new Zs(r(t.geometry),a(t.material),t.mode);break;case"LineLoop":i=new $s(r(t.geometry),a(t.material));break;case"LineSegments":i=new Ks(r(t.geometry),a(t.material));break;case"PointCloud":case"Points":i=new oo(r(t.geometry),a(t.material));break;case"Sprite":i=new Rs(a(t.material));break;case"Group":i=new is;break;default:i=new q}if(i.uuid=t.uuid,void 0!==t.name&&(i.name=t.name),void 0!==t.matrix?(i.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(i.matrixAutoUpdate=t.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(void 0!==t.position&&i.position.fromArray(t.position),void 0!==t.rotation&&i.rotation.fromArray(t.rotation),void 0!==t.quaternion&&i.quaternion.fromArray(t.quaternion),void 0!==t.scale&&i.scale.fromArray(t.scale)),void 0!==t.castShadow&&(i.castShadow=t.castShadow),void 0!==t.receiveShadow&&(i.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(i.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(i.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(i.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&i.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(i.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.frustumCulled&&(i.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(i.renderOrder=t.renderOrder),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.layers&&(i.layers.mask=t.layers),void 0!==t.children){const s=t.children;for(let t=0;t<s.length;t++)i.add(this.parseObject(s[t],e,n))}if("LOD"===t.type){void 0!==t.autoUpdate&&(i.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],s=i.getObjectByProperty("uuid",n.object);void 0!==s&&i.addLevel(s,n.distance)}}return i}});const nc={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,CubeUVReflectionMapping:306,CubeUVRefractionMapping:307},ic={RepeatWrapping:1e3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002},sc={NearestFilter:1003,NearestMipmapNearestFilter:1004,NearestMipmapLinearFilter:1005,LinearFilter:1006,LinearMipmapNearestFilter:1007,LinearMipmapLinearFilter:1008};function oc(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),ia.call(this,t),this.options={premultiplyAlpha:"none"}}function rc(){this.type="ShapePath",this.color=new Ft,this.subPaths=[],this.currentPath=null}function ac(t){this.type="Font",this.data=t}function cc(t,e,n,i,s){const o=s.glyphs[t]||s.glyphs["?"];if(!o)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+s.familyName+".");const r=new rc;let a,c,h,u,l,f,d,m;if(o.o){const t=o.lt||(o.lt=o.o.split(" "));for(let s=0,o=t.length;s<o;){switch(t[s++]){case"m":a=t[s++]*e+n,c=t[s++]*e+i,r.moveTo(a,c);break;case"l":a=t[s++]*e+n,c=t[s++]*e+i,r.lineTo(a,c);break;case"q":h=t[s++]*e+n,u=t[s++]*e+i,l=t[s++]*e+n,f=t[s++]*e+i,r.quadraticCurveTo(l,f,h,u);break;case"b":h=t[s++]*e+n,u=t[s++]*e+i,l=t[s++]*e+n,f=t[s++]*e+i,d=t[s++]*e+n,m=t[s++]*e+i,r.bezierCurveTo(l,f,d,m,h,u)}}}return{offsetX:o.ha*e,path:r}}function hc(t){ia.call(this,t)}let uc;oc.prototype=Object.assign(Object.create(ia.prototype),{constructor:oc,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=ta.get(t);if(void 0!==o)return s.manager.itemStart(t),setTimeout((function(){e&&e(o),s.manager.itemEnd(t)}),0),o;fetch(t).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,s.options)})).then((function(n){ta.add(t,n),e&&e(n),s.manager.itemEnd(t)})).catch((function(e){i&&i(e),s.manager.itemError(t),s.manager.itemEnd(t)})),s.manager.itemStart(t)}}),Object.assign(rc.prototype,{moveTo:function(t,e){return this.currentPath=new Da,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this},bezierCurveTo:function(t,e,n,i,s,o){return this.currentPath.bezierCurveTo(t,e,n,i,s,o),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function n(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n],s=new Ha;s.curves=i.curves,e.push(s)}return e}function i(t,e){const n=e.length;let i=!1;for(let s=n-1,o=0;o<n;s=o++){let n=e[s],r=e[o],a=r.x-n.x,c=r.y-n.y;if(Math.abs(c)>Number.EPSILON){if(c<0&&(n=e[o],a=-a,r=e[s],c=-c),t.y<n.y||t.y>r.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=c*(t.x-n.x)-a*(t.y-n.y);if(0===e)return!0;if(e<0)continue;i=!i}}else{if(t.y!==n.y)continue;if(r.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=r.x)return!0}}return i}const s=nr.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===e)return n(o);let r,a,c,h=[];if(1===o.length)return a=o[0],c=new Ha,c.curves=a.curves,h.push(c),h;let u=!s(o[0].getPoints());u=t?!u:u;const l=[],f=[];let d,m,p=[],v=0;f[v]=void 0,p[v]=[];for(let e=0,n=o.length;e<n;e++)a=o[e],d=a.getPoints(),r=s(d),r=t?!r:r,r?(!u&&f[v]&&v++,f[v]={s:new Ha,p:d},f[v].s.curves=a.curves,u&&v++,p[v]=[]):p[v].push({h:a,p:d[0]});if(!f[0])return n(o);if(f.length>1){let t=!1;const e=[];for(let t=0,e=f.length;t<e;t++)l[t]=[];for(let n=0,s=f.length;n<s;n++){const s=p[n];for(let o=0;o<s.length;o++){const r=s[o];let a=!0;for(let s=0;s<f.length;s++)i(r.p,f[s].p)&&(n!==s&&e.push({froms:n,tos:s,hole:o}),a?(a=!1,l[s].push(r)):t=!0);a&&l[n].push(r)}}e.length>0&&(t||(p=l))}for(let t=0,e=f.length;t<e;t++){c=f[t].s,h.push(c),m=p[t];for(let t=0,e=m.length;t<e;t++)c.holes.push(m[t].h)}return h}}),Object.assign(ac.prototype,{isFont:!0,generateShapes:function(t,e){void 0===e&&(e=100);const n=[],i=function(t,e,n){const i=Array.from?Array.from(t):(t+"").split(""),s=e/n.resolution,o=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*s,r=[];let a=0,c=0;for(let t=0;t<i.length;t++){const e=i[t];if("\n"===e)a=0,c-=o;else{const t=cc(e,s,a,c,n);a+=t.offsetX,r.push(t.path)}}return r}(t,e,this.data);for(let t=0,e=i.length;t<e;t++)Array.prototype.push.apply(n,i[t].toShapes());return n}}),hc.prototype=Object.assign(Object.create(ia.prototype),{constructor:hc,load:function(t,e,n,i){const s=this,o=new oa(this.manager);o.setPath(this.path),o.load(t,(function(t){let n;try{n=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}const i=s.parse(n);e&&e(i)}),n,i)},parse:function(t){return new ac(t)}});const lc=function(){return void 0===uc&&(uc=new(window.AudioContext||window.webkitAudioContext)),uc};function fc(t){ia.call(this,t)}function dc(t,e,n){qa.call(this,void 0,n);const i=(new Ft).set(t),s=(new Ft).set(e),o=new M(i.r,i.g,i.b),r=new M(s.r,s.g,s.b),a=1.7724538509055159;this.sh.coefficients[0].copy(o).add(r).multiplyScalar(a),this.sh.coefficients[1].copy(o).sub(r).multiplyScalar(1.5349900619197325)}function mc(t,e){qa.call(this,void 0,e);const n=(new Ft).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(3.5449077018110318)}fc.prototype=Object.assign(Object.create(ia.prototype),{constructor:fc,load:function(t,e,n,i){const s=this,o=new oa(s.manager);o.setResponseType("arraybuffer"),o.setPath(s.path),o.load(t,(function(n){try{const t=n.slice(0);lc().decodeAudioData(t,(function(t){e(t)}))}catch(e){i?i(e):console.error(e),s.manager.itemError(t)}}),n,i)}}),dc.prototype=Object.assign(Object.create(qa.prototype),{constructor:dc,isHemisphereLightProbe:!0,copy:function(t){return qa.prototype.copy.call(this,t),this},toJSON:function(t){return qa.prototype.toJSON.call(this,t)}}),mc.prototype=Object.assign(Object.create(qa.prototype),{constructor:mc,isAmbientLightProbe:!0,copy:function(t){return qa.prototype.copy.call(this,t),this},toJSON:function(t){return qa.prototype.toJSON.call(this,t)}});const pc=new O,vc=new O;function gc(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Xe,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Xe,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this.ft={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}.prototype,{update:function(t){const e=this.ft;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const n=t.projectionMatrix.clone(),i=e.eyeSep/2,s=i*e.near/e.focus,o=e.near*Math.tan(h.DEG2RAD*e.fov*.5)/e.zoom;let r,a;vc.elements[12]=-i,pc.elements[12]=i,r=-o*e.aspect+s,a=o*e.aspect+s,n.elements[0]=2*e.near/(a-r),n.elements[8]=(a+r)/(a-r),this.cameraL.projectionMatrix.copy(n),r=-o*e.aspect-s,a=o*e.aspect-s,n.elements[0]=2*e.near/(a-r),n.elements[8]=(a+r)/(a-r),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(vc),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(pc)}}),Object.assign(gc.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=("undefined"==typeof performance?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}});const _c=new M,wc=new w,Ec=new M,bc=new M;function Mc(){q.call(this),this.type="AudioListener",this.context=lc(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this.dt=new gc}function Tc(t){q.call(this),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.pt=0,this.vt=0,this.filters=[]}Mc.prototype=Object.assign(Object.create(q.prototype),{constructor:Mc,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this},updateMatrixWorld:function(t){q.prototype.updateMatrixWorld.call(this,t);const e=this.context.listener,n=this.up;if(this.timeDelta=this.dt.getDelta(),this.matrixWorld.decompose(_c,wc,Ec),bc.set(0,0,-1).applyQuaternion(wc),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(_c.x,t),e.positionY.linearRampToValueAtTime(_c.y,t),e.positionZ.linearRampToValueAtTime(_c.z,t),e.forwardX.linearRampToValueAtTime(bc.x,t),e.forwardY.linearRampToValueAtTime(bc.y,t),e.forwardZ.linearRampToValueAtTime(bc.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(_c.x,_c.y,_c.z),e.setOrientation(bc.x,bc.y,bc.z,n.x,n.y,n.z)}}),Tc.prototype=Object.assign(Object.create(q.prototype),{constructor:Tc,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setMediaElementSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this},setMediaStreamSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(t){if(void 0===t&&(t=0),!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this.pt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this.pt,this.vt+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this.vt+=Math.max(this.context.currentTime-this.pt,0)*this.playbackRate,!0===this.loop&&(this.vt=this.vt%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")},stop:function(){if(!1!==this.hasPlaybackControl)return this.vt=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),!0===this.isPlaying?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},setDetune:function(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")},setLoopStart:function(t){return this.loopStart=t,this},setLoopEnd:function(t){return this.loopEnd=t,this},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}});const xc=new M,yc=new w,Sc=new M,Lc=new M;function Rc(t){Tc.call(this,t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}function Ac(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}function Oc(t,e,n){let i,s,o;switch(this.binding=t,this.valueSize=n,e){case"quaternion":i=this.gt,s=this._t,o=this.wt,this.buffer=new Float64Array(6*n),this.Et=5;break;case"string":case"bool":i=this.bt,s=this.bt,o=this.Mt,this.buffer=Array(5*n);break;default:i=this.Tt,s=this.xt,o=this.yt,this.buffer=new Float64Array(5*n)}this.St=i,this.Lt=s,this.Rt=o,this.At=3,this.Ot=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Rc.prototype=Object.assign(Object.create(Tc.prototype),{constructor:Rc,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){return this.panner.refDistance=t,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){return this.panner.rolloffFactor=t,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){return this.panner.distanceModel=t,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){return this.panner.maxDistance=t,this},setDirectionalCone:function(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this},updateMatrixWorld:function(t){if(q.prototype.updateMatrixWorld.call(this,t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(xc,yc,Sc),Lc.set(0,0,1).applyQuaternion(yc);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(xc.x,t),e.positionY.linearRampToValueAtTime(xc.y,t),e.positionZ.linearRampToValueAtTime(xc.z,t),e.orientationX.linearRampToValueAtTime(Lc.x,t),e.orientationY.linearRampToValueAtTime(Lc.y,t),e.orientationZ.linearRampToValueAtTime(Lc.z,t)}else e.setPosition(xc.x,xc.y,xc.z),e.setOrientation(Lc.x,Lc.y,Lc.z)}}),Object.assign(Ac.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}),Object.assign(Oc.prototype,{accumulate:function(t,e){const n=this.buffer,i=this.valueSize,s=t*i+i;let o=this.cumulativeWeight;if(0===o){for(let t=0;t!==i;++t)n[s+t]=n[t];o=e}else{o+=e;const t=e/o;this.St(n,s,0,t,i)}this.cumulativeWeight=o},accumulateAdditive:function(t){const e=this.buffer,n=this.valueSize,i=n*this.Ot;0===this.cumulativeWeightAdditive&&this.Rt(),this.Lt(e,i,0,t,n),this.cumulativeWeightAdditive+=t},apply:function(t){const e=this.valueSize,n=this.buffer,i=t*e+e,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,r=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const t=e*this.At;this.St(n,i,t,1-s,e)}o>0&&this.Lt(n,i,this.Ot*e,1,e);for(let t=e,s=e+e;t!==s;++t)if(n[t]!==n[t+e]){r.setValue(n,i);break}},saveOriginalState:function(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this.At;t.getValue(e,i);for(let t=n,s=i;t!==s;++t)e[t]=e[i+t%n];this.Rt(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)},yt:function(){const t=this.Ot*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0},wt:function(){this.yt(),this.buffer[4*this.Ot+3]=1},Mt:function(){const t=this.At*this.valueSize,e=this.Ot*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]},bt:function(t,e,n,i,s){if(i>=.5)for(let i=0;i!==s;++i)t[e+i]=t[n+i]},gt:function(t,e,n,i){w.slerpFlat(t,e,t,e,t,n,i)},_t:function(t,e,n,i,s){const o=this.Et*s;w.multiplyQuaternionsFlat(t,o,t,e,t,n),w.slerpFlat(t,e,t,e,t,o,i)},Tt:function(t,e,n,i,s){const o=1-i;for(let r=0;r!==s;++r){const s=e+r;t[s]=t[s]*o+t[n+r]*i}},xt:function(t,e,n,i,s){for(let o=0;o!==s;++o){const s=e+o;t[s]=t[s]+t[n+o]*i}}});const Cc=/[\[\]\.:\/]/g,Pc=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),Dc=/(WCOD+)?/.source.replace("WCOD","[^\\[\\]:\\/]"),Hc=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Nc=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Ic=RegExp("^"+Pc+Dc+Hc+Nc+"$"),Gc=["material","materials","bones"];function Uc(t,e,n){const i=n||Fc.parseTrackName(e);this.Ct=t,this.Pt=t.subscribe_(e,i)}function Fc(t,e,n){this.path=e,this.parsedPath=n||Fc.parseTrackName(e),this.node=Fc.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}function Bc(t,e,n,i){this.Dt=t,this.Ht=e,this.Nt=n||null,this.blendMode=i||e.blendMode;const s=e.tracks,o=s.length,r=Array(o),a={endingStart:2400,endingEnd:2400};for(let t=0;t!==o;++t){const e=s[t].createInterpolant(null);r[t]=e,e.settings=a}this.It=a,this.Gt=r,this.Ut=Array(o),this.Ft=null,this.Bt=null,this.jt=null,this.kt=null,this.loop=2201,this.Vt=-1,this.Wt=null,this.time=0,this.timeScale=1,this.zt=1,this.weight=1,this.Xt=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function jc(t){this.Yt=t,this.qt(),this.Zt=0,this.time=0,this.timeScale=1}function kc(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}function Vc(t,e,n){ls.call(this,t,e),this.meshPerAttribute=n||1}function Wc(t,e,n,i){this.ray=new Et(t,e),this.near=n||0,this.far=i||1/0,this.camera=null,this.layers=new H,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function zc(t,e){return t.distance-e.distance}function Xc(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===i){const i=t.children;for(let t=0,s=i.length;t<s;t++)Xc(i[t],e,n,!0)}}function Yc(t,e,n){return this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==n?n:0,this}Object.assign(Uc.prototype,{getValue:function(t,e){this.bind();const n=this.Ct.nCachedObjects_,i=this.Pt[n];void 0!==i&&i.getValue(t,e)},setValue:function(t,e){const n=this.Pt;for(let i=this.Ct.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(t,e)},bind:function(){const t=this.Pt;for(let e=this.Ct.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this.Pt;for(let e=this.Ct.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}),Object.assign(Fc,{Composite:Uc,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new Fc.Composite(t,e,n):new Fc(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(Cc,"")},parseTrackName:function(t){const e=Ic.exec(t);if(!e)throw Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==Gc.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const s=t[i];if(s.name===e||s.uuid===e)return s;const o=n(s.children);if(o)return o}return null},i=n(t.children);if(i)return i}return null}}),Object.assign(Fc.prototype,{Jt:function(){},Qt:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)t[e++]=n[i]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++]},function(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){let t=this.node,e=this.parsedPath,n=e.objectName,i=e.propertyName,s=e.propertyIndex;if(t||(t=Fc.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this.Jt,this.setValue=this.Qt,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const o=t[i];if(void 0===o){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let r=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?r=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(r=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==s){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[s]&&(s=t.morphTargetDictionary[s])}a=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else void 0!==o.fromArray&&void 0!==o.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(a=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][r]},unbind:function(){this.node=null,this.getValue=this.Kt,this.setValue=this.$t}}),Object.assign(Fc.prototype,{Kt:Fc.prototype.getValue,$t:Fc.prototype.setValue}),Object.assign(function(){this.uuid=h.generateUUID(),this.te=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this.ee=t;for(let e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this.ne=[],this.ie=[],this.Pt=[],this.se={};const e=this;this.stats={objects:{get total(){return e.te.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e.Pt.length}}}.prototype,{isAnimationObjectGroup:!0,add:function(){const t=this.te,e=this.ee,n=this.ne,i=this.ie,s=this.Pt,o=s.length;let r=void 0,a=t.length,c=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const u=arguments[h],l=u.uuid;let f=e[l];if(void 0===f){f=a++,e[l]=f,t.push(u);for(let t=0,e=o;t!==e;++t)s[t].push(new Fc(u,n[t],i[t]))}else if(f<c){r=t[f];const a=--c,h=t[a];e[h.uuid]=f,t[f]=h,e[l]=a,t[a]=u;for(let t=0,e=o;t!==e;++t){const e=s[t],o=e[a];let r=e[f];e[f]=o,void 0===r&&(r=new Fc(u,n[t],i[t])),e[a]=r}}else t[f]!==r&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){const t=this.te,e=this.ee,n=this.Pt,i=n.length;let s=this.nCachedObjects_;for(let o=0,r=arguments.length;o!==r;++o){const r=arguments[o],a=r.uuid,c=e[a];if(void 0!==c&&c>=s){const o=s++,h=t[o];e[h.uuid]=c,t[c]=h,e[a]=o,t[o]=r;for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[o],s=e[c];e[c]=i,e[o]=s}}}this.nCachedObjects_=s},uncache:function(){const t=this.te,e=this.ee,n=this.Pt,i=n.length;let s=this.nCachedObjects_,o=t.length;for(let r=0,a=arguments.length;r!==a;++r){const a=arguments[r].uuid,c=e[a];if(void 0!==c)if(delete e[a],c<s){const r=--s,a=t[r],h=--o,u=t[h];e[a.uuid]=c,t[c]=a,e[u.uuid]=r,t[r]=u,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[r],s=e[h];e[c]=i,e[r]=s,e.pop()}}else{const s=--o,r=t[s];e[r.uuid]=c,t[c]=r,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t];e[c]=e[s],e.pop()}}}this.nCachedObjects_=s},subscribe_:function(t,e){let n=this.se,i=n[t],s=this.Pt;if(void 0!==i)return s[i];const o=this.ne,r=this.ie,a=this.te,c=a.length,h=this.nCachedObjects_,u=Array(c);i=s.length,n[t]=i,o.push(t),r.push(e),s.push(u);for(let n=h,i=a.length;n!==i;++n){const i=a[n];u[n]=new Fc(i,t,e)}return u},unsubscribe_:function(t){const e=this.se,n=e[t];if(void 0!==n){const i=this.ne,s=this.ie,o=this.Pt,r=o.length-1,a=o[r];e[t[r]]=n,o[n]=a,o.pop(),s[n]=s[r],s.pop(),i[n]=i[r],i.pop()}}}),Object.assign(Bc.prototype,{play:function(){return this.Dt.oe(this),this},stop:function(){return this.Dt.re(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this.Vt=-1,this.Wt=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this.Wt&&this.Dt.ae(this)},isScheduled:function(){return this.Dt.ae(this)},startAt:function(t){return this.Wt=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this.Xt=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this.Xt},fadeIn:function(t){return this.ce(t,0,1)},fadeOut:function(t){return this.ce(t,1,0)},crossFadeFrom:function(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this.Ht.duration,i=t.Ht.duration,s=i/n,o=n/i;t.warp(1,s,e),this.warp(o,1,e)}return this},crossFadeTo:function(t,e,n){return t.crossFadeFrom(this,e,n)},stopFading:function(){let t=this.kt;return null!==t&&(this.kt=null,this.Dt.he(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this.zt=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this.zt},setDuration:function(t){return this.timeScale=this.Ht.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this.zt,0,t)},warp:function(t,e,n){const i=this.Dt,s=i.time,o=this.timeScale;let r=this.jt;null===r&&(r=i.ue(),this.jt=r);const a=r.parameterPositions,c=r.sampleValues;return a[0]=s,a[1]=s+n,c[0]=t/o,c[1]=e/o,this},stopWarping:function(){let t=this.jt;return null!==t&&(this.jt=null,this.Dt.he(t)),this},getMixer:function(){return this.Dt},getClip:function(){return this.Ht},getRoot:function(){return this.Nt||this.Dt.Yt},le:function(t,e,n,i){if(!this.enabled)return void this.fe(t);const s=this.Wt;if(null!==s){const i=(t-s)*n;if(i<0||0===n)return;this.Wt=null,e=n*i}e*=this.de(t);const o=this.me(e),r=this.fe(t);if(r>0){const t=this.Gt,e=this.Ut;switch(this.blendMode){case 2501:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(o),e[n].accumulateAdditive(r);break;case 2500:default:for(let n=0,s=t.length;n!==s;++n)t[n].evaluate(o),e[n].accumulate(i,r)}}},fe:function(t){let e=0;if(this.enabled){e=this.weight;const n=this.kt;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this.Xt=e,e},de:function(t){let e=0;if(!this.paused){e=this.timeScale;const n=this.jt;if(null!==n){e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this.zt=e,e},me:function(t){const e=this.Ht.duration,n=this.loop;let i=this.time+t,s=this.Vt;const o=2202===n;if(0===t)return-1===s?i:o&&1==(1&s)?e-i:i;if(2200===n){-1===s&&(this.Vt=0,this.pe(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this.Dt.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===s&&(t>=0?(s=0,this.pe(!0,0===this.repetitions,o)):this.pe(0===this.repetitions,!0,o)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,s+=Math.abs(n);const r=this.repetitions-s;if(r<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this.Dt.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===r){const e=t<0;this.pe(e,!e,o)}else this.pe(!1,!1,o);this.Vt=s,this.time=i,this.Dt.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(o&&1==(1&s))return e-i}return i},pe:function(t,e,n){const i=this.It;n?(i.endingStart=2401,i.endingEnd=2401):(i.endingStart=t?this.zeroSlopeAtStart?2401:2400:2402,i.endingEnd=e?this.zeroSlopeAtEnd?2401:2400:2402)},ce:function(t,e,n){const i=this.Dt,s=i.time;let o=this.kt;null===o&&(o=i.ue(),this.kt=o);const r=o.parameterPositions,a=o.sampleValues;return r[0]=s,a[0]=e,r[1]=s+t,a[1]=n,this}}),jc.prototype=Object.assign(Object.create(a.prototype),{constructor:jc,ve:function(t,e){const n=t.Nt||this.Yt,i=t.Ht.tracks,s=i.length,o=t.Ut,r=t.Gt,a=n.uuid,c=this.ge;let h=c[a];void 0===h&&(h={},c[a]=h);for(let t=0;t!==s;++t){const s=i[t],c=s.name;let u=h[c];if(void 0!==u)o[t]=u;else{if(u=o[t],void 0!==u){null===u.Ft&&(++u.referenceCount,this._e(u,a,c));continue}const i=e&&e.Ut[t].binding.parsedPath;u=new Oc(Fc.create(n,c,i),s.ValueTypeName,s.getValueSize()),++u.referenceCount,this._e(u,a,c),o[t]=u}r[t].resultBuffer=u.buffer}},oe:function(t){if(!this.ae(t)){if(null===t.Ft){const e=(t.Nt||this.Yt).uuid,n=t.Ht.uuid,i=this.we[n];this.ve(t,i&&i.knownActions[0]),this.Ee(t,n,e)}const e=t.Ut;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this.be(n),n.saveOriginalState())}this.Me(t)}},re:function(t){if(this.ae(t)){const e=t.Ut;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this.Te(n))}this.xe(t)}},qt:function(){this.ye=[],this.Se=0,this.we={},this.Pt=[],this.Le=0,this.ge={},this.Re=[],this.Ae=0;const t=this;this.stats={actions:{get total(){return t.ye.length},get inUse(){return t.Se}},bindings:{get total(){return t.Pt.length},get inUse(){return t.Le}},controlInterpolants:{get total(){return t.Re.length},get inUse(){return t.Ae}}}},ae:function(t){const e=t.Ft;return null!==e&&e<this.Se},Ee:function(t,e,n){const i=this.ye,s=this.we;let o=s[e];if(void 0===o)o={knownActions:[t],actionByRoot:{}},t.Bt=0,s[e]=o;else{const e=o.knownActions;t.Bt=e.length,e.push(t)}t.Ft=i.length,i.push(t),o.actionByRoot[n]=t},Oe:function(t){const e=this.ye,n=e[e.length-1],i=t.Ft;n.Ft=i,e[i]=n,e.pop(),t.Ft=null;const s=t.Ht.uuid,o=this.we,r=o[s],a=r.knownActions,c=a[a.length-1],h=t.Bt;c.Bt=h,a[h]=c,a.pop(),t.Bt=null;delete r.actionByRoot[(t.Nt||this.Yt).uuid],0===a.length&&delete o[s],this.Ce(t)},Ce:function(t){const e=t.Ut;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this.Pe(n)}},Me:function(t){const e=this.ye,n=t.Ft,i=this.Se++,s=e[i];t.Ft=i,e[i]=t,s.Ft=n,e[n]=s},xe:function(t){const e=this.ye,n=t.Ft,i=--this.Se,s=e[i];t.Ft=i,e[i]=t,s.Ft=n,e[n]=s},_e:function(t,e,n){const i=this.ge,s=this.Pt;let o=i[e];void 0===o&&(o={},i[e]=o),o[n]=t,t.Ft=s.length,s.push(t)},Pe:function(t){const e=this.Pt,n=t.binding,i=n.rootNode.uuid,s=n.path,o=this.ge,r=o[i],a=e[e.length-1],c=t.Ft;a.Ft=c,e[c]=a,e.pop(),delete r[s],0===Object.keys(r).length&&delete o[i]},be:function(t){const e=this.Pt,n=t.Ft,i=this.Le++,s=e[i];t.Ft=i,e[i]=t,s.Ft=n,e[n]=s},Te:function(t){const e=this.Pt,n=t.Ft,i=--this.Le,s=e[i];t.Ft=i,e[i]=t,s.Ft=n,e[n]=s},ue:function(){const t=this.Re,e=this.Ae++;let n=t[e];return void 0===n&&(n=new kr(new Float32Array(2),new Float32Array(2),1,this.De),n.He=e,t[e]=n),n},he:function(t){const e=this.Re,n=t.He,i=--this.Ae,s=e[i];t.He=i,e[i]=t,s.He=n,e[n]=s},De:new Float32Array(1),clipAction:function(t,e,n){const i=e||this.Yt,s=i.uuid;let o="string"==typeof t?Kr.findByName(i,t):t;const r=null!==o?o.uuid:t;let a=this.we[r],c=null;if(void 0===n&&(n=null!==o?o.blendMode:2500),void 0!==a){const t=a.actionByRoot[s];if(void 0!==t&&t.blendMode===n)return t;c=a.knownActions[0],null===o&&(o=c.Ht)}if(null===o)return null;const h=new Bc(this,o,e,n);return this.ve(h,c),this.Ee(h,r,s),h},existingAction:function(t,e){const n=e||this.Yt,i=n.uuid,s="string"==typeof t?Kr.findByName(n,t):t,o=s?s.uuid:t,r=this.we[o];return void 0!==r&&r.actionByRoot[i]||null},stopAllAction:function(){const t=this.ye;for(let e=this.Se-1;e>=0;--e)t[e].stop();return this},update:function(t){t*=this.timeScale;const e=this.ye,n=this.Se,i=this.time+=t,s=Math.sign(t),o=this.Zt^=1;for(let r=0;r!==n;++r){e[r].le(i,t,s,o)}const r=this.Pt,a=this.Le;for(let t=0;t!==a;++t)r[t].apply(o);return this},setTime:function(t){this.time=0;for(let t=0;t<this.ye.length;t++)this.ye[t].time=0;return this.update(t)},getRoot:function(){return this.Yt},uncacheClip:function(t){const e=this.ye,n=t.uuid,i=this.we,s=i[n];if(void 0!==s){const t=s.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this.re(i);const s=i.Ft,o=e[e.length-1];i.Ft=null,i.Bt=null,o.Ft=s,e[s]=o,e.pop(),this.Ce(i)}delete i[n]}},uncacheRoot:function(t){const e=t.uuid,n=this.we;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this.re(i),this.Oe(i))}const i=this.ge[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this.Pe(e)}},uncacheAction:function(t,e){const n=this.existingAction(t,e);null!==n&&(this.re(n),this.Oe(n))}}),kc.prototype.clone=function(){return new kc(void 0===this.value.clone?this.value:this.value.clone())},Vc.prototype=Object.assign(Object.create(ls.prototype),{constructor:Vc,isInstancedInterleavedBuffer:!0,copy:function(t){return ls.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=ls.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=ls.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}),Object.assign(Wc.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e,n){const i=n||[];return Xc(t,this,i,e),i.sort(zc),i},intersectObjects:function(t,e,n){const i=n||[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let n=0,s=t.length;n<s;n++)Xc(t[n],this,i,e);return i.sort(zc),i}}),Object.assign(Yc.prototype,{set:function(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(h.clamp(e/this.radius,-1,1))),this}}),Object.assign(function(t,e,n){return this.radius=void 0!==t?t:1,this.theta=void 0!==e?e:0,this.y=void 0!==n?n:0,this}.prototype,{set:function(t,e,n){return this.radius=t,this.theta=e,this.y=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}});const qc=new u;function Zc(t,e){this.min=void 0!==t?t:new u(1/0,1/0),this.max=void 0!==e?e:new u(-1/0,-1/0)}Object.assign(Zc.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(t,e){const n=qc.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new u),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new u),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new u),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new u),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){return qc.copy(t).clamp(this.min,this.max).sub(t).length()},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});const Jc=new M,Qc=new M;function Kc(t,e){this.start=void 0!==t?t:new M,this.end=void 0!==e?e:new M}function $c(t){q.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Object.assign(Kc.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new M),t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new M),t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new M),this.delta(e).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(t,e){Jc.subVectors(t,this.start),Qc.subVectors(this.end,this.start);const n=Qc.dot(Qc);let i=Qc.dot(Jc)/n;return e&&(i=h.clamp(i,0,1)),i},closestPointToPoint:function(t,e,n){const i=this.closestPointToPointParameter(t,e);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new M),this.delta(n).multiplyScalar(i).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}),$c.prototype=Object.create(q.prototype),$c.prototype.constructor=$c,$c.prototype.isImmediateRenderObject=!0;const th=new M;function eh(t,e){q.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const n=new me,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1,n=32;t<n;t++,e++){const s=t/n*Math.PI*2,o=e/n*Math.PI*2;i.push(Math.cos(s),Math.sin(s),1,Math.cos(o),Math.sin(o),1)}n.setAttribute("position",new ie(i,3));const s=new Vs({fog:!1,toneMapped:!1});this.cone=new Ks(n,s),this.add(this.cone),this.update()}eh.prototype=Object.create(q.prototype),eh.prototype.constructor=eh,eh.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},eh.prototype.update=function(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),th.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(th),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};const nh=new M,ih=new O,sh=new O;function oh(t){const e=function t(e){const n=[];e&&e.isBone&&n.push(e);for(let i=0;i<e.children.length;i++)n.push.apply(n,t(e.children[i]));return n}(t),n=new me,i=[],s=[],o=new Ft(0,0,1),r=new Ft(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(r.r,r.g,r.b))}n.setAttribute("position",new ie(i,3)),n.setAttribute("color",new ie(s,3));const a=new Vs({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});Ks.call(this,n,a),this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}function rh(t,e,n){this.light=t,this.light.updateMatrixWorld(),this.color=n;const i=new fr(e,4,2),s=new Xt({wireframe:!0,fog:!1,toneMapped:!1});Pe.call(this,i,s),this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}oh.prototype=Object.create(Ks.prototype),oh.prototype.constructor=oh,oh.prototype.isSkeletonHelper=!0,oh.prototype.updateMatrixWorld=function(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");sh.getInverse(this.root.matrixWorld);for(let t=0,n=0;t<e.length;t++){const s=e[t];s.parent&&s.parent.isBone&&(ih.multiplyMatrices(sh,s.matrixWorld),nh.setFromMatrixPosition(ih),i.setXYZ(n,nh.x,nh.y,nh.z),ih.multiplyMatrices(sh,s.parent.matrixWorld),nh.setFromMatrixPosition(ih),i.setXYZ(n+1,nh.x,nh.y,nh.z),n+=2)}n.getAttribute("position").needsUpdate=!0,q.prototype.updateMatrixWorld.call(this,t)},rh.prototype=Object.create(Pe.prototype),rh.prototype.constructor=rh,rh.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},rh.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)};const ah=new M,ch=new Ft,hh=new Ft;function uh(t,e,n){q.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new Eo(e);i.rotateY(.5*Math.PI),this.material=new Xt({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(3*s.count);i.setAttribute("color",new Zt(o,3)),this.add(new Pe(i,this.material)),this.update()}function lh(t,e,n,i){t=t||10,e=e||10,n=new Ft(void 0!==n?n:4473924),i=new Ft(void 0!==i?i:8947848);const s=e/2,o=t/e,r=t/2,a=[],c=[];for(let t=0,h=0,u=-r;t<=e;t++,u+=o){a.push(-r,0,u,r,0,u),a.push(u,0,-r,u,0,r);const e=t===s?n:i;e.toArray(c,h),h+=3,e.toArray(c,h),h+=3,e.toArray(c,h),h+=3,e.toArray(c,h),h+=3}const h=new me;h.setAttribute("position",new ie(a,3)),h.setAttribute("color",new ie(c,3));const u=new Vs({vertexColors:!0,toneMapped:!1});Ks.call(this,h,u),this.type="GridHelper"}function fh(t,e,n,i,s,o){t=t||10,e=e||16,n=n||8,i=i||64,s=new Ft(void 0!==s?s:4473924),o=new Ft(void 0!==o?o:8947848);const r=[],a=[];for(let n=0;n<=e;n++){const i=n/e*(2*Math.PI),c=Math.sin(i)*t,h=Math.cos(i)*t;r.push(0,0,0),r.push(c,0,h);const u=1&n?s:o;a.push(u.r,u.g,u.b),a.push(u.r,u.g,u.b)}for(let e=0;e<=n;e++){const c=1&e?s:o,h=t-t/n*e;for(let t=0;t<i;t++){let e=t/i*(2*Math.PI),n=Math.sin(e)*h,s=Math.cos(e)*h;r.push(n,0,s),a.push(c.r,c.g,c.b),e=(t+1)/i*(2*Math.PI),n=Math.sin(e)*h,s=Math.cos(e)*h,r.push(n,0,s),a.push(c.r,c.g,c.b)}}const c=new me;c.setAttribute("position",new ie(r,3)),c.setAttribute("color",new ie(a,3));const h=new Vs({vertexColors:!0,toneMapped:!1});Ks.call(this,c,h),this.type="PolarGridHelper"}uh.prototype=Object.create(q.prototype),uh.prototype.constructor=uh,uh.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},uh.prototype.update=function(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");ch.copy(this.light.color),hh.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const i=t<n/2?ch:hh;e.setXYZ(t,i.r,i.g,i.b)}e.needsUpdate=!0}t.lookAt(ah.setFromMatrixPosition(this.light.matrixWorld).negate())},lh.prototype=Object.assign(Object.create(Ks.prototype),{constructor:lh,copy:function(t){return Ks.prototype.copy.call(this,t),this.geometry.copy(t.geometry),this.material.copy(t.material),this},clone:function(){return(new this.constructor).copy(this)}}),fh.prototype=Object.create(Ks.prototype),fh.prototype.constructor=fh;const dh=new M,mh=new M,ph=new M;function vh(t,e,n){q.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===e&&(e=1);let i=new me;i.setAttribute("position",new ie([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const s=new Vs({fog:!1,toneMapped:!1});this.lightPlane=new Zs(i,s),this.add(this.lightPlane),i=new me,i.setAttribute("position",new ie([0,0,0,0,0,1],3)),this.targetLine=new Zs(i,s),this.add(this.targetLine),this.update()}vh.prototype=Object.create(q.prototype),vh.prototype.constructor=vh,vh.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},vh.prototype.update=function(){dh.setFromMatrixPosition(this.light.matrixWorld),mh.setFromMatrixPosition(this.light.target.matrixWorld),ph.subVectors(mh,dh),this.lightPlane.lookAt(mh),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(mh),this.targetLine.scale.z=ph.length()};const gh=new M,_h=new ze;function wh(t){const e=new me,n=new Vs({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={},r=new Ft(16755200),a=new Ft(16711680),c=new Ft(43775),h=new Ft(16777215),u=new Ft(3355443);function l(t,e,n){f(t,n),f(e,n)}function f(t,e){i.push(0,0,0),s.push(e.r,e.g,e.b),void 0===o[t]&&(o[t]=[]),o[t].push(i.length/3-1)}l("n1","n2",r),l("n2","n4",r),l("n4","n3",r),l("n3","n1",r),l("f1","f2",r),l("f2","f4",r),l("f4","f3",r),l("f3","f1",r),l("n1","f1",r),l("n2","f2",r),l("n3","f3",r),l("n4","f4",r),l("p","n1",a),l("p","n2",a),l("p","n3",a),l("p","n4",a),l("u1","u2",c),l("u2","u3",c),l("u3","u1",c),l("c","t",h),l("p","c",u),l("cn1","cn2",u),l("cn3","cn4",u),l("cf1","cf2",u),l("cf3","cf4",u),e.setAttribute("position",new ie(i,3)),e.setAttribute("color",new ie(s,3)),Ks.call(this,e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}function Eh(t,e,n,i,s,o,r){gh.set(s,o,r).unproject(i);const a=e[t];if(void 0!==a){const t=n.getAttribute("position");for(let e=0,n=a.length;e<n;e++)t.setXYZ(a[e],gh.x,gh.y,gh.z)}}wh.prototype=Object.create(Ks.prototype),wh.prototype.constructor=wh,wh.prototype.update=function(){const t=this.geometry,e=this.pointMap;_h.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Eh("c",e,t,_h,0,0,-1),Eh("t",e,t,_h,0,0,1),Eh("n1",e,t,_h,-1,-1,-1),Eh("n2",e,t,_h,1,-1,-1),Eh("n3",e,t,_h,-1,1,-1),Eh("n4",e,t,_h,1,1,-1),Eh("f1",e,t,_h,-1,-1,1),Eh("f2",e,t,_h,1,-1,1),Eh("f3",e,t,_h,-1,1,1),Eh("f4",e,t,_h,1,1,1),Eh("u1",e,t,_h,.7,1.1,-1),Eh("u2",e,t,_h,-.7,1.1,-1),Eh("u3",e,t,_h,0,2,-1),Eh("cf1",e,t,_h,-1,0,1),Eh("cf2",e,t,_h,1,0,1),Eh("cf3",e,t,_h,0,-1,1),Eh("cf4",e,t,_h,0,1,1),Eh("cn1",e,t,_h,-1,0,-1),Eh("cn2",e,t,_h,1,0,-1),Eh("cn3",e,t,_h,0,-1,-1),Eh("cn4",e,t,_h,0,1,-1),t.getAttribute("position").needsUpdate=!0};const bh=new ht;function Mh(t,e){this.object=t,void 0===e&&(e=16776960);const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),s=new me;s.setIndex(new Zt(n,1)),s.setAttribute("position",new Zt(i,3)),Ks.call(this,s,new Vs({color:e,toneMapped:!1})),this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}function Th(t,e){this.type="Box3Helper",this.box=t,e=e||16776960;const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new me;i.setIndex(new Zt(n,1)),i.setAttribute("position",new ie([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),Ks.call(this,i,new Vs({color:e,toneMapped:!1})),this.type="Box3Helper",this.geometry.computeBoundingSphere()}function xh(t,e,n){this.plane=t,this.size=void 0===e?1:e;const i=void 0!==n?n:16776960,s=new me;s.setAttribute("position",new ie([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),s.computeBoundingSphere(),Zs.call(this,s,new Vs({color:i,toneMapped:!1})),this.type="PlaneHelper";const o=new me;o.setAttribute("position",new ie([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),o.computeBoundingSphere(),this.add(new Pe(o,new Xt({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}Mh.prototype=Object.create(Ks.prototype),Mh.prototype.constructor=Mh,Mh.prototype.update=function(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&bh.setFromObject(this.object),bh.isEmpty())return;const e=bh.min,n=bh.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=e.x,s[4]=n.y,s[5]=n.z,s[6]=e.x,s[7]=e.y,s[8]=n.z,s[9]=n.x,s[10]=e.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=e.z,s[15]=e.x,s[16]=n.y,s[17]=e.z,s[18]=e.x,s[19]=e.y,s[20]=e.z,s[21]=n.x,s[22]=e.y,s[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()},Mh.prototype.setFromObject=function(t){return this.object=t,this.update(),this},Mh.prototype.copy=function(t){return Ks.prototype.copy.call(this,t),this.object=t.object,this},Mh.prototype.clone=function(){return(new this.constructor).copy(this)},Th.prototype=Object.create(Ks.prototype),Th.prototype.constructor=Th,Th.prototype.updateMatrixWorld=function(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),q.prototype.updateMatrixWorld.call(this,t))},xh.prototype=Object.create(Zs.prototype),xh.prototype.constructor=xh,xh.prototype.updateMatrixWorld=function(t){let e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?1:0,this.lookAt(this.plane.normal),q.prototype.updateMatrixWorld.call(this,t)};const yh=new M;let Sh,Lh;function Rh(t,e,n,i,s,o){q.call(this),this.type="ArrowHelper",void 0===t&&(t=new M(0,0,1)),void 0===e&&(e=new M(0,0,0)),void 0===n&&(n=1),void 0===i&&(i=16776960),void 0===s&&(s=.2*n),void 0===o&&(o=.2*s),void 0===Sh&&(Sh=new me,Sh.setAttribute("position",new ie([0,0,0,0,1,0],3)),Lh=new Mr(0,.5,1,5,1),Lh.translate(0,-.5,0)),this.position.copy(e),this.line=new Zs(Sh,new Vs({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Pe(Lh,new Xt({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,s,o)}function Ah(t){const e=[0,0,0,t=t||1,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new me;n.setAttribute("position",new ie(e,3)),n.setAttribute("color",new ie([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));const i=new Vs({vertexColors:!0,toneMapped:!1});Ks.call(this,n,i),this.type="AxesHelper"}Rh.prototype=Object.create(q.prototype),Rh.prototype.constructor=Rh,Rh.prototype.setDirection=function(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{yh.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(yh,e)}},Rh.prototype.setLength=function(t,e,n){void 0===e&&(e=.2*t),void 0===n&&(n=.2*e),this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()},Rh.prototype.setColor=function(t){this.line.material.color.set(t),this.cone.material.color.set(t)},Rh.prototype.copy=function(t){return q.prototype.copy.call(this,t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this},Rh.prototype.clone=function(){return(new this.constructor).copy(this)},Ah.prototype=Object.create(Ks.prototype),Ah.prototype.constructor=Ah;const Oh=[.125,.215,.35,.446,.526,.582],Ch=5+Oh.length,{Ne:Ph,Ie:Dh,Ge:Hh}=(new ka,function(){const t=[],e=[],n=[];let i=8;for(let s=0;s<Ch;s++){const o=Math.pow(2,i);e.push(o);let r=1/o;s>4?r=Oh[s-8+4-1]:0==s&&(r=0),n.push(r);const a=1/(o-1),c=-a/2,h=1+a/2,u=[c,c,h,c,h,h,c,c,h,h,c,h],l=6,f=6,d=3,m=2,p=1,v=new Float32Array(d*f*l),g=new Float32Array(m*f*l),_=new Float32Array(p*f*l);for(let t=0;t<l;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];v.set(i,d*f*t),g.set(u,m*f*t);const s=[t,t,t,t,t,t];_.set(s,p*f*t)}const w=new me;w.setAttribute("position",new Zt(v,d)),w.setAttribute("uv",new Zt(g,m)),w.setAttribute("faceIndex",new Zt(_,p)),t.push(w),i>4&&i--}return{Ne:t,Ie:e,Ge:n}}());function Nh(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Ea.call(this,t),this.type="catmullrom"}fa.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(fa.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(Pa.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=new Fe;for(let n=0,i=t.length;n<i;n++){const i=t[n];e.vertices.push(new M(i.x,i.y,i.z||0))}return e}}),Object.assign(Da.prototype,{fromPoints:function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}}),Nh.prototype=Object.create(Ea.prototype),Object.assign(Nh.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),lh.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},oh.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(ia.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Ja(t)}}),ia.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(ec.prototype,{setTexturePath:function(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}),Object.assign(Zc.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(ht.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(ft.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),Ke.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},Kc.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Object.assign(h,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),h.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),h.ceilPowerOfTwo(t)}}),Object.assign(l.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(O.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new M).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,n,i,s,o){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,s,o)}}),xt.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},w.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},Object.assign(Et.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(Nt.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}}),Object.assign(Nt,{barycoordFromPoint:function(t,e,n,i,s){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Nt.getBarycoord(t,e,n,i,s)},normal:function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Nt.getNormal(t,e,n,i)}}),Object.assign(Ha.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new or(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new gr(this,t)}}),Object.assign(u.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(M.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(v.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Fe.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(t){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.assign(q.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties(q.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(Pe.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(Pe.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(Ps.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Is.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),Ds.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(fa.prototype,"Ue",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),Xe.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(Na.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Zt.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),35048===this.usage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(35048)}}}),Object.assign(Zt.prototype,{setDynamic:function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?35048:35044),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(me.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addAttribute:function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Zt(arguments[1],arguments[2])))},addDrawCall:function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},applyMatrix:function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties(me.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Qa.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}}),Object.defineProperties(Wc.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}}),Object.defineProperties(ls.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),35048===this.usage},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),Object.assign(ls.prototype,{setDynamic:function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?35048:35044),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(rr.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties(kc.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(zt.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ft}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(Pr.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(We.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.assign(as.prototype,{clearTarget:function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(as.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?3001:3e3}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Ki.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(g.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Object.defineProperties(Tc.prototype,{load:{value:function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new fc).load(t,(function(t){e.setBuffer(t)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),Ac.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Ye.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},d.crossOrigin=void 0,d.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const s=new la;s.setCrossOrigin(this.crossOrigin);const o=s.load(t,n,void 0,i);return e&&(o.mapping=e),o},d.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const s=new ua;s.setCrossOrigin(this.crossOrigin);const o=s.load(t,n,void 0,i);return e&&(o.mapping=e),o},d.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},d.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"118"}}));var Ih=function(a,c){var h,l,f,d,m,p;void 0===c&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),c===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=a,this.domElement=c,this.enabled=!0,this.target=new M,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:t,MIDDLE:e,RIGHT:n},this.touches={ONE:i,TWO:o},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return y.phi},this.getAzimuthalAngle=function(){return y.theta},this.saveState=function(){v.target0.copy(v.target),v.position0.copy(v.object.position),v.zoom0=v.object.zoom},this.reset=function(){v.target.copy(v.target0),v.object.position.copy(v.position0),v.object.zoom=v.zoom0,v.object.updateProjectionMatrix(),v.dispatchEvent(g),v.update(),T=b.NONE},this.update=(h=new M,l=(new w).setFromUnitVectors(a.up,new M(0,1,0)),f=l.clone().inverse(),d=new M,m=new w,p=2*Math.PI,function(){var t=v.object.position;h.copy(t).sub(v.target),h.applyQuaternion(l),y.setFromVector3(h),v.autoRotate&&T===b.NONE&&B(2*Math.PI/60/60*v.autoRotateSpeed),v.enableDamping?(y.theta+=S.theta*v.dampingFactor,y.phi+=S.phi*v.dampingFactor):(y.theta+=S.theta,y.phi+=S.phi);var e=v.minAzimuthAngle,n=v.maxAzimuthAngle;return isFinite(e)&&isFinite(n)&&(e<-Math.PI?e+=p:e>Math.PI&&(e-=p),n<-Math.PI?n+=p:n>Math.PI&&(n-=p),y.theta=e<n?Math.max(e,Math.min(n,y.theta)):y.theta>(e+n)/2?Math.max(e,y.theta):Math.min(n,y.theta)),y.phi=Math.max(v.minPolarAngle,Math.min(v.maxPolarAngle,y.phi)),y.makeSafe(),y.radius*=L,y.radius=Math.max(v.minDistance,Math.min(v.maxDistance,y.radius)),!0===v.enableDamping?v.target.addScaledVector(R,v.dampingFactor):v.target.add(R),h.setFromSpherical(y),h.applyQuaternion(f),t.copy(v.target).add(h),v.object.lookAt(v.target),!0===v.enableDamping?(S.theta*=1-v.dampingFactor,S.phi*=1-v.dampingFactor,R.multiplyScalar(1-v.dampingFactor)):(S.set(0,0,0),R.set(0,0,0)),L=1,!!(A||d.distanceToSquared(v.object.position)>x||8*(1-m.dot(v.object.quaternion))>x)&&(v.dispatchEvent(g),d.copy(v.object.position),m.copy(v.object.quaternion),A=!1,!0)}),this.dispose=function(){v.domElement.removeEventListener("contextmenu",ut,!1),v.domElement.removeEventListener("mousedown",nt,!1),v.domElement.removeEventListener("wheel",ot,!1),v.domElement.removeEventListener("touchstart",at,!1),v.domElement.removeEventListener("touchend",ht,!1),v.domElement.removeEventListener("touchmove",ct,!1),v.domElement.ownerDocument.removeEventListener("mousemove",it,!1),v.domElement.ownerDocument.removeEventListener("mouseup",st,!1),v.domElement.removeEventListener("keydown",rt,!1)};var v=this,g={type:"change"},_={type:"start"},E={type:"end"},b={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},T=b.NONE,x=1e-6,y=new Yc,S=new Yc,L=1,R=new M,A=!1,O=new u,C=new u,P=new u,D=new u,H=new u,N=new u,I=new u,G=new u,U=new u;function F(){return Math.pow(.95,v.zoomSpeed)}function B(t){S.theta-=t}function j(t){S.phi-=t}var k,V=(k=new M,function(t,e){k.setFromMatrixColumn(e,0),k.multiplyScalar(-t),R.add(k)}),W=function(){var t=new M;return function(e,n){!0===v.screenSpacePanning?t.setFromMatrixColumn(n,1):(t.setFromMatrixColumn(n,0),t.crossVectors(v.object.up,t)),t.multiplyScalar(e),R.add(t)}}(),z=function(){var t=new M;return function(e,n){var i=v.domElement;if(v.object.isPerspectiveCamera){var s=v.object.position;t.copy(s).sub(v.target);var o=t.length();o*=Math.tan(v.object.fov/2*Math.PI/180),V(2*e*o/i.clientHeight,v.object.matrix),W(2*n*o/i.clientHeight,v.object.matrix)}else v.object.isOrthographicCamera?(V(e*(v.object.right-v.object.left)/v.object.zoom/i.clientWidth,v.object.matrix),W(n*(v.object.top-v.object.bottom)/v.object.zoom/i.clientHeight,v.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),v.enablePan=!1)}}();function X(t){v.object.isPerspectiveCamera?L/=t:v.object.isOrthographicCamera?(v.object.zoom=Math.max(v.minZoom,Math.min(v.maxZoom,v.object.zoom*t)),v.object.updateProjectionMatrix(),A=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),v.enableZoom=!1)}function Y(t){v.object.isPerspectiveCamera?L*=t:v.object.isOrthographicCamera?(v.object.zoom=Math.max(v.minZoom,Math.min(v.maxZoom,v.object.zoom/t)),v.object.updateProjectionMatrix(),A=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),v.enableZoom=!1)}function q(t){O.set(t.clientX,t.clientY)}function Z(t){D.set(t.clientX,t.clientY)}function J(t){if(1==t.touches.length)O.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),n=.5*(t.touches[0].pageY+t.touches[1].pageY);O.set(e,n)}}function Q(t){if(1==t.touches.length)D.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),n=.5*(t.touches[0].pageY+t.touches[1].pageY);D.set(e,n)}}function K(t){var e=t.touches[0].pageX-t.touches[1].pageX,n=t.touches[0].pageY-t.touches[1].pageY,i=Math.sqrt(e*e+n*n);I.set(0,i)}function $(t){if(1==t.touches.length)C.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),n=.5*(t.touches[0].pageY+t.touches[1].pageY);C.set(e,n)}P.subVectors(C,O).multiplyScalar(v.rotateSpeed);var i=v.domElement;B(2*Math.PI*P.x/i.clientHeight),j(2*Math.PI*P.y/i.clientHeight),O.copy(C)}function tt(t){if(1==t.touches.length)H.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),n=.5*(t.touches[0].pageY+t.touches[1].pageY);H.set(e,n)}N.subVectors(H,D).multiplyScalar(v.panSpeed),z(N.x,N.y),D.copy(H)}function et(t){var e=t.touches[0].pageX-t.touches[1].pageX,n=t.touches[0].pageY-t.touches[1].pageY,i=Math.sqrt(e*e+n*n);G.set(0,i),U.set(0,Math.pow(G.y/I.y,v.zoomSpeed)),X(U.y),I.copy(G)}function nt(i){if(!1!==v.enabled){var s;switch(i.preventDefault(),v.domElement.focus?v.domElement.focus():window.focus(),i.button){case 0:s=v.mouseButtons.LEFT;break;case 1:s=v.mouseButtons.MIDDLE;break;case 2:s=v.mouseButtons.RIGHT;break;default:s=-1}switch(s){case e:if(!1===v.enableZoom)return;!function(t){I.set(t.clientX,t.clientY)}(i),T=b.DOLLY;break;case t:if(i.ctrlKey||i.metaKey||i.shiftKey){if(!1===v.enablePan)return;Z(i),T=b.PAN}else{if(!1===v.enableRotate)return;q(i),T=b.ROTATE}break;case n:if(i.ctrlKey||i.metaKey||i.shiftKey){if(!1===v.enableRotate)return;q(i),T=b.ROTATE}else{if(!1===v.enablePan)return;Z(i),T=b.PAN}break;default:T=b.NONE}T!==b.NONE&&(v.domElement.ownerDocument.addEventListener("mousemove",it,!1),v.domElement.ownerDocument.addEventListener("mouseup",st,!1),v.dispatchEvent(_))}}function it(t){if(!1!==v.enabled)switch(t.preventDefault(),T){case b.ROTATE:if(!1===v.enableRotate)return;!function(t){C.set(t.clientX,t.clientY),P.subVectors(C,O).multiplyScalar(v.rotateSpeed);var e=v.domElement;B(2*Math.PI*P.x/e.clientHeight),j(2*Math.PI*P.y/e.clientHeight),O.copy(C),v.update()}(t);break;case b.DOLLY:if(!1===v.enableZoom)return;!function(t){G.set(t.clientX,t.clientY),U.subVectors(G,I),U.y>0?X(F()):U.y<0&&Y(F()),I.copy(G),v.update()}(t);break;case b.PAN:if(!1===v.enablePan)return;!function(t){H.set(t.clientX,t.clientY),N.subVectors(H,D).multiplyScalar(v.panSpeed),z(N.x,N.y),D.copy(H),v.update()}(t)}}function st(t){!1!==v.enabled&&(v.domElement.ownerDocument.removeEventListener("mousemove",it,!1),v.domElement.ownerDocument.removeEventListener("mouseup",st,!1),v.dispatchEvent(E),T=b.NONE)}function ot(t){!1===v.enabled||!1===v.enableZoom||T!==b.NONE&&T!==b.ROTATE||(t.preventDefault(),t.stopPropagation(),v.dispatchEvent(_),function(t){t.deltaY<0?Y(F()):t.deltaY>0&&X(F()),v.update()}(t),v.dispatchEvent(E))}function rt(t){!1!==v.enabled&&!1!==v.enableKeys&&!1!==v.enablePan&&function(t){var e=!1;switch(t.keyCode){case v.keys.UP:z(0,v.keyPanSpeed),e=!0;break;case v.keys.BOTTOM:z(0,-v.keyPanSpeed),e=!0;break;case v.keys.LEFT:z(v.keyPanSpeed,0),e=!0;break;case v.keys.RIGHT:z(-v.keyPanSpeed,0),e=!0}e&&(t.preventDefault(),v.update())}(t)}function at(t){if(!1!==v.enabled){switch(t.preventDefault(),t.touches.length){case 1:switch(v.touches.ONE){case i:if(!1===v.enableRotate)return;J(t),T=b.TOUCH_ROTATE;break;case s:if(!1===v.enablePan)return;Q(t),T=b.TOUCH_PAN;break;default:T=b.NONE}break;case 2:switch(v.touches.TWO){case o:if(!1===v.enableZoom&&!1===v.enablePan)return;!function(t){v.enableZoom&&K(t),v.enablePan&&Q(t)}(t),T=b.TOUCH_DOLLY_PAN;break;case r:if(!1===v.enableZoom&&!1===v.enableRotate)return;!function(t){v.enableZoom&&K(t),v.enableRotate&&J(t)}(t),T=b.TOUCH_DOLLY_ROTATE;break;default:T=b.NONE}break;default:T=b.NONE}T!==b.NONE&&v.dispatchEvent(_)}}function ct(t){if(!1!==v.enabled)switch(t.preventDefault(),t.stopPropagation(),T){case b.TOUCH_ROTATE:if(!1===v.enableRotate)return;$(t),v.update();break;case b.TOUCH_PAN:if(!1===v.enablePan)return;tt(t),v.update();break;case b.TOUCH_DOLLY_PAN:if(!1===v.enableZoom&&!1===v.enablePan)return;!function(t){v.enableZoom&&et(t),v.enablePan&&tt(t)}(t),v.update();break;case b.TOUCH_DOLLY_ROTATE:if(!1===v.enableZoom&&!1===v.enableRotate)return;!function(t){v.enableZoom&&et(t),v.enableRotate&&$(t)}(t),v.update();break;default:T=b.NONE}}function ht(t){!1!==v.enabled&&(v.dispatchEvent(E),T=b.NONE)}function ut(t){!1!==v.enabled&&t.preventDefault()}v.domElement.addEventListener("contextmenu",ut,!1),v.domElement.addEventListener("mousedown",nt,!1),v.domElement.addEventListener("wheel",ot,!1),v.domElement.addEventListener("touchstart",at,!1),v.domElement.addEventListener("touchend",ht,!1),v.domElement.addEventListener("touchmove",ct,!1),v.domElement.addEventListener("keydown",rt,!1),-1===v.domElement.tabIndex&&(v.domElement.tabIndex=0),this.update()};(Ih.prototype=Object.create(a.prototype)).constructor=Ih;var Gh=function(e,i){Ih.call(this,e,i),this.screenSpacePanning=!1,this.mouseButtons.LEFT=n,this.mouseButtons.RIGHT=t,this.touches.ONE=s,this.touches.TWO=r};(Gh.prototype=Object.create(a.prototype)).constructor=Gh;let Uh=null,Fh=null,Bh=null,jh=null,kh=null,Vh=null,Wh=null,zh=null;function Xh(t){return`rgb(${t[0]},${t[1]},${t[2]})`}function Yh(t){return(t[0]<<16)+(t[1]<<8)+t[2]}function qh(t,e,n,i){n&&function(t,e){const n=Xh(e.Be.Fe),i=Xh(e.Be.je);Fh.style.background=`linear-gradient(${n},${i})`,t.add(new za(Yh(e.ke))),e.Ve.forEach(e=>{const n=new ja(Yh(e.We)),[i,s,o]=e.ze;n.position.set(i,s,o),t.add(n)})}(t,n),i&&function(t,e,n){const i=new We({uniforms:Ve.merge([$e.common,$e.lights,{u_tex:{type:"t",value:null},u_palette:{type:"t",value:null}}]),vertexShader:"\nstruct PointLight {\n  vec3 position;\n  vec3 color;\n};\nuniform PointLight pointLights[NUM_POINT_LIGHTS];\nuniform vec3 ambientLightColor;\n\nattribute vec3 uvo;\n\nvarying vec2 v_uv;\nvarying vec3 v_light;\nflat varying uint v_palette_idx;\n\nvoid main() {\n    uint params = uint(uvo.z);\n    uint tex_page = (params & 0x30u) >> 4;\n    uint tex_y = uint(uvo.y) + tex_page * 256u;\n    v_uv = vec2(uvo.x / 255.0, float(tex_y) / 1023.0);\n    v_palette_idx = params & 0x0Fu;\n\n    vec3 normal = normalize(normalMatrix * normal);\n    vec4 position = modelViewMatrix * vec4(position, 1.0);\n\n    vec3 light_sum = vec3(0.0);\n    for (int i = 0; i < NUM_POINT_LIGHTS; i++) {\n        vec3 direction = normalize(pointLights[i].position - position.xyz);\n        float intensity = clamp(dot(normal, direction), 0.0, 1.0);\n        light_sum += pointLights[i].color * intensity;\n    }\n    v_light = (ambientLightColor + light_sum) * 2.0;\n\n    gl_Position = projectionMatrix * position;\n}",fragmentShader:"\nuniform sampler2D u_tex;\nuniform sampler2D u_palette;\n\nvarying vec3 v_light;\nvarying vec2 v_uv;\nflat varying uint v_palette_idx;\n\nvoid main() {\n    vec4 tex_color = texture(u_tex, v_uv) * 255.0;\n    uint palette_pos = v_palette_idx * 16u + uint(tex_color.r);\n\n    vec4 color = texture(u_palette, vec2(float(palette_pos) / 255.0, 0.0));\n    if (color.a < 0.5)\n        discard;\n\n    gl_FragColor = color * vec4(v_light, 1.0);\n}",transparent:!0,lights:!0});i.uniforms.u_tex.value=n,i.uniforms.u_palette.value=e,[0,1].forEach(e=>{t.children[e].material=i})}(t,e,i),kh=t,Wh.add(kh),(new ht).setFromObject(kh).getCenter(jh.target)}class Zh extends class{constructor(t){this.Xe=t}}{async Ye(t){const e=2352*t+24;return this.Xe.slice(e,e+2048).arrayBuffer()}async qe(t,e){const n=Math.ceil(e/2048),i=new Uint8Array(2048*n);for(let e=0;e<n;e++){const n=await this.Ye(t+e),s=new Uint8Array(n);i.set(s,2048*e)}return i.slice(0,e).buffer}}let Jh=null,Qh=null;function Kh(t){Qh.innerHTML=t,Jh.classList.add("active")}class $h{constructor(t){this.Ze=new DataView(t),this.Je=0}Qe(t){return this.Je=t,this}Ke(){const t=this.Ze.getInt8(this.Je);return this.Je+=1,t}$e(){const t=this.Ze.getInt16(this.Je,!0);return this.Je+=2,t}tn(){const t=this.Ze.getInt32(this.Je,!0);return this.Je+=4,t}en(){const t=this.Ze.getUint8(this.Je);return this.Je+=1,t}nn(){const t=this.Ze.getUint16(this.Je,!0);return this.Je+=2,t}in(){const t=this.Ze.getUint32(this.Je,!0);return this.Je+=4,t}}const tu=Object.freeze({sn:16,on:17,rn:25,an:26,cn:27,hn:28,un:31,ln:35,fn:36,dn:37,mn:38,pn:39,vn:40,gn:41,_n:42,wn:43,En:44});function eu(t,e){const n=[];n.length=e;for(let i=0;i<e;i++)n[i]=t();return n}function nu(){this.array=null}function iu(t){return[t.$e(),-t.$e(),t.$e()]}function su(t){return[iu(t),iu(t),iu(t)]}function ou(t){const e=iu(t),n=iu(t),i=iu(t);return[e,n,i,n,iu(t),i]}function ru(t){return t.$e()/4096}function au(t){return[ru(t),-ru(t),ru(t)]}function cu(t){return[t.en(),t.en()]}function hu(t){const e=t.nn(),n=t.nn(),i=t.nn(),s=t.nn(),o=eu(()=>su(t),e).flat(2),r=eu(()=>ou(t),n).flat(2),a=eu(()=>su(t),i).flat(2),c=eu(()=>ou(t),s).flat(2),h=eu(()=>function(t){return[au(t),au(t),au(t)]}(t),e).flat(2),u=eu(()=>function(t){const e=au(t),n=au(t),i=au(t);return[e,n,i,n,au(t),i]}(t),n).flat(2),l=eu(()=>function(t){let e=cu(t);const n=15&t.en();t.en();let i=cu(t);const s=3&t.en();t.en();let o=cu(t);return e=[e[0],e[1],(s<<4)+n],i=[i[0],i[1],(s<<4)+n],o=[o[0],o[1],(s<<4)+n],[e,i,o]}(t),e).flat(2),f=eu(()=>function(t){let e=cu(t);const n=15&t.en();t.en();let i=cu(t);const s=3&t.en();t.en();let o=cu(t),r=cu(t);return e=[e[0],e[1],(s<<4)+n],i=[i[0],i[1],(s<<4)+n],r=[r[0],r[1],(s<<4)+n],o=[o[0],o[1],(s<<4)+n],[e,i,o,i,r,o]}(t),n).flat(2),d=new me;d.setAttribute("position",new ie(o,3).onUpload(nu)),d.setAttribute("normal",new ie(h,3).onUpload(nu)),d.setAttribute("uvo",new Qt(l,3).onUpload(nu));const m=new me;m.setAttribute("position",new ie(r,3).onUpload(nu)),m.setAttribute("normal",new ie(u,3).onUpload(nu)),m.setAttribute("uvo",new Qt(f,3).onUpload(nu));const p=new me,v=new me;p.setAttribute("position",new ie(a,3).onUpload(nu)),v.setAttribute("position",new ie(c,3).onUpload(nu));const g=new Xt({color:0}),_=new is;return _.add(new Pe(d,g),new Pe(m,g),new Pe(p,g),new Pe(v,g)),_.scale.z=-1,_}function uu(t){const e=eu(()=>function(t){return eu(()=>function(t){const e=t.nn();return[(31&e)<<3,(992&e)>>2,(31744&e)>>7,0==e?0:255]}(t),16).flat()}(t),16).flat();return new Ze(new Uint8Array(e),256,1,1023)}function lu(t){const e=ru(t);return 255*Math.min(Math.max(0,e),1)}function fu(t){return[lu(t),lu(t),lu(t)]}function du(t){return[t.en(),t.en(),t.en()]}function mu(t){const e=new $h(t),n=eu(()=>e.in(),48),i={};for(const[t,e]of Object.entries(tu))i[t]=n[e];let s=null;i.sn&&(e.Qe(i.sn),s=hu(e));let o=null;i.on&&(e.Qe(i.on),o=uu(e));let r=null;return i.rn&&(e.Qe(i.rn),r=function(t){const[e,n,i]=fu(t),[s,o,r]=fu(t),[a,c,h]=fu(t);return{Ve:[{We:[e,s,a],ze:iu(t)},{We:[n,o,c],ze:iu(t)},{We:[i,r,h],ze:iu(t)}],ke:du(t),Be:{Fe:du(t),je:du(t)}}}(e)),[s,o,r]}let pu=null,vu=null;async function gu(t){vu.classList.add("disabled"),Wh.remove(kh),zh.remove();const e=JSON.parse(t.target.dataset.items),n=e[0],i=e.slice(1);await async function(t,e){let[n,i,s]=[null,null,null];for(const[,t,o]of e){const[e,r,a]=await _u(t,o);e&&(n=e),r&&(i=r),a&&(s=a)}let o=null;if(t.length){const[,e,n]=t;o=await async function(t,e){return function(t){const e=new $h(t),n=new Uint8Array(262144);let i=0;for(;i<262144;){const t=e.en();n[i++]=15&t,n[i++]=(240&t)>>4}return new Ze(n,256,1024,1024)}(await pu.qe(t,e))}(e,n)}if(null==n)return void Kh("File reading failed :(<br><br>This error usually happens when the disc file the page tries to read no longer exists (eg. it was renamed or deleted).<br><br>Please reload the page and open the file again.<br><br><i>In case the game files were edited, but hold invalid values, that might also cause such issue.</i>");qh(n,i,s,o)}(n,i),vu.classList.remove("disabled")}async function _u(t,e){return mu(await pu.qe(t,e))}let wu=null,Eu=null,bu=null,Mu=0;function Tu(t){t.preventDefault(),t.stopPropagation(),0==Mu&&wu.classList.add("active"),Mu++}function xu(t){t.preventDefault(),t.stopPropagation(),Mu--,0==Mu&&wu.classList.remove("active")}function yu(t){t.preventDefault(),t.stopPropagation()}function Su(t){t.preventDefault(),t.stopPropagation(),wu.classList.remove("active"),Mu=0,Ru(t.dataTransfer.files)}function Lu(){Ru(this.files)}async function Ru(t){if(t.length<1)return void Kh("No files detected. How did this happen?");const e=t[0];if(e.size<45e7){return void Kh(`This file seems to be too small for a CD image: it should be around 600MB, but yours is only ${Math.round(e.size/1048576)}MB.<br><br>Maybe you opened the wrong file?<br><i><small>(It should be a raw disc image of the PSX release,<br>in uncompressed BIN format.)</small></i>`)}if(!function(t){const e=new Uint32Array(t);return 5063493==e[0]?(Kh('Sorry, compressed disc images (ECM files) are not yet supported.<br><br>On Windows, you can uncompress the file using a program called "ECM&nbsp;Decompressor". On Linux, you can use <code>ecm-uncompress</code> from the <code>ecm</code> package.'),!1):4294967040==e[0]&&4294967295==e[1]&&16777215==e[2]||(Kh("Hm, this doesn't look like a valid, raw CD image...<br><br>Unlike regular ISO images, raw CD images also store a specific sector syncronization data, but that is not present in this file.<br><br>Maybe you opened the wrong file?<br><i><small>(It should be a raw disc image of the PSX release,<br>in uncompressed BIN format.)</small></i>"),!1)}(await e.slice(0,24).arrayBuffer()))return;const n=function(t){return new Zh(t)}(e);(function(t){const e=new TextDecoder("windows-1252"),n=e.decode(t.slice(8,40)).trimRight(),i=e.decode(t.slice(40,72)).trimRight();return"PLAYSTATION"!=n?(Kh("Hm, this doesn't look like a valid PSX image...<br><br>This file seems to be a valid disc image, but not a valid PSX image. Game discs have a <code>PLAYSTATION</code> label on their boot sector, but that seems to be missing or incorrect here.<br><br>Maybe you opened the wrong file?"),!1):"FINALFANTASYTACTICS"==i||(Kh(`Hm, this doesn't look like a Final Fantasy Tactics image...<br><br>This file seems to be a valid PSX disc image, but not a Final Fantasy Tactics image. The game disc should be labeled as <code>FINALFANTASYTACTICS</code>, but yours has the name <code>${i}</code>.<br><br>Maybe you opened the wrong file?`),!1)})(await n.qe(16,72))&&(!function(t){pu=t}(n),bu.classList.remove("active"),bu.addEventListener("transitionend",()=>bu.remove(),!1))}window.onload=async()=>{Eu=document.getElementById("fopen-input"),bu=document.getElementById("fopen-modal"),wu=bu.firstElementChild,bu.addEventListener("dragover",yu,!1),bu.addEventListener("dragenter",Tu,!1),bu.addEventListener("dragleave",xu,!1),bu.addEventListener("drop",Su,!1),Eu.addEventListener("change",Lu,!1),function(){Uh=document.getElementById("gl"),Fh=document.getElementById("gl-cont"),zh=document.getElementById("gl-help");const t=Uh.clientWidth/Uh.clientHeight;Wh=new Z,Bh=new ka(512*t/-2,512*t/2,256,-256,-100,1e3),jh=new Ih(Bh,Uh),Vh=new as({canvas:Uh,alpha:!0}),Vh.setSize(Uh.clientWidth,Uh.clientHeight),Bh.position.z=50,Bh.position.y=150,requestAnimationFrame((function t(){jh.update(),Vh.render(Wh,Bh),requestAnimationFrame(t)}))}(),function(){vu=document.getElementById("maplist");for(const t of vu.children)for(const e of t.children[2].children)e.onclick=gu}(),Jh=document.getElementById("error-modal"),Qh=document.getElementById("error-msg"),Jh.querySelector(".btn").onclick=()=>{Jh.classList.remove("active")}},window.onresize=()=>{!function(){Uh.style.width=Fh.clientWidth+"px",Uh.style.height=Fh.clientHeight+"px";const t=Uh.clientWidth/Uh.clientHeight;Bh.left=512*t/-2,Bh.right=512*t/2,Bh.top=256,Bh.bottom=-256,Bh.updateProjectionMatrix(),Vh.setSize(Uh.clientWidth,Uh.clientHeight,!1)}()},window.onerror=(t,e,n,i,s)=>{Kh(`Well, this is embarassing...<br><br>You've run into an unexpected case for which the program was not prepared. Consider reporting this to the author (<code>mmatyas</code>) on the Forum or on Discord!<br><br>Here are the technical details:<br><details><p>An ${s.name} happened at line ${n}:${i}: ${t}</p></details><br>You will probably need to reload the page<br>to make it usable again.`)}}();
